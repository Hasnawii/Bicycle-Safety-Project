;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 12/25/2024 10:07:06 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28E6      	GOTO       230
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00AB      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00AC      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
;MyProject.c,9 :: 		interrupt(){ // TMR0 overflow interrupt occurs every 32ms
;MyProject.c,10 :: 		tick++; //increment tick evey 32ms
0x000B	0x0AA8      	INCF       _tick, 1
;MyProject.c,11 :: 		if(tick==8){ // this condition is true every almost 256 ms
0x000C	0x0828      	MOVF       _tick, 0
0x000D	0x3A08      	XORLW      8
0x000E	0x1D03      	BTFSS      STATUS, 2
0x000F	0x285B      	GOTO       L_interrupt0
;MyProject.c,12 :: 		tick=0;
0x0010	0x01A8      	CLRF       _tick
;MyProject.c,13 :: 		flexA0 = ATD_read0();
0x0011	0x206E      	CALL       _ATD_read0
0x0012	0x0870      	MOVF       R0, 0
0x0013	0x1283      	BCF        STATUS, 5
0x0014	0x00A9      	MOVWF      _flexA0
0x0015	0x0871      	MOVF       R0+1, 0
0x0016	0x00AA      	MOVWF      _flexA0+1
;MyProject.c,14 :: 		flexD0 = (unsigned int)(flexA0*50)/1023;
0x0017	0x3032      	MOVLW      50
0x0018	0x00F4      	MOVWF      R4
0x0019	0x3000      	MOVLW      0
0x001A	0x00F5      	MOVWF      R4+1
0x001B	0x209E      	CALL       _Mul_16X16_U
0x001C	0x30FF      	MOVLW      255
0x001D	0x00F4      	MOVWF      R4
0x001E	0x3003      	MOVLW      3
0x001F	0x00F5      	MOVWF      R4+1
0x0020	0x20C9      	CALL       _Div_16X16_U
0x0021	0x0870      	MOVF       R0, 0
0x0022	0x00A2      	MOVWF      _flexD0
0x0023	0x0871      	MOVF       R0+1, 0
0x0024	0x00A3      	MOVWF      _flexD0+1
;MyProject.c,15 :: 		delay_ms(100);
0x0025	0x3002      	MOVLW      2
0x0026	0x00FB      	MOVWF      R11
0x0027	0x3004      	MOVLW      4
0x0028	0x00FC      	MOVWF      R12
0x0029	0x30BA      	MOVLW      186
0x002A	0x00FD      	MOVWF      R13
L_interrupt1:
0x002B	0x0BFD      	DECFSZ     R13, 1
0x002C	0x282B      	GOTO       L_interrupt1
0x002D	0x0BFC      	DECFSZ     R12, 1
0x002E	0x282B      	GOTO       L_interrupt1
0x002F	0x0BFB      	DECFSZ     R11, 1
0x0030	0x282B      	GOTO       L_interrupt1
0x0031	0x0000      	NOP
;MyProject.c,16 :: 		flexA1 = ATD_read1();
0x0032	0x2084      	CALL       _ATD_read1
0x0033	0x0870      	MOVF       R0, 0
0x0034	0x1283      	BCF        STATUS, 5
0x0035	0x00A4      	MOVWF      _flexA1
0x0036	0x0871      	MOVF       R0+1, 0
0x0037	0x00A5      	MOVWF      _flexA1+1
;MyProject.c,17 :: 		flexD1 = (unsigned int)(flexA1*50)/1023;
0x0038	0x3032      	MOVLW      50
0x0039	0x00F4      	MOVWF      R4
0x003A	0x3000      	MOVLW      0
0x003B	0x00F5      	MOVWF      R4+1
0x003C	0x209E      	CALL       _Mul_16X16_U
0x003D	0x30FF      	MOVLW      255
0x003E	0x00F4      	MOVWF      R4
0x003F	0x3003      	MOVLW      3
0x0040	0x00F5      	MOVWF      R4+1
0x0041	0x20C9      	CALL       _Div_16X16_U
0x0042	0x0870      	MOVF       R0, 0
0x0043	0x00A6      	MOVWF      _flexD1
0x0044	0x0871      	MOVF       R0+1, 0
0x0045	0x00A7      	MOVWF      _flexD1+1
;MyProject.c,18 :: 		if((flexD0>34)||(flexD1>34)){
0x0046	0x0823      	MOVF       _flexD0+1, 0
0x0047	0x3C00      	SUBLW      0
0x0048	0x1D03      	BTFSS      STATUS, 2
0x0049	0x284C      	GOTO       L__interrupt17
0x004A	0x0822      	MOVF       _flexD0, 0
0x004B	0x3C22      	SUBLW      34
L__interrupt17:
0x004C	0x1C03      	BTFSS      STATUS, 0
0x004D	0x2857      	GOTO       L__interrupt14
0x004E	0x0827      	MOVF       _flexD1+1, 0
0x004F	0x3C00      	SUBLW      0
0x0050	0x1D03      	BTFSS      STATUS, 2
0x0051	0x2854      	GOTO       L__interrupt18
0x0052	0x0826      	MOVF       _flexD1, 0
0x0053	0x3C22      	SUBLW      34
L__interrupt18:
0x0054	0x1C03      	BTFSS      STATUS, 0
0x0055	0x2857      	GOTO       L__interrupt14
0x0056	0x2859      	GOTO       L_interrupt4
L__interrupt14:
;MyProject.c,19 :: 		PORTB = PORTB | 0x01;
0x0057	0x1406      	BSF        PORTB, 0
;MyProject.c,20 :: 		} else PORTB = PORTB & 0xFE;
0x0058	0x285B      	GOTO       L_interrupt5
L_interrupt4:
0x0059	0x30FE      	MOVLW      254
0x005A	0x0586      	ANDWF      PORTB, 1
L_interrupt5:
;MyProject.c,21 :: 		}
L_interrupt0:
;MyProject.c,22 :: 		INTCON = INTCON & 0xFB; // clear the interrupt flag
0x005B	0x30FB      	MOVLW      251
0x005C	0x058B      	ANDWF      INTCON, 1
;MyProject.c,23 :: 		}
L_end_interrupt:
L__interrupt16:
0x005D	0x082C      	MOVF       ___savePCLATH, 0
0x005E	0x008A      	MOVWF      PCLATH
0x005F	0x0E2B      	SWAPF      ___saveSTATUS, 0
0x0060	0x0083      	MOVWF      STATUS
0x0061	0x0EFF      	SWAPF      R15, 1
0x0062	0x0E7F      	SWAPF      R15, 0
0x0063	0x0009      	RETFIE
; end of _interrupt
_ATD_init:
;MyProject.c,35 :: 		void ATD_init(void){
;MyProject.c,36 :: 		ADCON0 = 0x41;// ATD ON, Don't GO, Channel 0, Fosc/16
0x0064	0x3041      	MOVLW      65
0x0065	0x1283      	BCF        STATUS, 5
0x0066	0x1303      	BCF        STATUS, 6
0x0067	0x009F      	MOVWF      ADCON0
;MyProject.c,37 :: 		ADCON1 = 0xC0;// all analog channels, 500 KHz, right justified
0x0068	0x30C0      	MOVLW      192
0x0069	0x1683      	BSF        STATUS, 5
0x006A	0x009F      	MOVWF      ADCON1
;MyProject.c,38 :: 		TRISA = 0xFF; }
0x006B	0x30FF      	MOVLW      255
0x006C	0x0085      	MOVWF      TRISA
L_end_ATD_init:
0x006D	0x0008      	RETURN
; end of _ATD_init
_ATD_read0:
;MyProject.c,39 :: 		unsigned int ATD_read0(void){
;MyProject.c,40 :: 		ADCON0 = ADCON0 &  0xC7;
0x006E	0x30C7      	MOVLW      199
0x006F	0x1283      	BCF        STATUS, 5
0x0070	0x1303      	BCF        STATUS, 6
0x0071	0x059F      	ANDWF      ADCON0, 1
;MyProject.c,41 :: 		delay_us(10);
0x0072	0x3006      	MOVLW      6
0x0073	0x00FD      	MOVWF      R13
L_ATD_read08:
0x0074	0x0BFD      	DECFSZ     R13, 1
0x0075	0x2874      	GOTO       L_ATD_read08
0x0076	0x0000      	NOP
;MyProject.c,42 :: 		ADCON0 = ADCON0 | 0x04;// GO
0x0077	0x151F      	BSF        ADCON0, 2
;MyProject.c,43 :: 		while(ADCON0 & 0x04);
L_ATD_read09:
0x0078	0x1D1F      	BTFSS      ADCON0, 2
0x0079	0x287B      	GOTO       L_ATD_read010
0x007A	0x2878      	GOTO       L_ATD_read09
L_ATD_read010:
;MyProject.c,44 :: 		return((ADRESH<<8) | ADRESL); }
0x007B	0x081E      	MOVF       ADRESH, 0
0x007C	0x00F1      	MOVWF      R0+1
0x007D	0x01F0      	CLRF       R0
0x007E	0x1683      	BSF        STATUS, 5
0x007F	0x081E      	MOVF       ADRESL, 0
0x0080	0x04F0      	IORWF      R0, 1
0x0081	0x3000      	MOVLW      0
0x0082	0x04F1      	IORWF      R0+1, 1
L_end_ATD_read0:
0x0083	0x0008      	RETURN
; end of _ATD_read0
_ATD_read1:
;MyProject.c,45 :: 		unsigned int ATD_read1(void){
;MyProject.c,46 :: 		ADCON0 = (ADCON0 &  0xCF)|0x08; // select channel 1
0x0084	0x30CF      	MOVLW      207
0x0085	0x1283      	BCF        STATUS, 5
0x0086	0x1303      	BCF        STATUS, 6
0x0087	0x051F      	ANDWF      ADCON0, 0
0x0088	0x00F0      	MOVWF      R0
0x0089	0x3008      	MOVLW      8
0x008A	0x0470      	IORWF      R0, 0
0x008B	0x009F      	MOVWF      ADCON0
;MyProject.c,47 :: 		delay_us(10);
0x008C	0x3006      	MOVLW      6
0x008D	0x00FD      	MOVWF      R13
L_ATD_read111:
0x008E	0x0BFD      	DECFSZ     R13, 1
0x008F	0x288E      	GOTO       L_ATD_read111
0x0090	0x0000      	NOP
;MyProject.c,48 :: 		ADCON0 = ADCON0 | 0x04;// GO
0x0091	0x151F      	BSF        ADCON0, 2
;MyProject.c,49 :: 		while(ADCON0 & 0x04);
L_ATD_read112:
0x0092	0x1D1F      	BTFSS      ADCON0, 2
0x0093	0x2895      	GOTO       L_ATD_read113
0x0094	0x2892      	GOTO       L_ATD_read112
L_ATD_read113:
;MyProject.c,50 :: 		return((ADRESH<<8) | ADRESL); }
0x0095	0x081E      	MOVF       ADRESH, 0
0x0096	0x00F1      	MOVWF      R0+1
0x0097	0x01F0      	CLRF       R0
0x0098	0x1683      	BSF        STATUS, 5
0x0099	0x081E      	MOVF       ADRESL, 0
0x009A	0x04F0      	IORWF      R0, 1
0x009B	0x3000      	MOVLW      0
0x009C	0x04F1      	IORWF      R0+1, 1
L_end_ATD_read1:
0x009D	0x0008      	RETURN
; end of _ATD_read1
_Mul_16X16_U:
;__Lib_Math.c,136 :: 		
;__Lib_Math.c,143 :: 		
0x009E	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,144 :: 		
0x009F	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,145 :: 		
0x00A0	0x01FB      	CLRF       R11
;__Lib_Math.c,146 :: 		
0x00A1	0x01FA      	CLRF       R10
;__Lib_Math.c,147 :: 		
0x00A2	0x01F9      	CLRF       R9
;__Lib_Math.c,148 :: 		
0x00A3	0x3080      	MOVLW      128
;__Lib_Math.c,149 :: 		
0x00A4	0x00F8      	MOVWF      R8
;__Lib_Math.c,150 :: 		
0x00A5	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,151 :: 		
0x00A6	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,152 :: 		
0x00A7	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,153 :: 		
0x00A8	0x28B2      	GOTO       $+10
;__Lib_Math.c,154 :: 		
0x00A9	0x0874      	MOVF       R4, 0
;__Lib_Math.c,155 :: 		
0x00AA	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,156 :: 		
0x00AB	0x0875      	MOVF       R5, 0
;__Lib_Math.c,157 :: 		
0x00AC	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,158 :: 		
0x00AD	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,159 :: 		
0x00AE	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,160 :: 		
0x00AF	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,161 :: 		
0x00B0	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,162 :: 		
0x00B1	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,163 :: 		
0x00B2	0x1FF0      	BTFSS      R0, 7
;__Lib_Math.c,164 :: 		
0x00B3	0x28BA      	GOTO       $+7
;__Lib_Math.c,165 :: 		
0x00B4	0x0874      	MOVF       R4, 0
;__Lib_Math.c,166 :: 		
0x00B5	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,167 :: 		
0x00B6	0x0875      	MOVF       R5, 0
;__Lib_Math.c,168 :: 		
0x00B7	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,169 :: 		
0x00B8	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,170 :: 		
0x00B9	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,171 :: 		
0x00BA	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,172 :: 		
0x00BB	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,173 :: 		
0x00BC	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,174 :: 		
0x00BD	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,175 :: 		
0x00BE	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,176 :: 		
0x00BF	0x28A5      	GOTO       $-26
;__Lib_Math.c,177 :: 		
0x00C0	0x087B      	MOVF       R11, 0
;__Lib_Math.c,178 :: 		
0x00C1	0x00F3      	MOVWF      R3
;__Lib_Math.c,179 :: 		
0x00C2	0x087A      	MOVF       R10, 0
;__Lib_Math.c,180 :: 		
0x00C3	0x00F2      	MOVWF      R2
;__Lib_Math.c,181 :: 		
0x00C4	0x0879      	MOVF       R9, 0
;__Lib_Math.c,182 :: 		
0x00C5	0x00F1      	MOVWF      R1
;__Lib_Math.c,183 :: 		
0x00C6	0x0878      	MOVF       R8, 0
;__Lib_Math.c,184 :: 		
0x00C7	0x00F0      	MOVWF      R0
;__Lib_Math.c,187 :: 		
L_end_Mul_16X16_U:
0x00C8	0x0008      	RETURN
; end of _Mul_16X16_U
_Div_16X16_U:
;__Lib_Math.c,215 :: 		
;__Lib_Math.c,222 :: 		
0x00C9	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,223 :: 		
0x00CA	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,224 :: 		
0x00CB	0x01F8      	CLRF       R8
;__Lib_Math.c,225 :: 		
0x00CC	0x01F9      	CLRF       R9
;__Lib_Math.c,226 :: 		
0x00CD	0x3010      	MOVLW      16
;__Lib_Math.c,227 :: 		
0x00CE	0x00FC      	MOVWF      R12
;__Lib_Math.c,228 :: 		
0x00CF	0x0D71      	RLF        R1, 0
;__Lib_Math.c,229 :: 		
0x00D0	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,230 :: 		
0x00D1	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,231 :: 		
0x00D2	0x0874      	MOVF       R4, 0
;__Lib_Math.c,232 :: 		
0x00D3	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,233 :: 		
0x00D4	0x0875      	MOVF       R5, 0
;__Lib_Math.c,234 :: 		
0x00D5	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,235 :: 		
0x00D6	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,236 :: 		
0x00D7	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,237 :: 		
0x00D8	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,238 :: 		
0x00D9	0x28E1      	GOTO       $+8
;__Lib_Math.c,239 :: 		
0x00DA	0x0874      	MOVF       R4, 0
;__Lib_Math.c,240 :: 		
0x00DB	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,241 :: 		
0x00DC	0x0875      	MOVF       R5, 0
;__Lib_Math.c,242 :: 		
0x00DD	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,243 :: 		
0x00DE	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,244 :: 		
0x00DF	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,245 :: 		
0x00E0	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,246 :: 		
0x00E1	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,247 :: 		
0x00E2	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,248 :: 		
0x00E3	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,249 :: 		
0x00E4	0x28CF      	GOTO       $-21
;__Lib_Math.c,251 :: 		
L_end_Div_16X16_U:
0x00E5	0x0008      	RETURN
; end of _Div_16X16_U
_main:
;MyProject.c,24 :: 		void main() {
;MyProject.c,25 :: 		TRISB = 0x00;
0x00E6	0x1683      	BSF        STATUS, 5
0x00E7	0x1303      	BCF        STATUS, 6
0x00E8	0x0186      	CLRF       TRISB
;MyProject.c,26 :: 		PORTB = 0x00;
0x00E9	0x1283      	BCF        STATUS, 5
0x00EA	0x0186      	CLRF       PORTB
;MyProject.c,27 :: 		ATD_init();
0x00EB	0x2064      	CALL       _ATD_init
;MyProject.c,28 :: 		OPTION_REG = 0x07; // Osc clock/4, prescale of 256
0x00EC	0x3007      	MOVLW      7
0x00ED	0x0081      	MOVWF      OPTION_REG
;MyProject.c,29 :: 		INTCON = 0xA0; // Global Interrupt Enable and Local Enable the TMR0 Overflow Interrupt
0x00EE	0x30A0      	MOVLW      160
0x00EF	0x008B      	MOVWF      INTCON
;MyProject.c,30 :: 		TMR0 = 0;
0x00F0	0x1283      	BCF        STATUS, 5
0x00F1	0x0181      	CLRF       TMR0
;MyProject.c,31 :: 		while(1){
L_main6:
;MyProject.c,33 :: 		}
0x00F2	0x28F2      	GOTO       L_main6
;MyProject.c,34 :: 		}
L_end_main:
0x00F3	0x28F3      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [96]    _interrupt
0x0064      [10]    _ATD_init
0x006E      [22]    _ATD_read0
0x0084      [26]    _ATD_read1
0x009E      [43]    _Mul_16X16_U
0x00C9      [29]    _Div_16X16_U
0x00E6      [14]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x001E       [1]    ADRESH
0x001F       [1]    ADCON0
0x0020       [2]    ___DoICPAddr
0x0022       [2]    _flexD0
0x0024       [2]    _flexA1
0x0026       [2]    _flexD1
0x0028       [1]    _tick
0x0029       [2]    _flexA0
0x002B       [1]    ___saveSTATUS
0x002C       [1]    ___savePCLATH
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x009E       [1]    ADRESL
0x009F       [1]    ADCON1
