;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 1/10/2025 7:17:17 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2D44      	GOTO       1348
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x1683      	BSF        STATUS, 5
0x0008	0x00A2      	MOVWF      ___saveSTATUS
0x0009	0x080A      	MOVF       PCLATH, 0
0x000A	0x00A1      	MOVWF      ___savePCLATH
0x000B	0x018A      	CLRF       PCLATH
0x000C	0x0870      	MOVF       R0, 0
0x000D	0x1283      	BCF        STATUS, 5
0x000E	0x00A5      	MOVWF      37
0x000F	0x0871      	MOVF       R1, 0
0x0010	0x00A4      	MOVWF      36
0x0011	0x0872      	MOVF       R2, 0
0x0012	0x00A3      	MOVWF      35
0x0013	0x0873      	MOVF       R3, 0
0x0014	0x00A2      	MOVWF      34
0x0015	0x0874      	MOVF       R4, 0
0x0016	0x00A1      	MOVWF      33
;BicycleSafetyProject.c,61 :: 		void interrupt() {
;BicycleSafetyProject.c,79 :: 		if (INTCON & 0x04) {
0x0017	0x1D0B      	BTFSS      INTCON, 2
0x0018	0x290D      	GOTO       L_interrupt0
;BicycleSafetyProject.c,80 :: 		tick++;                  // Increment Timer0 counter (~32ms per increment)
0x0019	0x0AB9      	INCF       _tick, 1
;BicycleSafetyProject.c,81 :: 		tick3++;                 // Increment hall sensor pulse counter
0x001A	0x0AB8      	INCF       _tick3, 1
;BicycleSafetyProject.c,82 :: 		tick4++;                 // Increment speed calculation counter
0x001B	0x0ABE      	INCF       _tick4, 1
;BicycleSafetyProject.c,85 :: 		if (tick == 2) {
0x001C	0x0839      	MOVF       _tick, 0
0x001D	0x3A02      	XORLW      2
0x001E	0x1D03      	BTFSS      STATUS, 2
0x001F	0x285F      	GOTO       L_interrupt1
;BicycleSafetyProject.c,86 :: 		tick = 0;
0x0020	0x01B9      	CLRF       _tick
;BicycleSafetyProject.c,89 :: 		flexA0 = ATD_read0();
0x0021	0x23B1      	CALL       _ATD_read0
0x0022	0x0870      	MOVF       R0, 0
0x0023	0x1283      	BCF        STATUS, 5
0x0024	0x00E1      	MOVWF      _flexA0
0x0025	0x0871      	MOVF       R0+1, 0
0x0026	0x00E2      	MOVWF      _flexA0+1
;BicycleSafetyProject.c,90 :: 		flexD0 = (unsigned int)(flexA0 * 50) / 1023;  // Scale AN0 reading
0x0027	0x3032      	MOVLW      50
0x0028	0x00F4      	MOVWF      R4
0x0029	0x3000      	MOVLW      0
0x002A	0x00F5      	MOVWF      R4+1
0x002B	0x23C9      	CALL       _Mul_16X16_U
0x002C	0x30FF      	MOVLW      255
0x002D	0x00F4      	MOVWF      R4
0x002E	0x3003      	MOVLW      3
0x002F	0x00F5      	MOVWF      R4+1
0x0030	0x23F4      	CALL       _Div_16X16_U
0x0031	0x0870      	MOVF       R0, 0
0x0032	0x00E3      	MOVWF      _flexD0
0x0033	0x0871      	MOVF       R0+1, 0
0x0034	0x00E4      	MOVWF      _flexD0+1
;BicycleSafetyProject.c,91 :: 		flexA1 = ATD_read1();
0x0035	0x249A      	CALL       _ATD_read1
0x0036	0x0870      	MOVF       R0, 0
0x0037	0x1283      	BCF        STATUS, 5
0x0038	0x00D3      	MOVWF      _flexA1
0x0039	0x0871      	MOVF       R0+1, 0
0x003A	0x00D4      	MOVWF      _flexA1+1
;BicycleSafetyProject.c,92 :: 		flexD1 = (unsigned int)(flexA1 * 50) / 1023;  // Scale AN1 reading
0x003B	0x3032      	MOVLW      50
0x003C	0x00F4      	MOVWF      R4
0x003D	0x3000      	MOVLW      0
0x003E	0x00F5      	MOVWF      R4+1
0x003F	0x23C9      	CALL       _Mul_16X16_U
0x0040	0x30FF      	MOVLW      255
0x0041	0x00F4      	MOVWF      R4
0x0042	0x3003      	MOVLW      3
0x0043	0x00F5      	MOVWF      R4+1
0x0044	0x23F4      	CALL       _Div_16X16_U
0x0045	0x0870      	MOVF       R0, 0
0x0046	0x00C5      	MOVWF      _flexD1
0x0047	0x0871      	MOVF       R0+1, 0
0x0048	0x00C6      	MOVWF      _flexD1+1
;BicycleSafetyProject.c,95 :: 		if ((flexD0 > 34) || (flexD1 > 34)) {
0x0049	0x0864      	MOVF       _flexD0+1, 0
0x004A	0x3C00      	SUBLW      0
0x004B	0x1D03      	BTFSS      STATUS, 2
0x004C	0x284F      	GOTO       L__interrupt74
0x004D	0x0863      	MOVF       _flexD0, 0
0x004E	0x3C22      	SUBLW      34
L__interrupt74:
0x004F	0x1C03      	BTFSS      STATUS, 0
0x0050	0x285A      	GOTO       L__interrupt71
0x0051	0x0846      	MOVF       _flexD1+1, 0
0x0052	0x3C00      	SUBLW      0
0x0053	0x1D03      	BTFSS      STATUS, 2
0x0054	0x2857      	GOTO       L__interrupt75
0x0055	0x0845      	MOVF       _flexD1, 0
0x0056	0x3C22      	SUBLW      34
L__interrupt75:
0x0057	0x1C03      	BTFSS      STATUS, 0
0x0058	0x285A      	GOTO       L__interrupt71
0x0059	0x285D      	GOTO       L_interrupt4
L__interrupt71:
;BicycleSafetyProject.c,96 :: 		PORTD |= 0x03;
0x005A	0x3003      	MOVLW      3
0x005B	0x0488      	IORWF      PORTD, 1
;BicycleSafetyProject.c,97 :: 		} else {
0x005C	0x285F      	GOTO       L_interrupt5
L_interrupt4:
;BicycleSafetyProject.c,98 :: 		PORTD &= 0xFC;
0x005D	0x30FC      	MOVLW      252
0x005E	0x0588      	ANDWF      PORTD, 1
;BicycleSafetyProject.c,99 :: 		}
L_interrupt5:
;BicycleSafetyProject.c,100 :: 		}
L_interrupt1:
;BicycleSafetyProject.c,102 :: 		if (!(PORTE & 0x01)) {   // Check if right turn button is pressed
0x005F	0x1809      	BTFSC      PORTE, 0
0x0060	0x2864      	GOTO       L_interrupt6
;BicycleSafetyProject.c,103 :: 		PORTD |= 0x04;      // Turn on RD2 (right turn signal)
0x0061	0x1508      	BSF        PORTD, 2
;BicycleSafetyProject.c,104 :: 		rturn = 1;          // Set right turn flag
0x0062	0x3001      	MOVLW      1
0x0063	0x00C7      	MOVWF      _rturn
;BicycleSafetyProject.c,105 :: 		}
L_interrupt6:
;BicycleSafetyProject.c,106 :: 		if (!(PORTE & 0x02)) {   // Check if left turn button is pressed
0x0064	0x1889      	BTFSC      PORTE, 1
0x0065	0x2869      	GOTO       L_interrupt7
;BicycleSafetyProject.c,107 :: 		PORTD |= 0x08;      // Turn on RD2 (left turn signal)
0x0066	0x1588      	BSF        PORTD, 3
;BicycleSafetyProject.c,108 :: 		lturn = 1;          // Set left turn flag
0x0067	0x3001      	MOVLW      1
0x0068	0x00C2      	MOVWF      _lturn
;BicycleSafetyProject.c,109 :: 		}
L_interrupt7:
;BicycleSafetyProject.c,111 :: 		if (!(PORTE & 0x04)) {             // if button is pressed
0x0069	0x1909      	BTFSC      PORTE, 2
0x006A	0x2872      	GOTO       L_interrupt8
;BicycleSafetyProject.c,112 :: 		servo_flag = 1;                 // enable servo flag
0x006B	0x3001      	MOVLW      1
0x006C	0x00B6      	MOVWF      _servo_flag
;BicycleSafetyProject.c,113 :: 		toggle_servo = !toggle_servo;    //opposite value of toggle
0x006D	0x082C      	MOVF       _toggle_servo, 0
0x006E	0x3001      	MOVLW      1
0x006F	0x1D03      	BTFSS      STATUS, 2
0x0070	0x3000      	MOVLW      0
0x0071	0x00AC      	MOVWF      _toggle_servo
;BicycleSafetyProject.c,114 :: 		}
L_interrupt8:
;BicycleSafetyProject.c,117 :: 		if (rturn == 1) {
0x0072	0x0847      	MOVF       _rturn, 0
0x0073	0x3A01      	XORLW      1
0x0074	0x1D03      	BTFSS      STATUS, 2
0x0075	0x2887      	GOTO       L_interrupt9
;BicycleSafetyProject.c,118 :: 		tick1++;             // Increment right turn duration counter
0x0076	0x0ABA      	INCF       _tick1, 1
;BicycleSafetyProject.c,119 :: 		ticka++;             // Increment right turn blinking interval counter
0x0077	0x0ABF      	INCF       _ticka, 1
;BicycleSafetyProject.c,121 :: 		if (ticka == 15) {   // Toggle(right turn signal) every ~480ms
0x0078	0x083F      	MOVF       _ticka, 0
0x0079	0x3A0F      	XORLW      15
0x007A	0x1D03      	BTFSS      STATUS, 2
0x007B	0x287F      	GOTO       L_interrupt10
;BicycleSafetyProject.c,122 :: 		ticka = 0;
0x007C	0x01BF      	CLRF       _ticka
;BicycleSafetyProject.c,123 :: 		PORTD ^= 0x04;   // Toggle RD1
0x007D	0x3004      	MOVLW      4
0x007E	0x0688      	XORWF      PORTD, 1
;BicycleSafetyProject.c,124 :: 		}
L_interrupt10:
;BicycleSafetyProject.c,125 :: 		if (tick1 == 150) {  // Stop right turn signal after ~5 seconds
0x007F	0x083A      	MOVF       _tick1, 0
0x0080	0x3A96      	XORLW      150
0x0081	0x1D03      	BTFSS      STATUS, 2
0x0082	0x2887      	GOTO       L_interrupt11
;BicycleSafetyProject.c,126 :: 		tick1 = 0;
0x0083	0x01BA      	CLRF       _tick1
;BicycleSafetyProject.c,127 :: 		rturn = 0;
0x0084	0x01C7      	CLRF       _rturn
;BicycleSafetyProject.c,128 :: 		PORTD &= 0xFB;   // Turn off RD1
0x0085	0x30FB      	MOVLW      251
0x0086	0x0588      	ANDWF      PORTD, 1
;BicycleSafetyProject.c,129 :: 		}
L_interrupt11:
;BicycleSafetyProject.c,130 :: 		}
L_interrupt9:
;BicycleSafetyProject.c,133 :: 		if (lturn == 1) {
0x0087	0x0842      	MOVF       _lturn, 0
0x0088	0x3A01      	XORLW      1
0x0089	0x1D03      	BTFSS      STATUS, 2
0x008A	0x289C      	GOTO       L_interrupt12
;BicycleSafetyProject.c,134 :: 		tick2++;             // Increment left turn duration counter
0x008B	0x0AB7      	INCF       _tick2, 1
;BicycleSafetyProject.c,135 :: 		tickb++;             // Increment left turn blinking interval counter
0x008C	0x0ABB      	INCF       _tickb, 1
;BicycleSafetyProject.c,137 :: 		if (tickb == 15) {   // Toggle (left turn signal) every ~480ms
0x008D	0x083B      	MOVF       _tickb, 0
0x008E	0x3A0F      	XORLW      15
0x008F	0x1D03      	BTFSS      STATUS, 2
0x0090	0x2894      	GOTO       L_interrupt13
;BicycleSafetyProject.c,138 :: 		tickb = 0;
0x0091	0x01BB      	CLRF       _tickb
;BicycleSafetyProject.c,139 :: 		PORTD ^= 0x08;   // Toggle RD2
0x0092	0x3008      	MOVLW      8
0x0093	0x0688      	XORWF      PORTD, 1
;BicycleSafetyProject.c,140 :: 		}
L_interrupt13:
;BicycleSafetyProject.c,141 :: 		if (tick2 == 150) {  // Stop left turn signal after ~5 seconds
0x0094	0x0837      	MOVF       _tick2, 0
0x0095	0x3A96      	XORLW      150
0x0096	0x1D03      	BTFSS      STATUS, 2
0x0097	0x289C      	GOTO       L_interrupt14
;BicycleSafetyProject.c,142 :: 		tick2 = 0;
0x0098	0x01B7      	CLRF       _tick2
;BicycleSafetyProject.c,143 :: 		lturn = 0;
0x0099	0x01C2      	CLRF       _lturn
;BicycleSafetyProject.c,144 :: 		PORTD &= 0xF7;   // Turn off RD2
0x009A	0x30F7      	MOVLW      247
0x009B	0x0588      	ANDWF      PORTD, 1
;BicycleSafetyProject.c,145 :: 		}
L_interrupt14:
;BicycleSafetyProject.c,146 :: 		}
L_interrupt12:
;BicycleSafetyProject.c,150 :: 		if (tick3 == 3) {
0x009C	0x0838      	MOVF       _tick3, 0
0x009D	0x3A03      	XORLW      3
0x009E	0x1D03      	BTFSS      STATUS, 2
0x009F	0x28C0      	GOTO       L_interrupt15
;BicycleSafetyProject.c,151 :: 		tick3 = 0;
0x00A0	0x01B8      	CLRF       _tick3
;BicycleSafetyProject.c,154 :: 		hallA2 = ATD_read2();
0x00A1	0x247E      	CALL       _ATD_read2
0x00A2	0x0870      	MOVF       R0, 0
0x00A3	0x1283      	BCF        STATUS, 5
0x00A4	0x00C3      	MOVWF      _hallA2
0x00A5	0x0871      	MOVF       R0+1, 0
0x00A6	0x00C4      	MOVWF      _hallA2+1
;BicycleSafetyProject.c,155 :: 		hallD2 = (unsigned int)(hallA2 * 50) / 1023;
0x00A7	0x3032      	MOVLW      50
0x00A8	0x00F4      	MOVWF      R4
0x00A9	0x3000      	MOVLW      0
0x00AA	0x00F5      	MOVWF      R4+1
0x00AB	0x23C9      	CALL       _Mul_16X16_U
0x00AC	0x30FF      	MOVLW      255
0x00AD	0x00F4      	MOVWF      R4
0x00AE	0x3003      	MOVLW      3
0x00AF	0x00F5      	MOVWF      R4+1
0x00B0	0x23F4      	CALL       _Div_16X16_U
0x00B1	0x0870      	MOVF       R0, 0
0x00B2	0x00CD      	MOVWF      _hallD2
0x00B3	0x0871      	MOVF       R0+1, 0
0x00B4	0x00CE      	MOVWF      _hallD2+1
;BicycleSafetyProject.c,158 :: 		if (hallD2 > 10) {
0x00B5	0x0871      	MOVF       R0+1, 0
0x00B6	0x3C00      	SUBLW      0
0x00B7	0x1D03      	BTFSS      STATUS, 2
0x00B8	0x28BB      	GOTO       L__interrupt76
0x00B9	0x0870      	MOVF       R0, 0
0x00BA	0x3C0A      	SUBLW      10
L__interrupt76:
0x00BB	0x1803      	BTFSC      STATUS, 0
0x00BC	0x28C0      	GOTO       L_interrupt16
;BicycleSafetyProject.c,159 :: 		pulse++;
0x00BD	0x0ABC      	INCF       _pulse, 1
0x00BE	0x1903      	BTFSC      STATUS, 2
0x00BF	0x0ABD      	INCF       _pulse+1, 1
;BicycleSafetyProject.c,160 :: 		}
L_interrupt16:
;BicycleSafetyProject.c,161 :: 		}
L_interrupt15:
;BicycleSafetyProject.c,164 :: 		if (tick4 == 219) {
0x00C0	0x083E      	MOVF       _tick4, 0
0x00C1	0x3ADB      	XORLW      219
0x00C2	0x1D03      	BTFSS      STATUS, 2
0x00C3	0x28FA      	GOTO       L_interrupt17
;BicycleSafetyProject.c,165 :: 		tick4 = 0;
0x00C4	0x01BE      	CLRF       _tick4
;BicycleSafetyProject.c,168 :: 		dis = (unsigned long)(314 * 35 * pulse) / 2;
0x00C5	0x30EE      	MOVLW      238
0x00C6	0x00F0      	MOVWF      R0
0x00C7	0x302A      	MOVLW      42
0x00C8	0x00F1      	MOVWF      R0+1
0x00C9	0x083C      	MOVF       _pulse, 0
0x00CA	0x00F4      	MOVWF      R4
0x00CB	0x083D      	MOVF       _pulse+1, 0
0x00CC	0x00F5      	MOVWF      R4+1
0x00CD	0x23C9      	CALL       _Mul_16X16_U
0x00CE	0x0870      	MOVF       R0, 0
0x00CF	0x00F5      	MOVWF      R5
0x00D0	0x0871      	MOVF       R0+1, 0
0x00D1	0x00F6      	MOVWF      R5+1
0x00D2	0x01F7      	CLRF       R5+2
0x00D3	0x01F8      	CLRF       R5+3
0x00D4	0x0875      	MOVF       R5, 0
0x00D5	0x00F0      	MOVWF      R0
0x00D6	0x0876      	MOVF       R5+1, 0
0x00D7	0x00F1      	MOVWF      R0+1
0x00D8	0x0877      	MOVF       R5+2, 0
0x00D9	0x00F2      	MOVWF      R0+2
0x00DA	0x0878      	MOVF       R5+3, 0
0x00DB	0x00F3      	MOVWF      R0+3
0x00DC	0x0CF3      	RRF        R0+3, 1
0x00DD	0x0CF2      	RRF        R0+2, 1
0x00DE	0x0CF1      	RRF        R0+1, 1
0x00DF	0x0CF0      	RRF        R0, 1
0x00E0	0x13F3      	BCF        R0+3, 7
0x00E1	0x0870      	MOVF       R0, 0
0x00E2	0x00CF      	MOVWF      _dis
0x00E3	0x0871      	MOVF       R0+1, 0
0x00E4	0x00D0      	MOVWF      _dis+1
0x00E5	0x0872      	MOVF       R0+2, 0
0x00E6	0x00D1      	MOVWF      _dis+2
0x00E7	0x0873      	MOVF       R0+3, 0
0x00E8	0x00D2      	MOVWF      _dis+3
;BicycleSafetyProject.c,171 :: 		v = (unsigned long) dis / 700;
0x00E9	0x30BC      	MOVLW      188
0x00EA	0x00F4      	MOVWF      R4
0x00EB	0x3002      	MOVLW      2
0x00EC	0x00F5      	MOVWF      R4+1
0x00ED	0x01F6      	CLRF       R4+2
0x00EE	0x01F7      	CLRF       R4+3
0x00EF	0x2152      	CALL       _Div_32x32_U
0x00F0	0x0870      	MOVF       R0, 0
0x00F1	0x00C8      	MOVWF      _v
0x00F2	0x0871      	MOVF       R0+1, 0
0x00F3	0x00C9      	MOVWF      _v+1
0x00F4	0x0872      	MOVF       R0+2, 0
0x00F5	0x00CA      	MOVWF      _v+2
0x00F6	0x0873      	MOVF       R0+3, 0
0x00F7	0x00CB      	MOVWF      _v+3
;BicycleSafetyProject.c,174 :: 		pulse = 0;
0x00F8	0x01BC      	CLRF       _pulse
0x00F9	0x01BD      	CLRF       _pulse+1
;BicycleSafetyProject.c,175 :: 		}
L_interrupt17:
;BicycleSafetyProject.c,178 :: 		if (sonar_e) {
0x00FA	0x082B      	MOVF       _sonar_e, 0
0x00FB	0x1903      	BTFSC      STATUS, 2
0x00FC	0x290B      	GOTO       L_interrupt18
;BicycleSafetyProject.c,179 :: 		tick5++;
0x00FD	0x0ACC      	INCF       _tick5, 1
;BicycleSafetyProject.c,180 :: 		PIE2 &= 0xFE;   //disable CCP2 interrupt disable
0x00FE	0x30FE      	MOVLW      254
0x00FF	0x1683      	BSF        STATUS, 5
0x0100	0x058D      	ANDWF      PIE2, 1
;BicycleSafetyProject.c,181 :: 		T1CON = 0x18;
0x0101	0x3018      	MOVLW      24
0x0102	0x1283      	BCF        STATUS, 5
0x0103	0x0090      	MOVWF      T1CON
;BicycleSafetyProject.c,182 :: 		if (tick5 == 4) {
0x0104	0x084C      	MOVF       _tick5, 0
0x0105	0x3A04      	XORLW      4
0x0106	0x1D03      	BTFSS      STATUS, 2
0x0107	0x290B      	GOTO       L_interrupt19
;BicycleSafetyProject.c,183 :: 		tick5 = 0;
0x0108	0x01CC      	CLRF       _tick5
;BicycleSafetyProject.c,184 :: 		sonar_read1();        // Trigger ultrasonic sensor 1 reading
0x0109	0x2411      	CALL       _sonar_read1
;BicycleSafetyProject.c,185 :: 		sonar_read2();        // Trigger ultrasonic sensor 2 reading
0x010A	0x24B6      	CALL       _sonar_read2
;BicycleSafetyProject.c,186 :: 		}
L_interrupt19:
;BicycleSafetyProject.c,187 :: 		}
L_interrupt18:
;BicycleSafetyProject.c,189 :: 		INTCON &= 0xFB;           // Clear Timer0 Interrupt flag
0x010B	0x30FB      	MOVLW      251
0x010C	0x058B      	ANDWF      INTCON, 1
;BicycleSafetyProject.c,190 :: 		}
L_interrupt0:
;BicycleSafetyProject.c,192 :: 		if (PIR1 & 0x01) {            // Timer1 Overflow Interrupt
0x010D	0x1C0C      	BTFSS      PIR1, 0
0x010E	0x2917      	GOTO       L_interrupt20
;BicycleSafetyProject.c,193 :: 		T1overflow++;
0x010F	0x0ADB      	INCF       _T1overflow, 1
0x0110	0x1903      	BTFSC      STATUS, 2
0x0111	0x0ADC      	INCF       _T1overflow+1, 1
;BicycleSafetyProject.c,194 :: 		T2overflow++;
0x0112	0x0AD9      	INCF       _T2overflow, 1
0x0113	0x1903      	BTFSC      STATUS, 2
0x0114	0x0ADA      	INCF       _T2overflow+1, 1
;BicycleSafetyProject.c,195 :: 		PIR1 &= 0xFE;             // Clear Timer1 Overflow Interrupt flag
0x0115	0x30FE      	MOVLW      254
0x0116	0x058C      	ANDWF      PIR1, 1
;BicycleSafetyProject.c,196 :: 		}
L_interrupt20:
;BicycleSafetyProject.c,199 :: 		if (PIR2 & 0x01) {
0x0117	0x1C0D      	BTFSS      PIR2, 0
0x0118	0x2940      	GOTO       L_interrupt21
;BicycleSafetyProject.c,200 :: 		if(HL){ //high
0x0119	0x086F      	MOVF       _HL, 0
0x011A	0x1903      	BTFSC      STATUS, 2
0x011B	0x2929      	GOTO       L_interrupt22
;BicycleSafetyProject.c,201 :: 		CCPR2H= angle >>8;
0x011C	0x082E      	MOVF       _angle+1, 0
0x011D	0x00F0      	MOVWF      R0
0x011E	0x01F1      	CLRF       R0+1
0x011F	0x0870      	MOVF       R0, 0
0x0120	0x009C      	MOVWF      CCPR2H
;BicycleSafetyProject.c,202 :: 		CCPR2L= angle;
0x0121	0x082D      	MOVF       _angle, 0
0x0122	0x009B      	MOVWF      CCPR2L
;BicycleSafetyProject.c,203 :: 		HL = 0;//next time low
0x0123	0x01EF      	CLRF       _HL
;BicycleSafetyProject.c,204 :: 		CCP2CON=0x09;//next time Falling edge
0x0124	0x3009      	MOVLW      9
0x0125	0x009D      	MOVWF      CCP2CON
;BicycleSafetyProject.c,205 :: 		TMR1H=0;
0x0126	0x018F      	CLRF       TMR1H
;BicycleSafetyProject.c,206 :: 		TMR1L=0;
0x0127	0x018E      	CLRF       TMR1L
;BicycleSafetyProject.c,207 :: 		} else {  //low
0x0128	0x293E      	GOTO       L_interrupt23
L_interrupt22:
;BicycleSafetyProject.c,208 :: 		CCPR2H = (40000 - angle) >>8;
0x0129	0x082D      	MOVF       _angle, 0
0x012A	0x3C40      	SUBLW      64
0x012B	0x00F3      	MOVWF      R3
0x012C	0x082E      	MOVF       _angle+1, 0
0x012D	0x1C03      	BTFSS      STATUS, 0
0x012E	0x3E01      	ADDLW      1
0x012F	0x3C9C      	SUBLW      156
0x0130	0x00F4      	MOVWF      R3+1
0x0131	0x0874      	MOVF       R3+1, 0
0x0132	0x00F0      	MOVWF      R0
0x0133	0x01F1      	CLRF       R0+1
0x0134	0x0870      	MOVF       R0, 0
0x0135	0x009C      	MOVWF      CCPR2H
;BicycleSafetyProject.c,209 :: 		CCPR2L = (40000 - angle);
0x0136	0x0873      	MOVF       R3, 0
0x0137	0x009B      	MOVWF      CCPR2L
;BicycleSafetyProject.c,210 :: 		CCP2CON = 0x08; //next time rising edge
0x0138	0x3008      	MOVLW      8
0x0139	0x009D      	MOVWF      CCP2CON
;BicycleSafetyProject.c,211 :: 		HL = 1; //next time High
0x013A	0x3001      	MOVLW      1
0x013B	0x00EF      	MOVWF      _HL
;BicycleSafetyProject.c,212 :: 		TMR1H = 0;
0x013C	0x018F      	CLRF       TMR1H
;BicycleSafetyProject.c,213 :: 		TMR1L = 0;
0x013D	0x018E      	CLRF       TMR1L
;BicycleSafetyProject.c,214 :: 		}
L_interrupt23:
;BicycleSafetyProject.c,215 :: 		PIR2 &= 0xFE;
0x013E	0x30FE      	MOVLW      254
0x013F	0x058D      	ANDWF      PIR2, 1
;BicycleSafetyProject.c,216 :: 		}
L_interrupt21:
;BicycleSafetyProject.c,217 :: 		}
L_end_interrupt:
L__interrupt73:
0x0140	0x0825      	MOVF       37, 0
0x0141	0x00F0      	MOVWF      R0
0x0142	0x0824      	MOVF       36, 0
0x0143	0x00F1      	MOVWF      R1
0x0144	0x0823      	MOVF       35, 0
0x0145	0x00F2      	MOVWF      R2
0x0146	0x0822      	MOVF       34, 0
0x0147	0x00F3      	MOVWF      R3
0x0148	0x0821      	MOVF       33, 0
0x0149	0x00F4      	MOVWF      R4
0x014A	0x1683      	BSF        STATUS, 5
0x014B	0x0821      	MOVF       ___savePCLATH, 0
0x014C	0x008A      	MOVWF      PCLATH
0x014D	0x0E22      	SWAPF      ___saveSTATUS, 0
0x014E	0x0083      	MOVWF      STATUS
0x014F	0x0EFF      	SWAPF      R15, 1
0x0150	0x0E7F      	SWAPF      R15, 0
0x0151	0x0009      	RETFIE
; end of _interrupt
_Div_32x32_U:
;__Lib_Math.c,1318 :: 		
;__Lib_Math.c,1327 :: 		
;__Lib_Math.c,1329 :: 		
0x0152	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,1330 :: 		
0x0153	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,1331 :: 		
0x0154	0x01FB      	CLRF       R11
;__Lib_Math.c,1332 :: 		
0x0155	0x01FA      	CLRF       R10
;__Lib_Math.c,1333 :: 		
0x0156	0x01F9      	CLRF       R9
;__Lib_Math.c,1334 :: 		
0x0157	0x01F8      	CLRF       R8
;__Lib_Math.c,1336 :: 		
0x0158	0x01A0      	CLRF       ___math_tempb
;__Lib_Math.c,1338 :: 		
0x0159	0x0D73      	RLF        R3, 0
;__Lib_Math.c,1339 :: 		
0x015A	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,1340 :: 		
0x015B	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1341 :: 		
0x015C	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,1342 :: 		
0x015D	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1343 :: 		
0x015E	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1344 :: 		
0x015F	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1345 :: 		
0x0160	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,1346 :: 		
0x0161	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1347 :: 		
0x0162	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1348 :: 		
0x0163	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1349 :: 		
0x0164	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,1350 :: 		
0x0165	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1351 :: 		
0x0166	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1352 :: 		
0x0167	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1353 :: 		
0x0168	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,1355 :: 		
0x0169	0x0100      	CLRW
;__Lib_Math.c,1356 :: 		
0x016A	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1357 :: 		
0x016B	0x3001      	MOVLW      1
;__Lib_Math.c,1358 :: 		
0x016C	0x02A0      	SUBWF      ___math_tempb, 1
;__Lib_Math.c,1359 :: 		
0x016D	0x0DF3      	RLF        R3, 1
;__Lib_Math.c,1361 :: 		
0x016E	0x3007      	MOVLW      7
;__Lib_Math.c,1362 :: 		
0x016F	0x00FC      	MOVWF      R12
;__Lib_Math.c,1364 :: 		
LOOPU3232A:
;__Lib_Math.c,1365 :: 		
0x0170	0x0D73      	RLF        R3, 0
;__Lib_Math.c,1366 :: 		
0x0171	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,1367 :: 		
0x0172	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,1368 :: 		
0x0173	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,1369 :: 		
0x0174	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,1370 :: 		
0x0175	0x0DA0      	RLF        ___math_tempb, 1
;__Lib_Math.c,1371 :: 		
0x0176	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1372 :: 		
0x0177	0x1C73      	BTFSS      R3, 0
;__Lib_Math.c,1373 :: 		
0x0178	0x298B      	GOTO       UADD22LA
;__Lib_Math.c,1375 :: 		
0x0179	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,1376 :: 		
0x017A	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1377 :: 		
0x017B	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1378 :: 		
0x017C	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1379 :: 		
0x017D	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,1380 :: 		
0x017E	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1381 :: 		
0x017F	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1382 :: 		
0x0180	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1383 :: 		
0x0181	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,1384 :: 		
0x0182	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1385 :: 		
0x0183	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1386 :: 		
0x0184	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1387 :: 		
0x0185	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,1388 :: 		
0x0186	0x0100      	CLRW
;__Lib_Math.c,1389 :: 		
0x0187	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1390 :: 		
0x0188	0x3001      	MOVLW      1
;__Lib_Math.c,1391 :: 		
0x0189	0x02A0      	SUBWF      ___math_tempb, 1
;__Lib_Math.c,1392 :: 		
0x018A	0x299C      	GOTO       UOK22LA
;__Lib_Math.c,1394 :: 		
UADD22LA:
;__Lib_Math.c,1395 :: 		
0x018B	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1396 :: 		
0x018C	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1397 :: 		
0x018D	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1398 :: 		
0x018E	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1399 :: 		
0x018F	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1400 :: 		
0x0190	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1401 :: 		
0x0191	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1402 :: 		
0x0192	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1403 :: 		
0x0193	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1404 :: 		
0x0194	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1405 :: 		
0x0195	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1406 :: 		
0x0196	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1407 :: 		
0x0197	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1408 :: 		
0x0198	0x0100      	CLRW
;__Lib_Math.c,1409 :: 		
0x0199	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1410 :: 		
0x019A	0x3001      	MOVLW      1
;__Lib_Math.c,1411 :: 		
0x019B	0x07A0      	ADDWF      ___math_tempb, 1
;__Lib_Math.c,1413 :: 		
UOK22LA:
;__Lib_Math.c,1414 :: 		
0x019C	0x0DF3      	RLF        R3, 1
;__Lib_Math.c,1416 :: 		
0x019D	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,1417 :: 		
0x019E	0x2970      	GOTO       LOOPU3232A
;__Lib_Math.c,1419 :: 		
0x019F	0x0D72      	RLF        R2, 0
;__Lib_Math.c,1420 :: 		
0x01A0	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,1421 :: 		
0x01A1	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,1422 :: 		
0x01A2	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,1423 :: 		
0x01A3	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,1424 :: 		
0x01A4	0x0DA0      	RLF        ___math_tempb, 1
;__Lib_Math.c,1425 :: 		
0x01A5	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1426 :: 		
0x01A6	0x1C73      	BTFSS      R3, 0
;__Lib_Math.c,1427 :: 		
0x01A7	0x29BA      	GOTO       UADD22L8
;__Lib_Math.c,1429 :: 		
0x01A8	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,1430 :: 		
0x01A9	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1431 :: 		
0x01AA	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1432 :: 		
0x01AB	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1433 :: 		
0x01AC	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,1434 :: 		
0x01AD	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1435 :: 		
0x01AE	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1436 :: 		
0x01AF	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1437 :: 		
0x01B0	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,1438 :: 		
0x01B1	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1439 :: 		
0x01B2	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1440 :: 		
0x01B3	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1441 :: 		
0x01B4	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,1442 :: 		
0x01B5	0x0100      	CLRW
;__Lib_Math.c,1443 :: 		
0x01B6	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1444 :: 		
0x01B7	0x3001      	MOVLW      1
;__Lib_Math.c,1445 :: 		
0x01B8	0x02A0      	SUBWF      ___math_tempb, 1
;__Lib_Math.c,1446 :: 		
0x01B9	0x29CB      	GOTO       UOK22L8
;__Lib_Math.c,1448 :: 		
UADD22L8:
;__Lib_Math.c,1449 :: 		
0x01BA	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1450 :: 		
0x01BB	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1451 :: 		
0x01BC	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1452 :: 		
0x01BD	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1453 :: 		
0x01BE	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1454 :: 		
0x01BF	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1455 :: 		
0x01C0	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1456 :: 		
0x01C1	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1457 :: 		
0x01C2	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1458 :: 		
0x01C3	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1459 :: 		
0x01C4	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1460 :: 		
0x01C5	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1461 :: 		
0x01C6	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1462 :: 		
0x01C7	0x0100      	CLRW
;__Lib_Math.c,1463 :: 		
0x01C8	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1464 :: 		
0x01C9	0x3001      	MOVLW      1
;__Lib_Math.c,1465 :: 		
0x01CA	0x07A0      	ADDWF      ___math_tempb, 1
;__Lib_Math.c,1467 :: 		
UOK22L8:
;__Lib_Math.c,1468 :: 		
0x01CB	0x0DF2      	RLF        R2, 1
;__Lib_Math.c,1470 :: 		
0x01CC	0x3007      	MOVLW      7
;__Lib_Math.c,1471 :: 		
0x01CD	0x00FC      	MOVWF      R12
;__Lib_Math.c,1473 :: 		
LOOPU3232B:
;__Lib_Math.c,1474 :: 		
0x01CE	0x0D72      	RLF        R2, 0
;__Lib_Math.c,1475 :: 		
0x01CF	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,1476 :: 		
0x01D0	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,1477 :: 		
0x01D1	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,1478 :: 		
0x01D2	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,1479 :: 		
0x01D3	0x0DA0      	RLF        ___math_tempb, 1
;__Lib_Math.c,1480 :: 		
0x01D4	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1481 :: 		
0x01D5	0x1C72      	BTFSS      R2, 0
;__Lib_Math.c,1482 :: 		
0x01D6	0x29E9      	GOTO       UADD22LB
;__Lib_Math.c,1484 :: 		
0x01D7	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,1485 :: 		
0x01D8	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1486 :: 		
0x01D9	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1487 :: 		
0x01DA	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1488 :: 		
0x01DB	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,1489 :: 		
0x01DC	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1490 :: 		
0x01DD	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1491 :: 		
0x01DE	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1492 :: 		
0x01DF	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,1493 :: 		
0x01E0	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1494 :: 		
0x01E1	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1495 :: 		
0x01E2	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1496 :: 		
0x01E3	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,1497 :: 		
0x01E4	0x0100      	CLRW
;__Lib_Math.c,1498 :: 		
0x01E5	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1499 :: 		
0x01E6	0x3001      	MOVLW      1
;__Lib_Math.c,1500 :: 		
0x01E7	0x02A0      	SUBWF      ___math_tempb, 1
;__Lib_Math.c,1501 :: 		
0x01E8	0x29FA      	GOTO       UOK22LB
;__Lib_Math.c,1503 :: 		
UADD22LB:
;__Lib_Math.c,1504 :: 		
0x01E9	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1505 :: 		
0x01EA	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1506 :: 		
0x01EB	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1507 :: 		
0x01EC	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1508 :: 		
0x01ED	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1509 :: 		
0x01EE	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1510 :: 		
0x01EF	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1511 :: 		
0x01F0	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1512 :: 		
0x01F1	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1513 :: 		
0x01F2	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1514 :: 		
0x01F3	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1515 :: 		
0x01F4	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1516 :: 		
0x01F5	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1517 :: 		
0x01F6	0x0100      	CLRW
;__Lib_Math.c,1518 :: 		
0x01F7	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1519 :: 		
0x01F8	0x3001      	MOVLW      1
;__Lib_Math.c,1520 :: 		
0x01F9	0x07A0      	ADDWF      ___math_tempb, 1
;__Lib_Math.c,1522 :: 		
UOK22LB:
;__Lib_Math.c,1523 :: 		
0x01FA	0x0DF2      	RLF        R2, 1
;__Lib_Math.c,1525 :: 		
0x01FB	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,1526 :: 		
0x01FC	0x29CE      	GOTO       LOOPU3232B
;__Lib_Math.c,1528 :: 		
0x01FD	0x0D71      	RLF        R1, 0
;__Lib_Math.c,1529 :: 		
0x01FE	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,1530 :: 		
0x01FF	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,1531 :: 		
0x0200	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,1532 :: 		
0x0201	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,1533 :: 		
0x0202	0x0DA0      	RLF        ___math_tempb, 1
;__Lib_Math.c,1534 :: 		
0x0203	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1535 :: 		
0x0204	0x1C72      	BTFSS      R2, 0
;__Lib_Math.c,1536 :: 		
0x0205	0x2A18      	GOTO       UADD22L16
;__Lib_Math.c,1538 :: 		
0x0206	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,1539 :: 		
0x0207	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1540 :: 		
0x0208	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1541 :: 		
0x0209	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1542 :: 		
0x020A	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,1543 :: 		
0x020B	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1544 :: 		
0x020C	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1545 :: 		
0x020D	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1546 :: 		
0x020E	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,1547 :: 		
0x020F	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1548 :: 		
0x0210	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1549 :: 		
0x0211	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1550 :: 		
0x0212	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,1551 :: 		
0x0213	0x0100      	CLRW
;__Lib_Math.c,1552 :: 		
0x0214	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1553 :: 		
0x0215	0x3001      	MOVLW      1
;__Lib_Math.c,1554 :: 		
0x0216	0x02A0      	SUBWF      ___math_tempb, 1
;__Lib_Math.c,1555 :: 		
0x0217	0x2A29      	GOTO       UOK22L16
;__Lib_Math.c,1557 :: 		
UADD22L16:
;__Lib_Math.c,1558 :: 		
0x0218	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1559 :: 		
0x0219	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1560 :: 		
0x021A	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1561 :: 		
0x021B	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1562 :: 		
0x021C	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1563 :: 		
0x021D	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1564 :: 		
0x021E	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1565 :: 		
0x021F	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1566 :: 		
0x0220	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1567 :: 		
0x0221	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1568 :: 		
0x0222	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1569 :: 		
0x0223	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1570 :: 		
0x0224	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1571 :: 		
0x0225	0x0100      	CLRW
;__Lib_Math.c,1572 :: 		
0x0226	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1573 :: 		
0x0227	0x3001      	MOVLW      1
;__Lib_Math.c,1574 :: 		
0x0228	0x07A0      	ADDWF      ___math_tempb, 1
;__Lib_Math.c,1576 :: 		
UOK22L16:
;__Lib_Math.c,1577 :: 		
0x0229	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,1579 :: 		
0x022A	0x3007      	MOVLW      7
;__Lib_Math.c,1580 :: 		
0x022B	0x00FC      	MOVWF      R12
;__Lib_Math.c,1582 :: 		
LOOPU3232C:
;__Lib_Math.c,1583 :: 		
0x022C	0x0D71      	RLF        R1, 0
;__Lib_Math.c,1584 :: 		
0x022D	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,1585 :: 		
0x022E	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,1586 :: 		
0x022F	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,1587 :: 		
0x0230	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,1588 :: 		
0x0231	0x0DA0      	RLF        ___math_tempb, 1
;__Lib_Math.c,1589 :: 		
0x0232	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1590 :: 		
0x0233	0x1C71      	BTFSS      R1, 0
;__Lib_Math.c,1591 :: 		
0x0234	0x2A47      	GOTO       UADD22LC
;__Lib_Math.c,1593 :: 		
0x0235	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,1594 :: 		
0x0236	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1595 :: 		
0x0237	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1596 :: 		
0x0238	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1597 :: 		
0x0239	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,1598 :: 		
0x023A	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1599 :: 		
0x023B	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1600 :: 		
0x023C	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1601 :: 		
0x023D	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,1602 :: 		
0x023E	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1603 :: 		
0x023F	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1604 :: 		
0x0240	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1605 :: 		
0x0241	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,1606 :: 		
0x0242	0x0100      	CLRW
;__Lib_Math.c,1607 :: 		
0x0243	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1608 :: 		
0x0244	0x3001      	MOVLW      1
;__Lib_Math.c,1609 :: 		
0x0245	0x02A0      	SUBWF      ___math_tempb, 1
;__Lib_Math.c,1610 :: 		
0x0246	0x2A58      	GOTO       UOK22LC
;__Lib_Math.c,1612 :: 		
UADD22LC:
;__Lib_Math.c,1613 :: 		
0x0247	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1614 :: 		
0x0248	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1615 :: 		
0x0249	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1616 :: 		
0x024A	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1617 :: 		
0x024B	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1618 :: 		
0x024C	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1619 :: 		
0x024D	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1620 :: 		
0x024E	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1621 :: 		
0x024F	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1622 :: 		
0x0250	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1623 :: 		
0x0251	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1624 :: 		
0x0252	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1625 :: 		
0x0253	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1626 :: 		
0x0254	0x0100      	CLRW
;__Lib_Math.c,1627 :: 		
0x0255	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1628 :: 		
0x0256	0x3001      	MOVLW      1
;__Lib_Math.c,1629 :: 		
0x0257	0x07A0      	ADDWF      ___math_tempb, 1
;__Lib_Math.c,1631 :: 		
UOK22LC:
;__Lib_Math.c,1632 :: 		
0x0258	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,1634 :: 		
0x0259	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,1635 :: 		
0x025A	0x2A2C      	GOTO       LOOPU3232C
;__Lib_Math.c,1637 :: 		
0x025B	0x0D70      	RLF        R0, 0
;__Lib_Math.c,1638 :: 		
0x025C	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,1639 :: 		
0x025D	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,1640 :: 		
0x025E	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,1641 :: 		
0x025F	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,1642 :: 		
0x0260	0x0DA0      	RLF        ___math_tempb, 1
;__Lib_Math.c,1643 :: 		
0x0261	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1644 :: 		
0x0262	0x1C71      	BTFSS      R1, 0
;__Lib_Math.c,1645 :: 		
0x0263	0x2A76      	GOTO       UADD22L24
;__Lib_Math.c,1647 :: 		
0x0264	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,1648 :: 		
0x0265	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1649 :: 		
0x0266	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1650 :: 		
0x0267	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1651 :: 		
0x0268	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,1652 :: 		
0x0269	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1653 :: 		
0x026A	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1654 :: 		
0x026B	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1655 :: 		
0x026C	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,1656 :: 		
0x026D	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1657 :: 		
0x026E	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1658 :: 		
0x026F	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1659 :: 		
0x0270	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,1660 :: 		
0x0271	0x0100      	CLRW
;__Lib_Math.c,1661 :: 		
0x0272	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1662 :: 		
0x0273	0x3001      	MOVLW      1
;__Lib_Math.c,1663 :: 		
0x0274	0x02A0      	SUBWF      ___math_tempb, 1
;__Lib_Math.c,1664 :: 		
0x0275	0x2A87      	GOTO       UOK22L24
;__Lib_Math.c,1666 :: 		
UADD22L24:
;__Lib_Math.c,1667 :: 		
0x0276	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1668 :: 		
0x0277	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1669 :: 		
0x0278	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1670 :: 		
0x0279	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1671 :: 		
0x027A	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1672 :: 		
0x027B	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1673 :: 		
0x027C	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1674 :: 		
0x027D	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1675 :: 		
0x027E	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1676 :: 		
0x027F	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1677 :: 		
0x0280	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1678 :: 		
0x0281	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1679 :: 		
0x0282	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1680 :: 		
0x0283	0x0100      	CLRW
;__Lib_Math.c,1681 :: 		
0x0284	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1682 :: 		
0x0285	0x3001      	MOVLW      1
;__Lib_Math.c,1683 :: 		
0x0286	0x07A0      	ADDWF      ___math_tempb, 1
;__Lib_Math.c,1685 :: 		
UOK22L24:
;__Lib_Math.c,1686 :: 		
0x0287	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,1688 :: 		
0x0288	0x3007      	MOVLW      7
;__Lib_Math.c,1689 :: 		
0x0289	0x00FC      	MOVWF      R12
;__Lib_Math.c,1691 :: 		
LOOPU3232D:
;__Lib_Math.c,1692 :: 		
0x028A	0x0D70      	RLF        R0, 0
;__Lib_Math.c,1693 :: 		
0x028B	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,1694 :: 		
0x028C	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,1695 :: 		
0x028D	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,1696 :: 		
0x028E	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,1697 :: 		
0x028F	0x0DA0      	RLF        ___math_tempb, 1
;__Lib_Math.c,1698 :: 		
0x0290	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1699 :: 		
0x0291	0x1C70      	BTFSS      R0, 0
;__Lib_Math.c,1700 :: 		
0x0292	0x2AA5      	GOTO       UADD22LD
;__Lib_Math.c,1702 :: 		
0x0293	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,1703 :: 		
0x0294	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1704 :: 		
0x0295	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1705 :: 		
0x0296	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1706 :: 		
0x0297	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,1707 :: 		
0x0298	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1708 :: 		
0x0299	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1709 :: 		
0x029A	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1710 :: 		
0x029B	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,1711 :: 		
0x029C	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1712 :: 		
0x029D	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1713 :: 		
0x029E	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1714 :: 		
0x029F	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,1715 :: 		
0x02A0	0x0100      	CLRW
;__Lib_Math.c,1716 :: 		
0x02A1	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1717 :: 		
0x02A2	0x3001      	MOVLW      1
;__Lib_Math.c,1718 :: 		
0x02A3	0x02A0      	SUBWF      ___math_tempb, 1
;__Lib_Math.c,1719 :: 		
0x02A4	0x2AB6      	GOTO       UOK22LD
;__Lib_Math.c,1721 :: 		
UADD22LD:
;__Lib_Math.c,1722 :: 		
0x02A5	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1723 :: 		
0x02A6	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1724 :: 		
0x02A7	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1725 :: 		
0x02A8	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1726 :: 		
0x02A9	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1727 :: 		
0x02AA	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1728 :: 		
0x02AB	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1729 :: 		
0x02AC	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1730 :: 		
0x02AD	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1731 :: 		
0x02AE	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1732 :: 		
0x02AF	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1733 :: 		
0x02B0	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1734 :: 		
0x02B1	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1735 :: 		
0x02B2	0x0100      	CLRW
;__Lib_Math.c,1736 :: 		
0x02B3	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1737 :: 		
0x02B4	0x3001      	MOVLW      1
;__Lib_Math.c,1738 :: 		
0x02B5	0x07A0      	ADDWF      ___math_tempb, 1
;__Lib_Math.c,1740 :: 		
UOK22LD:
;__Lib_Math.c,1741 :: 		
0x02B6	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,1743 :: 		
0x02B7	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,1744 :: 		
0x02B8	0x2A8A      	GOTO       LOOPU3232D
;__Lib_Math.c,1746 :: 		
0x02B9	0x1870      	BTFSC      R0, 0
;__Lib_Math.c,1747 :: 		
0x02BA	0x2AC9      	GOTO       UOK22L
;__Lib_Math.c,1748 :: 		
0x02BB	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1749 :: 		
0x02BC	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1750 :: 		
0x02BD	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1751 :: 		
0x02BE	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1752 :: 		
0x02BF	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1753 :: 		
0x02C0	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1754 :: 		
0x02C1	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1755 :: 		
0x02C2	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1756 :: 		
0x02C3	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1757 :: 		
0x02C4	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1758 :: 		
0x02C5	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1759 :: 		
0x02C6	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1760 :: 		
0x02C7	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1761 :: 		
0x02C8	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1763 :: 		
UOK22L:
;__Lib_Math.c,1766 :: 		
L_end_Div_32x32_U:
0x02C9	0x0008      	RETURN
; end of _Div_32x32_U
_usDelay:
;BicycleSafetyProject.c,444 :: 		void usDelay(unsigned int usCnt) {
;BicycleSafetyProject.c,446 :: 		for (us = 0; us < usCnt; us++) {
0x02CA	0x1283      	BCF        STATUS, 5
0x02CB	0x1303      	BCF        STATUS, 6
0x02CC	0x01F1      	CLRF       R1
0x02CD	0x01F2      	CLRF       R1+1
L_usDelay59:
0x02CE	0x1683      	BSF        STATUS, 5
0x02CF	0x0829      	MOVF       FARG_usDelay_usCnt+1, 0
0x02D0	0x0272      	SUBWF      R1+1, 0
0x02D1	0x1D03      	BTFSS      STATUS, 2
0x02D2	0x2AD5      	GOTO       L__usDelay97
0x02D3	0x0828      	MOVF       FARG_usDelay_usCnt, 0
0x02D4	0x0271      	SUBWF      R1, 0
L__usDelay97:
0x02D5	0x1803      	BTFSC      STATUS, 0
0x02D6	0x2ADD      	GOTO       L_usDelay60
;BicycleSafetyProject.c,447 :: 		asm NOP;                     // 0.5 uS
0x02D7	0x0000      	NOP
;BicycleSafetyProject.c,448 :: 		asm NOP;                     // 0.5 uS
0x02D8	0x0000      	NOP
;BicycleSafetyProject.c,446 :: 		for (us = 0; us < usCnt; us++) {
0x02D9	0x0AF1      	INCF       R1, 1
0x02DA	0x1903      	BTFSC      STATUS, 2
0x02DB	0x0AF2      	INCF       R1+1, 1
;BicycleSafetyProject.c,449 :: 		}
0x02DC	0x2ACE      	GOTO       L_usDelay59
L_usDelay60:
;BicycleSafetyProject.c,450 :: 		}
L_end_usDelay:
0x02DD	0x0008      	RETURN
; end of _usDelay
_Mul_32x32_U:
;__Lib_Math.c,1775 :: 		
;__Lib_Math.c,1790 :: 		
0x02DE	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,1791 :: 		
0x02DF	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,1792 :: 		
0x02E0	0x3022      	MOVLW      34
;__Lib_Math.c,1793 :: 		
0x02E1	0x00FC      	MOVWF      R12
;__Lib_Math.c,1794 :: 		
0x02E2	0x01F8      	CLRF       R8
;__Lib_Math.c,1795 :: 		
0x02E3	0x01F9      	CLRF       R9
;__Lib_Math.c,1796 :: 		
0x02E4	0x01FA      	CLRF       R10
;__Lib_Math.c,1797 :: 		
0x02E5	0x01FB      	CLRF       R11
;__Lib_Math.c,1799 :: 		
_NEXT:
;__Lib_Math.c,1803 :: 		
0x02E6	0x03FC      	DECF       R12, 1
;__Lib_Math.c,1804 :: 		
0x02E7	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1805 :: 		
0x02E8	0x2B14      	GOTO       _EXIT2
;__Lib_Math.c,1806 :: 		
0x02E9	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,1808 :: 		
_LOOP:
;__Lib_Math.c,1817 :: 		
0x02EA	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,1818 :: 		
0x02EB	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,1819 :: 		
0x02EC	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,1820 :: 		
0x02ED	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,1821 :: 		
0x02EE	0x0CF3      	RRF        R3, 1
;__Lib_Math.c,1822 :: 		
0x02EF	0x0CF2      	RRF        R2, 1
;__Lib_Math.c,1823 :: 		
0x02F0	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,1824 :: 		
0x02F1	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,1829 :: 		
0x02F2	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1830 :: 		
0x02F3	0x2AE6      	GOTO       _NEXT
;__Lib_Math.c,1831 :: 		
0x02F4	0x03FC      	DECF       R12, 1
;__Lib_Math.c,1832 :: 		
0x02F5	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1833 :: 		
0x02F6	0x2B06      	GOTO       _EXIT1
;__Lib_Math.c,1840 :: 		
0x02F7	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1841 :: 		
0x02F8	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1842 :: 		
0x02F9	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1843 :: 		
0x02FA	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1844 :: 		
0x02FB	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1845 :: 		
0x02FC	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1846 :: 		
0x02FD	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1847 :: 		
0x02FE	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1848 :: 		
0x02FF	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1849 :: 		
0x0300	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1850 :: 		
0x0301	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1851 :: 		
0x0302	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1852 :: 		
0x0303	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1853 :: 		
0x0304	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1855 :: 		
0x0305	0x2AEA      	GOTO       _LOOP
;__Lib_Math.c,1857 :: 		
_EXIT1:
;__Lib_Math.c,1862 :: 		
0x0306	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1863 :: 		
0x0307	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1864 :: 		
0x0308	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1865 :: 		
0x0309	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1866 :: 		
0x030A	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1867 :: 		
0x030B	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1868 :: 		
0x030C	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1869 :: 		
0x030D	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1870 :: 		
0x030E	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1871 :: 		
0x030F	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1872 :: 		
0x0310	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1873 :: 		
0x0311	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1874 :: 		
0x0312	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1875 :: 		
0x0313	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1878 :: 		
_EXIT2:
;__Lib_Math.c,1880 :: 		
L_end_Mul_32x32_U:
0x0314	0x0008      	RETURN
; end of _Mul_32x32_U
_PWMusDelay:
;BicycleSafetyProject.c,452 :: 		void PWMusDelay(unsigned int PWMusCnt) {
;BicycleSafetyProject.c,454 :: 		for (PWMus = 0; PWMus < PWMusCnt; PWMus++) {
0x0315	0x1283      	BCF        STATUS, 5
0x0316	0x1303      	BCF        STATUS, 6
0x0317	0x01F1      	CLRF       R1
0x0318	0x01F2      	CLRF       R1+1
L_PWMusDelay62:
0x0319	0x1683      	BSF        STATUS, 5
0x031A	0x0827      	MOVF       FARG_PWMusDelay_PWMusCnt+1, 0
0x031B	0x0272      	SUBWF      R1+1, 0
0x031C	0x1D03      	BTFSS      STATUS, 2
0x031D	0x2B20      	GOTO       L__PWMusDelay99
0x031E	0x0826      	MOVF       FARG_PWMusDelay_PWMusCnt, 0
0x031F	0x0271      	SUBWF      R1, 0
L__PWMusDelay99:
0x0320	0x1803      	BTFSC      STATUS, 0
0x0321	0x2B28      	GOTO       L_PWMusDelay63
;BicycleSafetyProject.c,455 :: 		asm NOP;                     // 0.5 uS
0x0322	0x0000      	NOP
;BicycleSafetyProject.c,456 :: 		asm NOP;                     // 0.5 uS
0x0323	0x0000      	NOP
;BicycleSafetyProject.c,454 :: 		for (PWMus = 0; PWMus < PWMusCnt; PWMus++) {
0x0324	0x0AF1      	INCF       R1, 1
0x0325	0x1903      	BTFSC      STATUS, 2
0x0326	0x0AF2      	INCF       R1+1, 1
;BicycleSafetyProject.c,457 :: 		}
0x0327	0x2B19      	GOTO       L_PWMusDelay62
L_PWMusDelay63:
;BicycleSafetyProject.c,458 :: 		}
L_end_PWMusDelay:
0x0328	0x0008      	RETURN
; end of _PWMusDelay
_CCPPWM_init:
;BicycleSafetyProject.c,412 :: 		void CCPPWM_init(void) {
;BicycleSafetyProject.c,413 :: 		T2CON = 0x07;                    // Enable Timer2 with 1:16 prescaler
0x0329	0x3007      	MOVLW      7
0x032A	0x1283      	BCF        STATUS, 5
0x032B	0x1303      	BCF        STATUS, 6
0x032C	0x0092      	MOVWF      T2CON
;BicycleSafetyProject.c,414 :: 		CCP1CON = 0x0C;                  // Enable PWM for CCP1
0x032D	0x300C      	MOVLW      12
0x032E	0x0097      	MOVWF      CCP1CON
;BicycleSafetyProject.c,415 :: 		PR2 = 250;                       // Set Timer2 period
0x032F	0x30FA      	MOVLW      250
0x0330	0x1683      	BSF        STATUS, 5
0x0331	0x0092      	MOVWF      PR2
;BicycleSafetyProject.c,416 :: 		CCPR1L = 125;                    // Initial duty cycle for CCP1 (50%)
0x0332	0x307D      	MOVLW      125
0x0333	0x1283      	BCF        STATUS, 5
0x0334	0x0095      	MOVWF      CCPR1L
;BicycleSafetyProject.c,418 :: 		mspeed1 = 0;
0x0335	0x1683      	BSF        STATUS, 5
0x0336	0x01A0      	CLRF       _mspeed1
;BicycleSafetyProject.c,419 :: 		mspeed2 = 0;
0x0337	0x01A3      	CLRF       _mspeed2
;BicycleSafetyProject.c,420 :: 		period = 0;
0x0338	0x1283      	BCF        STATUS, 5
0x0339	0x01AF      	CLRF       _period
0x033A	0x01B0      	CLRF       _period+1
;BicycleSafetyProject.c,421 :: 		duty = 0;
0x033B	0x01C0      	CLRF       _duty
0x033C	0x01C1      	CLRF       _duty+1
;BicycleSafetyProject.c,422 :: 		}
L_end_CCPPWM_init:
0x033D	0x0008      	RETURN
; end of _CCPPWM_init
_CCPcompare_init:
;BicycleSafetyProject.c,424 :: 		void CCPcompare_init(void){
;BicycleSafetyProject.c,425 :: 		HL = 1; //start high
0x033E	0x3001      	MOVLW      1
0x033F	0x1283      	BCF        STATUS, 5
0x0340	0x1303      	BCF        STATUS, 6
0x0341	0x00EF      	MOVWF      _HL
;BicycleSafetyProject.c,426 :: 		CCP2CON = 0x08;//
0x0342	0x3008      	MOVLW      8
0x0343	0x009D      	MOVWF      CCP2CON
;BicycleSafetyProject.c,427 :: 		CCPR2H=2000>>8;
0x0344	0x3007      	MOVLW      7
0x0345	0x009C      	MOVWF      CCPR2H
;BicycleSafetyProject.c,428 :: 		CCPR2L=2000;
0x0346	0x30D0      	MOVLW      208
0x0347	0x009B      	MOVWF      CCPR2L
;BicycleSafetyProject.c,429 :: 		}
L_end_CCPcompare_init:
0x0348	0x0008      	RETURN
; end of _CCPcompare_init
_motor1:
;BicycleSafetyProject.c,431 :: 		void motor1(void) {
;BicycleSafetyProject.c,432 :: 		CCPR1L = mspeed1;                // Set PWM duty cycle for motor 1
0x0349	0x1683      	BSF        STATUS, 5
0x034A	0x1303      	BCF        STATUS, 6
0x034B	0x0820      	MOVF       _mspeed1, 0
0x034C	0x1283      	BCF        STATUS, 5
0x034D	0x0095      	MOVWF      CCPR1L
;BicycleSafetyProject.c,433 :: 		}
L_end_motor1:
0x034E	0x0008      	RETURN
; end of _motor1
_motor2:
;BicycleSafetyProject.c,436 :: 		void motor2(void) {
;BicycleSafetyProject.c,437 :: 		PORTB |= 0x80;                       //High
0x034F	0x1283      	BCF        STATUS, 5
0x0350	0x1303      	BCF        STATUS, 6
0x0351	0x1786      	BSF        PORTB, 7
;BicycleSafetyProject.c,438 :: 		PWMusDelay(mspeed2*2);
0x0352	0x1683      	BSF        STATUS, 5
0x0353	0x0823      	MOVF       _mspeed2, 0
0x0354	0x00A6      	MOVWF      FARG_PWMusDelay_PWMusCnt
0x0355	0x01A7      	CLRF       FARG_PWMusDelay_PWMusCnt+1
0x0356	0x0DA6      	RLF        FARG_PWMusDelay_PWMusCnt, 1
0x0357	0x0DA7      	RLF        FARG_PWMusDelay_PWMusCnt+1, 1
0x0358	0x1026      	BCF        FARG_PWMusDelay_PWMusCnt, 0
0x0359	0x2315      	CALL       _PWMusDelay
;BicycleSafetyProject.c,439 :: 		PORTB &= 0x7F;                       //Low
0x035A	0x307F      	MOVLW      127
0x035B	0x1283      	BCF        STATUS, 5
0x035C	0x0586      	ANDWF      PORTB, 1
;BicycleSafetyProject.c,440 :: 		PWMusDelay((250-mspeed2)*2);
0x035D	0x1683      	BSF        STATUS, 5
0x035E	0x0823      	MOVF       _mspeed2, 0
0x035F	0x3CFA      	SUBLW      250
0x0360	0x00A6      	MOVWF      FARG_PWMusDelay_PWMusCnt
0x0361	0x01A7      	CLRF       FARG_PWMusDelay_PWMusCnt+1
0x0362	0x1C03      	BTFSS      STATUS, 0
0x0363	0x03A7      	DECF       FARG_PWMusDelay_PWMusCnt+1, 1
0x0364	0x0DA6      	RLF        FARG_PWMusDelay_PWMusCnt, 1
0x0365	0x0DA7      	RLF        FARG_PWMusDelay_PWMusCnt+1, 1
0x0366	0x1026      	BCF        FARG_PWMusDelay_PWMusCnt, 0
0x0367	0x2315      	CALL       _PWMusDelay
;BicycleSafetyProject.c,441 :: 		}
L_end_motor2:
0x0368	0x0008      	RETURN
; end of _motor2
_msDelay:
;BicycleSafetyProject.c,460 :: 		void msDelay(unsigned int msCnt) {
;BicycleSafetyProject.c,462 :: 		for (ms = 0; ms < msCnt; ms++) {
0x0369	0x1283      	BCF        STATUS, 5
0x036A	0x1303      	BCF        STATUS, 6
0x036B	0x01F1      	CLRF       R1
0x036C	0x01F2      	CLRF       R1+1
L_msDelay65:
0x036D	0x1683      	BSF        STATUS, 5
0x036E	0x0825      	MOVF       FARG_msDelay_msCnt+1, 0
0x036F	0x0272      	SUBWF      R1+1, 0
0x0370	0x1D03      	BTFSS      STATUS, 2
0x0371	0x2B74      	GOTO       L__msDelay101
0x0372	0x0824      	MOVF       FARG_msDelay_msCnt, 0
0x0373	0x0271      	SUBWF      R1, 0
L__msDelay101:
0x0374	0x1803      	BTFSC      STATUS, 0
0x0375	0x2B88      	GOTO       L_msDelay66
;BicycleSafetyProject.c,463 :: 		for (cc = 0; cc < 155; cc++); // 1ms
0x0376	0x01F3      	CLRF       R3
0x0377	0x01F4      	CLRF       R3+1
L_msDelay68:
0x0378	0x3000      	MOVLW      0
0x0379	0x0274      	SUBWF      R3+1, 0
0x037A	0x1D03      	BTFSS      STATUS, 2
0x037B	0x2B7E      	GOTO       L__msDelay102
0x037C	0x309B      	MOVLW      155
0x037D	0x0273      	SUBWF      R3, 0
L__msDelay102:
0x037E	0x1803      	BTFSC      STATUS, 0
0x037F	0x2B84      	GOTO       L_msDelay69
0x0380	0x0AF3      	INCF       R3, 1
0x0381	0x1903      	BTFSC      STATUS, 2
0x0382	0x0AF4      	INCF       R3+1, 1
0x0383	0x2B78      	GOTO       L_msDelay68
L_msDelay69:
;BicycleSafetyProject.c,462 :: 		for (ms = 0; ms < msCnt; ms++) {
0x0384	0x0AF1      	INCF       R1, 1
0x0385	0x1903      	BTFSC      STATUS, 2
0x0386	0x0AF2      	INCF       R1+1, 1
;BicycleSafetyProject.c,464 :: 		}
0x0387	0x2B6D      	GOTO       L_msDelay65
L_msDelay66:
;BicycleSafetyProject.c,465 :: 		}
L_end_msDelay:
0x0388	0x0008      	RETURN
; end of _msDelay
_sonar_init:
;BicycleSafetyProject.c,350 :: 		void sonar_init(void) {
;BicycleSafetyProject.c,351 :: 		T1overflow = 0;
0x0389	0x1283      	BCF        STATUS, 5
0x038A	0x1303      	BCF        STATUS, 6
0x038B	0x01DB      	CLRF       _T1overflow
0x038C	0x01DC      	CLRF       _T1overflow+1
;BicycleSafetyProject.c,352 :: 		T1counts = 0;
0x038D	0x01DD      	CLRF       _T1counts
0x038E	0x01DE      	CLRF       _T1counts+1
0x038F	0x01DF      	CLRF       _T1counts+2
0x0390	0x01E0      	CLRF       _T1counts+3
;BicycleSafetyProject.c,353 :: 		T1time = 0;
0x0391	0x01D5      	CLRF       _T1time
0x0392	0x01D6      	CLRF       _T1time+1
0x0393	0x01D7      	CLRF       _T1time+2
0x0394	0x01D8      	CLRF       _T1time+3
;BicycleSafetyProject.c,354 :: 		T2overflow = 0;
0x0395	0x01D9      	CLRF       _T2overflow
0x0396	0x01DA      	CLRF       _T2overflow+1
;BicycleSafetyProject.c,355 :: 		T2counts = 0;
0x0397	0x01E5      	CLRF       _T2counts
0x0398	0x01E6      	CLRF       _T2counts+1
0x0399	0x01E7      	CLRF       _T2counts+2
0x039A	0x01E8      	CLRF       _T2counts+3
;BicycleSafetyProject.c,356 :: 		T2time = 0;
0x039B	0x01E9      	CLRF       _T2time
0x039C	0x01EA      	CLRF       _T2time+1
0x039D	0x01EB      	CLRF       _T2time+2
0x039E	0x01EC      	CLRF       _T2time+3
;BicycleSafetyProject.c,357 :: 		D1read = 0;
0x039F	0x01A6      	CLRF       _D1read
;BicycleSafetyProject.c,358 :: 		D2read = 0;
0x03A0	0x01B1      	CLRF       _D2read
;BicycleSafetyProject.c,359 :: 		D1 = 0;
0x03A1	0x01A7      	CLRF       _D1
0x03A2	0x01A8      	CLRF       _D1+1
0x03A3	0x01A9      	CLRF       _D1+2
0x03A4	0x01AA      	CLRF       _D1+3
;BicycleSafetyProject.c,360 :: 		D2 = 0;
0x03A5	0x01B2      	CLRF       _D2
0x03A6	0x01B3      	CLRF       _D2+1
0x03A7	0x01B4      	CLRF       _D2+2
0x03A8	0x01B5      	CLRF       _D2+3
;BicycleSafetyProject.c,361 :: 		TMR1H = 0;
0x03A9	0x018F      	CLRF       TMR1H
;BicycleSafetyProject.c,362 :: 		TMR1L = 0;
0x03AA	0x018E      	CLRF       TMR1L
;BicycleSafetyProject.c,363 :: 		PIE1 |= 0x01;               // Enable TMR1 Overflow interrupt
0x03AB	0x1683      	BSF        STATUS, 5
0x03AC	0x140C      	BSF        PIE1, 0
;BicycleSafetyProject.c,364 :: 		T1CON = 0x18;               // TMR1 OFF, Fosc/4 (1uS increments) with 1:2 prescaler
0x03AD	0x3018      	MOVLW      24
0x03AE	0x1283      	BCF        STATUS, 5
0x03AF	0x0090      	MOVWF      T1CON
;BicycleSafetyProject.c,365 :: 		}
L_end_sonar_init:
0x03B0	0x0008      	RETURN
; end of _sonar_init
_ATD_read0:
;BicycleSafetyProject.c,323 :: 		unsigned int ATD_read0(void) {
;BicycleSafetyProject.c,324 :: 		ADCON0 &= 0xC7;            // Select channel 0
0x03B1	0x30C7      	MOVLW      199
0x03B2	0x1283      	BCF        STATUS, 5
0x03B3	0x1303      	BCF        STATUS, 6
0x03B4	0x059F      	ANDWF      ADCON0, 1
;BicycleSafetyProject.c,325 :: 		usDelay(10);               // Stabilize ADC input
0x03B5	0x300A      	MOVLW      10
0x03B6	0x1683      	BSF        STATUS, 5
0x03B7	0x00A8      	MOVWF      FARG_usDelay_usCnt
0x03B8	0x3000      	MOVLW      0
0x03B9	0x00A9      	MOVWF      FARG_usDelay_usCnt+1
0x03BA	0x22CA      	CALL       _usDelay
;BicycleSafetyProject.c,326 :: 		ADCON0 |= 0x04;            // Start ADC conversion
0x03BB	0x1283      	BCF        STATUS, 5
0x03BC	0x151F      	BSF        ADCON0, 2
;BicycleSafetyProject.c,327 :: 		while (ADCON0 & 0x04);     // Wait for conversion to complete
L_ATD_read045:
0x03BD	0x1D1F      	BTFSS      ADCON0, 2
0x03BE	0x2BC0      	GOTO       L_ATD_read046
0x03BF	0x2BBD      	GOTO       L_ATD_read045
L_ATD_read046:
;BicycleSafetyProject.c,328 :: 		return ((ADRESH << 8) | ADRESL);
0x03C0	0x081E      	MOVF       ADRESH, 0
0x03C1	0x00F1      	MOVWF      R0+1
0x03C2	0x01F0      	CLRF       R0
0x03C3	0x1683      	BSF        STATUS, 5
0x03C4	0x081E      	MOVF       ADRESL, 0
0x03C5	0x04F0      	IORWF      R0, 1
0x03C6	0x3000      	MOVLW      0
0x03C7	0x04F1      	IORWF      R0+1, 1
;BicycleSafetyProject.c,329 :: 		}
L_end_ATD_read0:
0x03C8	0x0008      	RETURN
; end of _ATD_read0
_Mul_16X16_U:
;__Lib_Math.c,136 :: 		
;__Lib_Math.c,143 :: 		
0x03C9	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,144 :: 		
0x03CA	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,145 :: 		
0x03CB	0x01FB      	CLRF       R11
;__Lib_Math.c,146 :: 		
0x03CC	0x01FA      	CLRF       R10
;__Lib_Math.c,147 :: 		
0x03CD	0x01F9      	CLRF       R9
;__Lib_Math.c,148 :: 		
0x03CE	0x3080      	MOVLW      128
;__Lib_Math.c,149 :: 		
0x03CF	0x00F8      	MOVWF      R8
;__Lib_Math.c,150 :: 		
0x03D0	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,151 :: 		
0x03D1	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,152 :: 		
0x03D2	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,153 :: 		
0x03D3	0x2BDD      	GOTO       $+10
;__Lib_Math.c,154 :: 		
0x03D4	0x0874      	MOVF       R4, 0
;__Lib_Math.c,155 :: 		
0x03D5	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,156 :: 		
0x03D6	0x0875      	MOVF       R5, 0
;__Lib_Math.c,157 :: 		
0x03D7	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,158 :: 		
0x03D8	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,159 :: 		
0x03D9	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,160 :: 		
0x03DA	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,161 :: 		
0x03DB	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,162 :: 		
0x03DC	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,163 :: 		
0x03DD	0x1FF0      	BTFSS      R0, 7
;__Lib_Math.c,164 :: 		
0x03DE	0x2BE5      	GOTO       $+7
;__Lib_Math.c,165 :: 		
0x03DF	0x0874      	MOVF       R4, 0
;__Lib_Math.c,166 :: 		
0x03E0	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,167 :: 		
0x03E1	0x0875      	MOVF       R5, 0
;__Lib_Math.c,168 :: 		
0x03E2	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,169 :: 		
0x03E3	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,170 :: 		
0x03E4	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,171 :: 		
0x03E5	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,172 :: 		
0x03E6	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,173 :: 		
0x03E7	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,174 :: 		
0x03E8	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,175 :: 		
0x03E9	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,176 :: 		
0x03EA	0x2BD0      	GOTO       $-26
;__Lib_Math.c,177 :: 		
0x03EB	0x087B      	MOVF       R11, 0
;__Lib_Math.c,178 :: 		
0x03EC	0x00F3      	MOVWF      R3
;__Lib_Math.c,179 :: 		
0x03ED	0x087A      	MOVF       R10, 0
;__Lib_Math.c,180 :: 		
0x03EE	0x00F2      	MOVWF      R2
;__Lib_Math.c,181 :: 		
0x03EF	0x0879      	MOVF       R9, 0
;__Lib_Math.c,182 :: 		
0x03F0	0x00F1      	MOVWF      R1
;__Lib_Math.c,183 :: 		
0x03F1	0x0878      	MOVF       R8, 0
;__Lib_Math.c,184 :: 		
0x03F2	0x00F0      	MOVWF      R0
;__Lib_Math.c,187 :: 		
L_end_Mul_16X16_U:
0x03F3	0x0008      	RETURN
; end of _Mul_16X16_U
_Div_16X16_U:
;__Lib_Math.c,215 :: 		
;__Lib_Math.c,222 :: 		
0x03F4	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,223 :: 		
0x03F5	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,224 :: 		
0x03F6	0x01F8      	CLRF       R8
;__Lib_Math.c,225 :: 		
0x03F7	0x01F9      	CLRF       R9
;__Lib_Math.c,226 :: 		
0x03F8	0x3010      	MOVLW      16
;__Lib_Math.c,227 :: 		
0x03F9	0x00FC      	MOVWF      R12
;__Lib_Math.c,228 :: 		
0x03FA	0x0D71      	RLF        R1, 0
;__Lib_Math.c,229 :: 		
0x03FB	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,230 :: 		
0x03FC	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,231 :: 		
0x03FD	0x0874      	MOVF       R4, 0
;__Lib_Math.c,232 :: 		
0x03FE	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,233 :: 		
0x03FF	0x0875      	MOVF       R5, 0
;__Lib_Math.c,234 :: 		
0x0400	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,235 :: 		
0x0401	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,236 :: 		
0x0402	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,237 :: 		
0x0403	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,238 :: 		
0x0404	0x2C0C      	GOTO       $+8
;__Lib_Math.c,239 :: 		
0x0405	0x0874      	MOVF       R4, 0
;__Lib_Math.c,240 :: 		
0x0406	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,241 :: 		
0x0407	0x0875      	MOVF       R5, 0
;__Lib_Math.c,242 :: 		
0x0408	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,243 :: 		
0x0409	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,244 :: 		
0x040A	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,245 :: 		
0x040B	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,246 :: 		
0x040C	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,247 :: 		
0x040D	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,248 :: 		
0x040E	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,249 :: 		
0x040F	0x2BFA      	GOTO       $-21
;__Lib_Math.c,251 :: 		
L_end_Div_16X16_U:
0x0410	0x0008      	RETURN
; end of _Div_16X16_U
_sonar_read1:
;BicycleSafetyProject.c,368 :: 		void sonar_read1(void) {
;BicycleSafetyProject.c,369 :: 		T1overflow = 0;
0x0411	0x1283      	BCF        STATUS, 5
0x0412	0x1303      	BCF        STATUS, 6
0x0413	0x01DB      	CLRF       _T1overflow
0x0414	0x01DC      	CLRF       _T1overflow+1
;BicycleSafetyProject.c,370 :: 		TMR1H = 0;
0x0415	0x018F      	CLRF       TMR1H
;BicycleSafetyProject.c,371 :: 		TMR1L = 0;
0x0416	0x018E      	CLRF       TMR1L
;BicycleSafetyProject.c,372 :: 		T1CON = 0x18;
0x0417	0x3018      	MOVLW      24
0x0418	0x0090      	MOVWF      T1CON
;BicycleSafetyProject.c,374 :: 		PORTC |= 0x80;                    // Trigger ultrasonic sensor 1 (RC7 connected to trigger)
0x0419	0x1787      	BSF        PORTC, 7
;BicycleSafetyProject.c,375 :: 		usDelay(10);                      // Keep trigger for 10uS
0x041A	0x300A      	MOVLW      10
0x041B	0x1683      	BSF        STATUS, 5
0x041C	0x00A8      	MOVWF      FARG_usDelay_usCnt
0x041D	0x3000      	MOVLW      0
0x041E	0x00A9      	MOVWF      FARG_usDelay_usCnt+1
0x041F	0x22CA      	CALL       _usDelay
;BicycleSafetyProject.c,376 :: 		PORTC &= 0x7F;                    // Remove trigger
0x0420	0x307F      	MOVLW      127
0x0421	0x1283      	BCF        STATUS, 5
0x0422	0x0587      	ANDWF      PORTC, 1
;BicycleSafetyProject.c,378 :: 		while (!(PORTC & 0x40));          // Wait for echo to start
L_sonar_read151:
0x0423	0x1B07      	BTFSC      PORTC, 6
0x0424	0x2C26      	GOTO       L_sonar_read152
0x0425	0x2C23      	GOTO       L_sonar_read151
L_sonar_read152:
;BicycleSafetyProject.c,379 :: 		T1CON = 0x19;                     // TMR1 ON
0x0426	0x3019      	MOVLW      25
0x0427	0x0090      	MOVWF      T1CON
;BicycleSafetyProject.c,380 :: 		while (PORTC & 0x40);             // Wait for echo to end
L_sonar_read153:
0x0428	0x1F07      	BTFSS      PORTC, 6
0x0429	0x2C2B      	GOTO       L_sonar_read154
0x042A	0x2C28      	GOTO       L_sonar_read153
L_sonar_read154:
;BicycleSafetyProject.c,381 :: 		T1CON = 0x18;                     // TMR1 OFF
0x042B	0x3018      	MOVLW      24
0x042C	0x0090      	MOVWF      T1CON
;BicycleSafetyProject.c,383 :: 		T1counts = ((TMR1H << 8) | TMR1L) + (T1overflow * 65536);
0x042D	0x080F      	MOVF       TMR1H, 0
0x042E	0x00F1      	MOVWF      R0+1
0x042F	0x01F0      	CLRF       R0
0x0430	0x080E      	MOVF       TMR1L, 0
0x0431	0x0470      	IORWF      R0, 0
0x0432	0x00F8      	MOVWF      R8
0x0433	0x0871      	MOVF       R0+1, 0
0x0434	0x00F9      	MOVWF      R8+1
0x0435	0x3000      	MOVLW      0
0x0436	0x04F9      	IORWF      R8+1, 1
0x0437	0x085C      	MOVF       _T1overflow+1, 0
0x0438	0x00F7      	MOVWF      R4+3
0x0439	0x085B      	MOVF       _T1overflow, 0
0x043A	0x00F6      	MOVWF      R4+2
0x043B	0x01F4      	CLRF       R4
0x043C	0x01F5      	CLRF       R4+1
0x043D	0x0878      	MOVF       R8, 0
0x043E	0x00F0      	MOVWF      R0
0x043F	0x0879      	MOVF       R8+1, 0
0x0440	0x00F1      	MOVWF      R0+1
0x0441	0x01F2      	CLRF       R0+2
0x0442	0x01F3      	CLRF       R0+3
0x0443	0x0874      	MOVF       R4, 0
0x0444	0x07F0      	ADDWF      R0, 1
0x0445	0x0875      	MOVF       R4+1, 0
0x0446	0x1803      	BTFSC      STATUS, 0
0x0447	0x0F75      	INCFSZ     R4+1, 0
0x0448	0x07F1      	ADDWF      R0+1, 1
0x0449	0x0876      	MOVF       R4+2, 0
0x044A	0x1803      	BTFSC      STATUS, 0
0x044B	0x0F76      	INCFSZ     R4+2, 0
0x044C	0x07F2      	ADDWF      R0+2, 1
0x044D	0x0877      	MOVF       R4+3, 0
0x044E	0x1803      	BTFSC      STATUS, 0
0x044F	0x0F77      	INCFSZ     R4+3, 0
0x0450	0x07F3      	ADDWF      R0+3, 1
0x0451	0x0870      	MOVF       R0, 0
0x0452	0x00DD      	MOVWF      _T1counts
0x0453	0x0871      	MOVF       R0+1, 0
0x0454	0x00DE      	MOVWF      _T1counts+1
0x0455	0x0872      	MOVF       R0+2, 0
0x0456	0x00DF      	MOVWF      _T1counts+2
0x0457	0x0873      	MOVF       R0+3, 0
0x0458	0x00E0      	MOVWF      _T1counts+3
;BicycleSafetyProject.c,384 :: 		T1time = T1counts;                // Time in microseconds
0x0459	0x0870      	MOVF       R0, 0
0x045A	0x00D5      	MOVWF      _T1time
0x045B	0x0871      	MOVF       R0+1, 0
0x045C	0x00D6      	MOVWF      _T1time+1
0x045D	0x0872      	MOVF       R0+2, 0
0x045E	0x00D7      	MOVWF      _T1time+2
0x045F	0x0873      	MOVF       R0+3, 0
0x0460	0x00D8      	MOVWF      _T1time+3
;BicycleSafetyProject.c,385 :: 		D1 = ((T1time * 34) / 1000) / 2;  // Calculate distance in cm
0x0461	0x3022      	MOVLW      34
0x0462	0x00F4      	MOVWF      R4
0x0463	0x01F5      	CLRF       R4+1
0x0464	0x01F6      	CLRF       R4+2
0x0465	0x01F7      	CLRF       R4+3
0x0466	0x22DE      	CALL       _Mul_32x32_U
0x0467	0x30E8      	MOVLW      232
0x0468	0x00F4      	MOVWF      R4
0x0469	0x3003      	MOVLW      3
0x046A	0x00F5      	MOVWF      R4+1
0x046B	0x01F6      	CLRF       R4+2
0x046C	0x01F7      	CLRF       R4+3
0x046D	0x2152      	CALL       _Div_32x32_U
0x046E	0x0870      	MOVF       R0, 0
0x046F	0x00A7      	MOVWF      _D1
0x0470	0x0871      	MOVF       R0+1, 0
0x0471	0x00A8      	MOVWF      _D1+1
0x0472	0x0872      	MOVF       R0+2, 0
0x0473	0x00A9      	MOVWF      _D1+2
0x0474	0x0873      	MOVF       R0+3, 0
0x0475	0x00AA      	MOVWF      _D1+3
0x0476	0x0CAA      	RRF        _D1+3, 1
0x0477	0x0CA9      	RRF        _D1+2, 1
0x0478	0x0CA8      	RRF        _D1+1, 1
0x0479	0x0CA7      	RRF        _D1, 1
0x047A	0x13AA      	BCF        _D1+3, 7
;BicycleSafetyProject.c,386 :: 		D1read = 0x01;                    // Set read flag
0x047B	0x3001      	MOVLW      1
0x047C	0x00A6      	MOVWF      _D1read
;BicycleSafetyProject.c,387 :: 		}
L_end_sonar_read1:
0x047D	0x0008      	RETURN
; end of _sonar_read1
_ATD_read2:
;BicycleSafetyProject.c,341 :: 		unsigned int ATD_read2(void) {
;BicycleSafetyProject.c,342 :: 		ADCON0 = (ADCON0 & 0xDF) | 0x18;  // Select channel 3
0x047E	0x30DF      	MOVLW      223
0x047F	0x1283      	BCF        STATUS, 5
0x0480	0x1303      	BCF        STATUS, 6
0x0481	0x051F      	ANDWF      ADCON0, 0
0x0482	0x00F0      	MOVWF      R0
0x0483	0x3018      	MOVLW      24
0x0484	0x0470      	IORWF      R0, 0
0x0485	0x009F      	MOVWF      ADCON0
;BicycleSafetyProject.c,343 :: 		usDelay(10);                      // Stabilize ADC input
0x0486	0x300A      	MOVLW      10
0x0487	0x1683      	BSF        STATUS, 5
0x0488	0x00A8      	MOVWF      FARG_usDelay_usCnt
0x0489	0x3000      	MOVLW      0
0x048A	0x00A9      	MOVWF      FARG_usDelay_usCnt+1
0x048B	0x22CA      	CALL       _usDelay
;BicycleSafetyProject.c,344 :: 		ADCON0 |= 0x04;                   // Start ADC conversion
0x048C	0x1283      	BCF        STATUS, 5
0x048D	0x151F      	BSF        ADCON0, 2
;BicycleSafetyProject.c,345 :: 		while (ADCON0 & 0x04);            // Wait for conversion to complete
L_ATD_read249:
0x048E	0x1D1F      	BTFSS      ADCON0, 2
0x048F	0x2C91      	GOTO       L_ATD_read250
0x0490	0x2C8E      	GOTO       L_ATD_read249
L_ATD_read250:
;BicycleSafetyProject.c,346 :: 		return ((ADRESH << 8) | ADRESL);
0x0491	0x081E      	MOVF       ADRESH, 0
0x0492	0x00F1      	MOVWF      R0+1
0x0493	0x01F0      	CLRF       R0
0x0494	0x1683      	BSF        STATUS, 5
0x0495	0x081E      	MOVF       ADRESL, 0
0x0496	0x04F0      	IORWF      R0, 1
0x0497	0x3000      	MOVLW      0
0x0498	0x04F1      	IORWF      R0+1, 1
;BicycleSafetyProject.c,347 :: 		}
L_end_ATD_read2:
0x0499	0x0008      	RETURN
; end of _ATD_read2
_ATD_read1:
;BicycleSafetyProject.c,332 :: 		unsigned int ATD_read1(void) {
;BicycleSafetyProject.c,333 :: 		ADCON0 = (ADCON0 & 0xCF) | 0x08;  // Select channel 1
0x049A	0x30CF      	MOVLW      207
0x049B	0x1283      	BCF        STATUS, 5
0x049C	0x1303      	BCF        STATUS, 6
0x049D	0x051F      	ANDWF      ADCON0, 0
0x049E	0x00F0      	MOVWF      R0
0x049F	0x3008      	MOVLW      8
0x04A0	0x0470      	IORWF      R0, 0
0x04A1	0x009F      	MOVWF      ADCON0
;BicycleSafetyProject.c,334 :: 		usDelay(10);                      // Stabilize ADC input
0x04A2	0x300A      	MOVLW      10
0x04A3	0x1683      	BSF        STATUS, 5
0x04A4	0x00A8      	MOVWF      FARG_usDelay_usCnt
0x04A5	0x3000      	MOVLW      0
0x04A6	0x00A9      	MOVWF      FARG_usDelay_usCnt+1
0x04A7	0x22CA      	CALL       _usDelay
;BicycleSafetyProject.c,335 :: 		ADCON0 |= 0x04;                   // Start ADC conversion
0x04A8	0x1283      	BCF        STATUS, 5
0x04A9	0x151F      	BSF        ADCON0, 2
;BicycleSafetyProject.c,336 :: 		while (ADCON0 & 0x04);            // Wait for conversion to complete
L_ATD_read147:
0x04AA	0x1D1F      	BTFSS      ADCON0, 2
0x04AB	0x2CAD      	GOTO       L_ATD_read148
0x04AC	0x2CAA      	GOTO       L_ATD_read147
L_ATD_read148:
;BicycleSafetyProject.c,337 :: 		return ((ADRESH << 8) | ADRESL);
0x04AD	0x081E      	MOVF       ADRESH, 0
0x04AE	0x00F1      	MOVWF      R0+1
0x04AF	0x01F0      	CLRF       R0
0x04B0	0x1683      	BSF        STATUS, 5
0x04B1	0x081E      	MOVF       ADRESL, 0
0x04B2	0x04F0      	IORWF      R0, 1
0x04B3	0x3000      	MOVLW      0
0x04B4	0x04F1      	IORWF      R0+1, 1
;BicycleSafetyProject.c,338 :: 		}
L_end_ATD_read1:
0x04B5	0x0008      	RETURN
; end of _ATD_read1
_sonar_read2:
;BicycleSafetyProject.c,390 :: 		void sonar_read2(void) {
;BicycleSafetyProject.c,391 :: 		T2overflow = 0;
0x04B6	0x1283      	BCF        STATUS, 5
0x04B7	0x1303      	BCF        STATUS, 6
0x04B8	0x01D9      	CLRF       _T2overflow
0x04B9	0x01DA      	CLRF       _T2overflow+1
;BicycleSafetyProject.c,392 :: 		TMR1H = 0;
0x04BA	0x018F      	CLRF       TMR1H
;BicycleSafetyProject.c,393 :: 		TMR1L = 0;
0x04BB	0x018E      	CLRF       TMR1L
;BicycleSafetyProject.c,394 :: 		T1CON = 0x18;
0x04BC	0x3018      	MOVLW      24
0x04BD	0x0090      	MOVWF      T1CON
;BicycleSafetyProject.c,396 :: 		PORTC |= 0x20;                    // Trigger ultrasonic sensor 2 (RC5 connected to trigger)
0x04BE	0x1687      	BSF        PORTC, 5
;BicycleSafetyProject.c,397 :: 		usDelay(10);                      // Keep trigger for 10uS
0x04BF	0x300A      	MOVLW      10
0x04C0	0x1683      	BSF        STATUS, 5
0x04C1	0x00A8      	MOVWF      FARG_usDelay_usCnt
0x04C2	0x3000      	MOVLW      0
0x04C3	0x00A9      	MOVWF      FARG_usDelay_usCnt+1
0x04C4	0x22CA      	CALL       _usDelay
;BicycleSafetyProject.c,398 :: 		PORTC &= 0xDF;                    // Remove trigger
0x04C5	0x30DF      	MOVLW      223
0x04C6	0x1283      	BCF        STATUS, 5
0x04C7	0x0587      	ANDWF      PORTC, 1
;BicycleSafetyProject.c,400 :: 		while (!(PORTC & 0x10));          // Wait for echo to start
L_sonar_read255:
0x04C8	0x1A07      	BTFSC      PORTC, 4
0x04C9	0x2CCB      	GOTO       L_sonar_read256
0x04CA	0x2CC8      	GOTO       L_sonar_read255
L_sonar_read256:
;BicycleSafetyProject.c,401 :: 		T1CON = 0x19;                     // TMR1 ON
0x04CB	0x3019      	MOVLW      25
0x04CC	0x0090      	MOVWF      T1CON
;BicycleSafetyProject.c,402 :: 		while (PORTC & 0x10);             // Wait for echo to end
L_sonar_read257:
0x04CD	0x1E07      	BTFSS      PORTC, 4
0x04CE	0x2CD0      	GOTO       L_sonar_read258
0x04CF	0x2CCD      	GOTO       L_sonar_read257
L_sonar_read258:
;BicycleSafetyProject.c,403 :: 		T1CON = 0x18;                     // TMR1 OFF
0x04D0	0x3018      	MOVLW      24
0x04D1	0x0090      	MOVWF      T1CON
;BicycleSafetyProject.c,405 :: 		T2counts = ((TMR1H << 8) | TMR1L) + (T2overflow * 65536);
0x04D2	0x080F      	MOVF       TMR1H, 0
0x04D3	0x00F1      	MOVWF      R0+1
0x04D4	0x01F0      	CLRF       R0
0x04D5	0x080E      	MOVF       TMR1L, 0
0x04D6	0x0470      	IORWF      R0, 0
0x04D7	0x00F8      	MOVWF      R8
0x04D8	0x0871      	MOVF       R0+1, 0
0x04D9	0x00F9      	MOVWF      R8+1
0x04DA	0x3000      	MOVLW      0
0x04DB	0x04F9      	IORWF      R8+1, 1
0x04DC	0x085A      	MOVF       _T2overflow+1, 0
0x04DD	0x00F7      	MOVWF      R4+3
0x04DE	0x0859      	MOVF       _T2overflow, 0
0x04DF	0x00F6      	MOVWF      R4+2
0x04E0	0x01F4      	CLRF       R4
0x04E1	0x01F5      	CLRF       R4+1
0x04E2	0x0878      	MOVF       R8, 0
0x04E3	0x00F0      	MOVWF      R0
0x04E4	0x0879      	MOVF       R8+1, 0
0x04E5	0x00F1      	MOVWF      R0+1
0x04E6	0x01F2      	CLRF       R0+2
0x04E7	0x01F3      	CLRF       R0+3
0x04E8	0x0874      	MOVF       R4, 0
0x04E9	0x07F0      	ADDWF      R0, 1
0x04EA	0x0875      	MOVF       R4+1, 0
0x04EB	0x1803      	BTFSC      STATUS, 0
0x04EC	0x0F75      	INCFSZ     R4+1, 0
0x04ED	0x07F1      	ADDWF      R0+1, 1
0x04EE	0x0876      	MOVF       R4+2, 0
0x04EF	0x1803      	BTFSC      STATUS, 0
0x04F0	0x0F76      	INCFSZ     R4+2, 0
0x04F1	0x07F2      	ADDWF      R0+2, 1
0x04F2	0x0877      	MOVF       R4+3, 0
0x04F3	0x1803      	BTFSC      STATUS, 0
0x04F4	0x0F77      	INCFSZ     R4+3, 0
0x04F5	0x07F3      	ADDWF      R0+3, 1
0x04F6	0x0870      	MOVF       R0, 0
0x04F7	0x00E5      	MOVWF      _T2counts
0x04F8	0x0871      	MOVF       R0+1, 0
0x04F9	0x00E6      	MOVWF      _T2counts+1
0x04FA	0x0872      	MOVF       R0+2, 0
0x04FB	0x00E7      	MOVWF      _T2counts+2
0x04FC	0x0873      	MOVF       R0+3, 0
0x04FD	0x00E8      	MOVWF      _T2counts+3
;BicycleSafetyProject.c,406 :: 		T2time = T2counts;                // Time in microseconds
0x04FE	0x0870      	MOVF       R0, 0
0x04FF	0x00E9      	MOVWF      _T2time
0x0500	0x0871      	MOVF       R0+1, 0
0x0501	0x00EA      	MOVWF      _T2time+1
0x0502	0x0872      	MOVF       R0+2, 0
0x0503	0x00EB      	MOVWF      _T2time+2
0x0504	0x0873      	MOVF       R0+3, 0
0x0505	0x00EC      	MOVWF      _T2time+3
;BicycleSafetyProject.c,407 :: 		D2 = ((T2time * 34) / 1000) / 2;  // Calculate distance in cm
0x0506	0x3022      	MOVLW      34
0x0507	0x00F4      	MOVWF      R4
0x0508	0x01F5      	CLRF       R4+1
0x0509	0x01F6      	CLRF       R4+2
0x050A	0x01F7      	CLRF       R4+3
0x050B	0x22DE      	CALL       _Mul_32x32_U
0x050C	0x30E8      	MOVLW      232
0x050D	0x00F4      	MOVWF      R4
0x050E	0x3003      	MOVLW      3
0x050F	0x00F5      	MOVWF      R4+1
0x0510	0x01F6      	CLRF       R4+2
0x0511	0x01F7      	CLRF       R4+3
0x0512	0x2152      	CALL       _Div_32x32_U
0x0513	0x0870      	MOVF       R0, 0
0x0514	0x00B2      	MOVWF      _D2
0x0515	0x0871      	MOVF       R0+1, 0
0x0516	0x00B3      	MOVWF      _D2+1
0x0517	0x0872      	MOVF       R0+2, 0
0x0518	0x00B4      	MOVWF      _D2+2
0x0519	0x0873      	MOVF       R0+3, 0
0x051A	0x00B5      	MOVWF      _D2+3
0x051B	0x0CB5      	RRF        _D2+3, 1
0x051C	0x0CB4      	RRF        _D2+2, 1
0x051D	0x0CB3      	RRF        _D2+1, 1
0x051E	0x0CB2      	RRF        _D2, 1
0x051F	0x13B5      	BCF        _D2+3, 7
;BicycleSafetyProject.c,408 :: 		D2read = 0x01;                    // Set read flag
0x0520	0x3001      	MOVLW      1
0x0521	0x00B1      	MOVWF      _D2read
;BicycleSafetyProject.c,409 :: 		}
L_end_sonar_read2:
0x0522	0x0008      	RETURN
; end of _sonar_read2
_ATD_init:
;BicycleSafetyProject.c,317 :: 		void ATD_init(void) {
;BicycleSafetyProject.c,318 :: 		ADCON0 = 0x41;             // ADC ON, Don't GO, Channel 0, Fosc/16
0x0523	0x3041      	MOVLW      65
0x0524	0x1283      	BCF        STATUS, 5
0x0525	0x1303      	BCF        STATUS, 6
0x0526	0x009F      	MOVWF      ADCON0
;BicycleSafetyProject.c,319 :: 		ADCON1 = 0xC4;             // AN0, AN1, AN3 analog channels; 500 KHz, right justified
0x0527	0x30C4      	MOVLW      196
0x0528	0x1683      	BSF        STATUS, 5
0x0529	0x009F      	MOVWF      ADCON1
;BicycleSafetyProject.c,320 :: 		}
L_end_ATD_init:
0x052A	0x0008      	RETURN
; end of _ATD_init
_port_init:
;BicycleSafetyProject.c,304 :: 		void port_init(void){
;BicycleSafetyProject.c,305 :: 		TRISA = 0x0F;                 // Configure RA4 RA5 RA6 RA7 as output
0x052B	0x300F      	MOVLW      15
0x052C	0x1683      	BSF        STATUS, 5
0x052D	0x1303      	BCF        STATUS, 6
0x052E	0x0085      	MOVWF      TRISA
;BicycleSafetyProject.c,306 :: 		PORTA = 0x00;                 // Initialize PORTA to LOW
0x052F	0x1283      	BCF        STATUS, 5
0x0530	0x0185      	CLRF       PORTA
;BicycleSafetyProject.c,307 :: 		TRISB = 0x00;                 // Configure RB0, RB4, RB5, RB6 as inputs
0x0531	0x1683      	BSF        STATUS, 5
0x0532	0x0186      	CLRF       TRISB
;BicycleSafetyProject.c,308 :: 		PORTB = 0x00;                 // Initialize PORTB to LOW
0x0533	0x1283      	BCF        STATUS, 5
0x0534	0x0186      	CLRF       PORTB
;BicycleSafetyProject.c,309 :: 		TRISC = 0x50;                 // Configure RC6 and RC4 as input                                                         v
0x0535	0x3050      	MOVLW      80
0x0536	0x1683      	BSF        STATUS, 5
0x0537	0x0087      	MOVWF      TRISC
;BicycleSafetyProject.c,310 :: 		PORTC = 0x00;                 // Initialize PORTC to LOW
0x0538	0x1283      	BCF        STATUS, 5
0x0539	0x0187      	CLRF       PORTC
;BicycleSafetyProject.c,311 :: 		TRISD = 0x00;
0x053A	0x1683      	BSF        STATUS, 5
0x053B	0x0188      	CLRF       TRISD
;BicycleSafetyProject.c,312 :: 		PORTD = 0x00;
0x053C	0x1283      	BCF        STATUS, 5
0x053D	0x0188      	CLRF       PORTD
;BicycleSafetyProject.c,313 :: 		TRISE = 0x0F;
0x053E	0x300F      	MOVLW      15
0x053F	0x1683      	BSF        STATUS, 5
0x0540	0x0089      	MOVWF      TRISE
;BicycleSafetyProject.c,314 :: 		PORTE = 0x00;
0x0541	0x1283      	BCF        STATUS, 5
0x0542	0x0189      	CLRF       PORTE
;BicycleSafetyProject.c,315 :: 		}
L_end_port_init:
0x0543	0x0008      	RETURN
; end of _port_init
_main:
;BicycleSafetyProject.c,220 :: 		void main() {
;BicycleSafetyProject.c,222 :: 		port_init();
0x0544	0x252B      	CALL       _port_init
;BicycleSafetyProject.c,223 :: 		ATD_init();                  // Initialize ADC
0x0545	0x2523      	CALL       _ATD_init
;BicycleSafetyProject.c,224 :: 		sonar_init();                // Initialize ultrasonic sensors
0x0546	0x2389      	CALL       _sonar_init
;BicycleSafetyProject.c,225 :: 		CCPPWM_init();               // Initialize PWM for motors
0x0547	0x2329      	CALL       _CCPPWM_init
;BicycleSafetyProject.c,226 :: 		CCPcompare_init();
0x0548	0x233E      	CALL       _CCPcompare_init
;BicycleSafetyProject.c,229 :: 		OPTION_REG = 0x07;           // Oscillator clock/4, prescaler of 256
0x0549	0x3007      	MOVLW      7
0x054A	0x1683      	BSF        STATUS, 5
0x054B	0x0081      	MOVWF      OPTION_REG
;BicycleSafetyProject.c,230 :: 		INTCON = 0xF0;               // Enable all interrupts
0x054C	0x30F0      	MOVLW      240
0x054D	0x008B      	MOVWF      INTCON
;BicycleSafetyProject.c,231 :: 		TMR0 = 0;                    // Reset Timer0
0x054E	0x1283      	BCF        STATUS, 5
0x054F	0x0181      	CLRF       TMR0
;BicycleSafetyProject.c,234 :: 		tick = tick1 = tick2 = tick3 = tick4 = ticka = tickb = pulse = 0;
0x0550	0x01BC      	CLRF       _pulse
0x0551	0x01BD      	CLRF       _pulse+1
0x0552	0x01BB      	CLRF       _tickb
0x0553	0x01BF      	CLRF       _ticka
0x0554	0x01BE      	CLRF       _tick4
0x0555	0x01B8      	CLRF       _tick3
0x0556	0x01B7      	CLRF       _tick2
0x0557	0x01BA      	CLRF       _tick1
0x0558	0x01B9      	CLRF       _tick
;BicycleSafetyProject.c,236 :: 		servo_flag = 0;
0x0559	0x01B6      	CLRF       _servo_flag
;BicycleSafetyProject.c,237 :: 		sonar_e = 1;
0x055A	0x3001      	MOVLW      1
0x055B	0x00AB      	MOVWF      _sonar_e
;BicycleSafetyProject.c,238 :: 		toggle_servo = 0;
0x055C	0x01AC      	CLRF       _toggle_servo
;BicycleSafetyProject.c,242 :: 		while (1) {
L_main24:
;BicycleSafetyProject.c,244 :: 		if(sonar_e) {
0x055D	0x082B      	MOVF       _sonar_e, 0
0x055E	0x1903      	BTFSC      STATUS, 2
0x055F	0x2DF6      	GOTO       L_main26
;BicycleSafetyProject.c,245 :: 		if (D1read & 0x01) {
0x0560	0x1C26      	BTFSS      _D1read, 0
0x0561	0x2DAA      	GOTO       L_main27
;BicycleSafetyProject.c,246 :: 		if (D1 < 10) {
0x0562	0x3000      	MOVLW      0
0x0563	0x022A      	SUBWF      _D1+3, 0
0x0564	0x1D03      	BTFSS      STATUS, 2
0x0565	0x2D70      	GOTO       L__main78
0x0566	0x3000      	MOVLW      0
0x0567	0x0229      	SUBWF      _D1+2, 0
0x0568	0x1D03      	BTFSS      STATUS, 2
0x0569	0x2D70      	GOTO       L__main78
0x056A	0x3000      	MOVLW      0
0x056B	0x0228      	SUBWF      _D1+1, 0
0x056C	0x1D03      	BTFSS      STATUS, 2
0x056D	0x2D70      	GOTO       L__main78
0x056E	0x300A      	MOVLW      10
0x056F	0x0227      	SUBWF      _D1, 0
L__main78:
0x0570	0x1803      	BTFSC      STATUS, 0
0x0571	0x2D77      	GOTO       L_main28
;BicycleSafetyProject.c,247 :: 		PORTB |= 0x40;  // Turn on motor 1
0x0572	0x1706      	BSF        PORTB, 6
;BicycleSafetyProject.c,248 :: 		mspeed1 = 250;  // Set high speed
0x0573	0x30FA      	MOVLW      250
0x0574	0x1683      	BSF        STATUS, 5
0x0575	0x00A0      	MOVWF      _mspeed1
;BicycleSafetyProject.c,249 :: 		} else if (D1 < 30) {
0x0576	0x2DA8      	GOTO       L_main29
L_main28:
0x0577	0x3000      	MOVLW      0
0x0578	0x1283      	BCF        STATUS, 5
0x0579	0x022A      	SUBWF      _D1+3, 0
0x057A	0x1D03      	BTFSS      STATUS, 2
0x057B	0x2D86      	GOTO       L__main79
0x057C	0x3000      	MOVLW      0
0x057D	0x0229      	SUBWF      _D1+2, 0
0x057E	0x1D03      	BTFSS      STATUS, 2
0x057F	0x2D86      	GOTO       L__main79
0x0580	0x3000      	MOVLW      0
0x0581	0x0228      	SUBWF      _D1+1, 0
0x0582	0x1D03      	BTFSS      STATUS, 2
0x0583	0x2D86      	GOTO       L__main79
0x0584	0x301E      	MOVLW      30
0x0585	0x0227      	SUBWF      _D1, 0
L__main79:
0x0586	0x1803      	BTFSC      STATUS, 0
0x0587	0x2D8D      	GOTO       L_main30
;BicycleSafetyProject.c,250 :: 		PORTB |= 0x40;   // Maintain motor 1
0x0588	0x1706      	BSF        PORTB, 6
;BicycleSafetyProject.c,251 :: 		mspeed1 = 200;  // Set medium speed
0x0589	0x30C8      	MOVLW      200
0x058A	0x1683      	BSF        STATUS, 5
0x058B	0x00A0      	MOVWF      _mspeed1
;BicycleSafetyProject.c,252 :: 		} else if (D1 < 50) {
0x058C	0x2DA8      	GOTO       L_main31
L_main30:
0x058D	0x3000      	MOVLW      0
0x058E	0x1283      	BCF        STATUS, 5
0x058F	0x022A      	SUBWF      _D1+3, 0
0x0590	0x1D03      	BTFSS      STATUS, 2
0x0591	0x2D9C      	GOTO       L__main80
0x0592	0x3000      	MOVLW      0
0x0593	0x0229      	SUBWF      _D1+2, 0
0x0594	0x1D03      	BTFSS      STATUS, 2
0x0595	0x2D9C      	GOTO       L__main80
0x0596	0x3000      	MOVLW      0
0x0597	0x0228      	SUBWF      _D1+1, 0
0x0598	0x1D03      	BTFSS      STATUS, 2
0x0599	0x2D9C      	GOTO       L__main80
0x059A	0x3032      	MOVLW      50
0x059B	0x0227      	SUBWF      _D1, 0
L__main80:
0x059C	0x1803      	BTFSC      STATUS, 0
0x059D	0x2DA3      	GOTO       L_main32
;BicycleSafetyProject.c,253 :: 		PORTB |= 0x40;   // Maintain motor 1
0x059E	0x1706      	BSF        PORTB, 6
;BicycleSafetyProject.c,254 :: 		mspeed1 = 175;  // Set low speed
0x059F	0x30AF      	MOVLW      175
0x05A0	0x1683      	BSF        STATUS, 5
0x05A1	0x00A0      	MOVWF      _mspeed1
;BicycleSafetyProject.c,255 :: 		} else {
0x05A2	0x2DA8      	GOTO       L_main33
L_main32:
;BicycleSafetyProject.c,256 :: 		PORTB &= 0xBF;   // Turn off motor 1
0x05A3	0x30BF      	MOVLW      191
0x05A4	0x1283      	BCF        STATUS, 5
0x05A5	0x0586      	ANDWF      PORTB, 1
;BicycleSafetyProject.c,257 :: 		mspeed1 = 0;     // Stop motor
0x05A6	0x1683      	BSF        STATUS, 5
0x05A7	0x01A0      	CLRF       _mspeed1
;BicycleSafetyProject.c,258 :: 		}
L_main33:
L_main31:
L_main29:
;BicycleSafetyProject.c,259 :: 		D1read = 0x00;       // Clear read flag for sensor 1
0x05A8	0x1283      	BCF        STATUS, 5
0x05A9	0x01A6      	CLRF       _D1read
;BicycleSafetyProject.c,260 :: 		}
L_main27:
;BicycleSafetyProject.c,263 :: 		if (D2read & 0x01) {
0x05AA	0x1C31      	BTFSS      _D2read, 0
0x05AB	0x2DF4      	GOTO       L_main34
;BicycleSafetyProject.c,264 :: 		if (D2 < 10) {
0x05AC	0x3000      	MOVLW      0
0x05AD	0x0235      	SUBWF      _D2+3, 0
0x05AE	0x1D03      	BTFSS      STATUS, 2
0x05AF	0x2DBA      	GOTO       L__main81
0x05B0	0x3000      	MOVLW      0
0x05B1	0x0234      	SUBWF      _D2+2, 0
0x05B2	0x1D03      	BTFSS      STATUS, 2
0x05B3	0x2DBA      	GOTO       L__main81
0x05B4	0x3000      	MOVLW      0
0x05B5	0x0233      	SUBWF      _D2+1, 0
0x05B6	0x1D03      	BTFSS      STATUS, 2
0x05B7	0x2DBA      	GOTO       L__main81
0x05B8	0x300A      	MOVLW      10
0x05B9	0x0232      	SUBWF      _D2, 0
L__main81:
0x05BA	0x1803      	BTFSC      STATUS, 0
0x05BB	0x2DC2      	GOTO       L_main35
;BicycleSafetyProject.c,265 :: 		mspeed2 = 250;  // Set high speed
0x05BC	0x30FA      	MOVLW      250
0x05BD	0x1683      	BSF        STATUS, 5
0x05BE	0x00A3      	MOVWF      _mspeed2
;BicycleSafetyProject.c,266 :: 		PORTC |= 0x08; // Turn on motor 2
0x05BF	0x1283      	BCF        STATUS, 5
0x05C0	0x1587      	BSF        PORTC, 3
;BicycleSafetyProject.c,267 :: 		} else if (D2 < 30) {
0x05C1	0x2DF3      	GOTO       L_main36
L_main35:
0x05C2	0x3000      	MOVLW      0
0x05C3	0x0235      	SUBWF      _D2+3, 0
0x05C4	0x1D03      	BTFSS      STATUS, 2
0x05C5	0x2DD0      	GOTO       L__main82
0x05C6	0x3000      	MOVLW      0
0x05C7	0x0234      	SUBWF      _D2+2, 0
0x05C8	0x1D03      	BTFSS      STATUS, 2
0x05C9	0x2DD0      	GOTO       L__main82
0x05CA	0x3000      	MOVLW      0
0x05CB	0x0233      	SUBWF      _D2+1, 0
0x05CC	0x1D03      	BTFSS      STATUS, 2
0x05CD	0x2DD0      	GOTO       L__main82
0x05CE	0x301E      	MOVLW      30
0x05CF	0x0232      	SUBWF      _D2, 0
L__main82:
0x05D0	0x1803      	BTFSC      STATUS, 0
0x05D1	0x2DD8      	GOTO       L_main37
;BicycleSafetyProject.c,268 :: 		mspeed2 = 120;  // Set medium speed
0x05D2	0x3078      	MOVLW      120
0x05D3	0x1683      	BSF        STATUS, 5
0x05D4	0x00A3      	MOVWF      _mspeed2
;BicycleSafetyProject.c,269 :: 		PORTC |= 0x08; // Maintain motor 2
0x05D5	0x1283      	BCF        STATUS, 5
0x05D6	0x1587      	BSF        PORTC, 3
;BicycleSafetyProject.c,270 :: 		} else if (D2 < 50) {
0x05D7	0x2DF3      	GOTO       L_main38
L_main37:
0x05D8	0x3000      	MOVLW      0
0x05D9	0x0235      	SUBWF      _D2+3, 0
0x05DA	0x1D03      	BTFSS      STATUS, 2
0x05DB	0x2DE6      	GOTO       L__main83
0x05DC	0x3000      	MOVLW      0
0x05DD	0x0234      	SUBWF      _D2+2, 0
0x05DE	0x1D03      	BTFSS      STATUS, 2
0x05DF	0x2DE6      	GOTO       L__main83
0x05E0	0x3000      	MOVLW      0
0x05E1	0x0233      	SUBWF      _D2+1, 0
0x05E2	0x1D03      	BTFSS      STATUS, 2
0x05E3	0x2DE6      	GOTO       L__main83
0x05E4	0x3032      	MOVLW      50
0x05E5	0x0232      	SUBWF      _D2, 0
L__main83:
0x05E6	0x1803      	BTFSC      STATUS, 0
0x05E7	0x2DEF      	GOTO       L_main39
;BicycleSafetyProject.c,271 :: 		mspeed2 = 60;   // Set low speed
0x05E8	0x303C      	MOVLW      60
0x05E9	0x1683      	BSF        STATUS, 5
0x05EA	0x00A3      	MOVWF      _mspeed2
;BicycleSafetyProject.c,272 :: 		PORTC |= 0x808; // Maintain motor 2
0x05EB	0x3008      	MOVLW      8
0x05EC	0x1283      	BCF        STATUS, 5
0x05ED	0x0487      	IORWF      PORTC, 1
;BicycleSafetyProject.c,273 :: 		} else {
0x05EE	0x2DF3      	GOTO       L_main40
L_main39:
;BicycleSafetyProject.c,274 :: 		mspeed2 = 0;    // Stop motor
0x05EF	0x1683      	BSF        STATUS, 5
0x05F0	0x01A3      	CLRF       _mspeed2
;BicycleSafetyProject.c,275 :: 		PORTC &= ~0x08; // Turn off motor 2
0x05F1	0x1283      	BCF        STATUS, 5
0x05F2	0x1187      	BCF        PORTC, 3
;BicycleSafetyProject.c,276 :: 		}
L_main40:
L_main38:
L_main36:
;BicycleSafetyProject.c,277 :: 		D2read = 0x00;       // Clear read flag for sensor 2
0x05F3	0x01B1      	CLRF       _D2read
;BicycleSafetyProject.c,278 :: 		}
L_main34:
;BicycleSafetyProject.c,279 :: 		motor1();               // Update motor 1
0x05F4	0x2349      	CALL       _motor1
;BicycleSafetyProject.c,280 :: 		motor2();               // Update motor 2
0x05F5	0x234F      	CALL       _motor2
;BicycleSafetyProject.c,281 :: 		}
L_main26:
;BicycleSafetyProject.c,283 :: 		if(servo_flag){
0x05F6	0x1283      	BCF        STATUS, 5
0x05F7	0x0836      	MOVF       _servo_flag, 0
0x05F8	0x1903      	BTFSC      STATUS, 2
0x05F9	0x2E22      	GOTO       L_main41
;BicycleSafetyProject.c,284 :: 		sonar_e = 0;         // disable sonar read
0x05FA	0x01AB      	CLRF       _sonar_e
;BicycleSafetyProject.c,285 :: 		mspeed1 = 0;
0x05FB	0x1683      	BSF        STATUS, 5
0x05FC	0x01A0      	CLRF       _mspeed1
;BicycleSafetyProject.c,286 :: 		mspeed2 = 0;
0x05FD	0x01A3      	CLRF       _mspeed2
;BicycleSafetyProject.c,287 :: 		CCP2CON = 0x08;
0x05FE	0x3008      	MOVLW      8
0x05FF	0x1283      	BCF        STATUS, 5
0x0600	0x009D      	MOVWF      CCP2CON
;BicycleSafetyProject.c,288 :: 		T1CON = 0x01;              //change tmr1 prescaler to 1:1
0x0601	0x3001      	MOVLW      1
0x0602	0x0090      	MOVWF      T1CON
;BicycleSafetyProject.c,289 :: 		PIE2 |= 0x01;
0x0603	0x1683      	BSF        STATUS, 5
0x0604	0x140D      	BSF        PIE2, 0
;BicycleSafetyProject.c,291 :: 		if(toggle_servo == 0){
0x0605	0x1283      	BCF        STATUS, 5
0x0606	0x082C      	MOVF       _toggle_servo, 0
0x0607	0x3A00      	XORLW      0
0x0608	0x1D03      	BTFSS      STATUS, 2
0x0609	0x2E0F      	GOTO       L_main42
;BicycleSafetyProject.c,292 :: 		angle = 1000;
0x060A	0x30E8      	MOVLW      232
0x060B	0x00AD      	MOVWF      _angle
0x060C	0x3003      	MOVLW      3
0x060D	0x00AE      	MOVWF      _angle+1
;BicycleSafetyProject.c,293 :: 		} else if(toggle_servo == 1) {
0x060E	0x2E17      	GOTO       L_main43
L_main42:
0x060F	0x082C      	MOVF       _toggle_servo, 0
0x0610	0x3A01      	XORLW      1
0x0611	0x1D03      	BTFSS      STATUS, 2
0x0612	0x2E17      	GOTO       L_main44
;BicycleSafetyProject.c,294 :: 		angle = 3000;
0x0613	0x30B8      	MOVLW      184
0x0614	0x00AD      	MOVWF      _angle
0x0615	0x300B      	MOVLW      11
0x0616	0x00AE      	MOVWF      _angle+1
;BicycleSafetyProject.c,295 :: 		}
L_main44:
L_main43:
;BicycleSafetyProject.c,297 :: 		msDelay(5000);             // delay 5 seconds
0x0617	0x3088      	MOVLW      136
0x0618	0x1683      	BSF        STATUS, 5
0x0619	0x00A4      	MOVWF      FARG_msDelay_msCnt
0x061A	0x3013      	MOVLW      19
0x061B	0x00A5      	MOVWF      FARG_msDelay_msCnt+1
0x061C	0x2369      	CALL       _msDelay
;BicycleSafetyProject.c,298 :: 		servo_flag = 0;            //disable sonar flag
0x061D	0x1283      	BCF        STATUS, 5
0x061E	0x1303      	BCF        STATUS, 6
0x061F	0x01B6      	CLRF       _servo_flag
;BicycleSafetyProject.c,299 :: 		sonar_e = 1;               // enable sonar read
0x0620	0x3001      	MOVLW      1
0x0621	0x00AB      	MOVWF      _sonar_e
;BicycleSafetyProject.c,300 :: 		}
L_main41:
;BicycleSafetyProject.c,301 :: 		}
0x0622	0x2D5D      	GOTO       L_main24
;BicycleSafetyProject.c,302 :: 		}
L_end_main:
0x0623	0x2E23      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004     [334]    _interrupt
0x0152     [376]    _Div_32x32_U
0x02CA      [20]    _usDelay
0x02DE      [55]    _Mul_32x32_U
0x0315      [20]    _PWMusDelay
0x0329      [21]    _CCPPWM_init
0x033E      [11]    _CCPcompare_init
0x0349       [6]    _motor1
0x034F      [26]    _motor2
0x0369      [32]    _msDelay
0x0389      [40]    _sonar_init
0x03B1      [24]    _ATD_read0
0x03C9      [43]    _Mul_16X16_U
0x03F4      [29]    _Div_16X16_U
0x0411     [109]    _sonar_read1
0x047E      [28]    _ATD_read2
0x049A      [28]    _ATD_read1
0x04B6     [109]    _sonar_read2
0x0523       [8]    _ATD_init
0x052B      [25]    _port_init
0x0544     [224]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x0009       [1]    PORTE
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PIR1
0x000D       [1]    PIR2
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [1]    T1CON
0x0012       [1]    T2CON
0x0015       [1]    CCPR1L
0x0017       [1]    CCP1CON
0x001B       [1]    CCPR2L
0x001C       [1]    CCPR2H
0x001D       [1]    CCP2CON
0x001E       [1]    ADRESH
0x001F       [1]    ADCON0
0x0020       [1]    ___math_tempb
0x0026       [1]    _D1read
0x0027       [4]    _D1
0x002B       [1]    _sonar_e
0x002C       [1]    _toggle_servo
0x002D       [2]    _angle
0x002F       [2]    _period
0x0031       [1]    _D2read
0x0032       [4]    _D2
0x0036       [1]    _servo_flag
0x0037       [1]    _tick2
0x0038       [1]    _tick3
0x0039       [1]    _tick
0x003A       [1]    _tick1
0x003B       [1]    _tickb
0x003C       [2]    _pulse
0x003E       [1]    _tick4
0x003F       [1]    _ticka
0x0040       [2]    _duty
0x0042       [1]    _lturn
0x0043       [2]    _hallA2
0x0045       [2]    _flexD1
0x0047       [1]    _rturn
0x0048       [4]    _v
0x004C       [1]    _tick5
0x004D       [2]    _hallD2
0x004F       [4]    _dis
0x0053       [2]    _flexA1
0x0055       [4]    _T1time
0x0059       [2]    _T2overflow
0x005B       [2]    _T1overflow
0x005D       [4]    _T1counts
0x0061       [2]    _flexA0
0x0063       [2]    _flexD0
0x0065       [4]    _T2counts
0x0069       [4]    _T2time
0x006D       [2]    ___DoICPAddr
0x006F       [1]    _HL
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0088       [1]    TRISD
0x0089       [1]    TRISE
0x008C       [1]    PIE1
0x008D       [1]    PIE2
0x0092       [1]    PR2
0x009E       [1]    ADRESL
0x009F       [1]    ADCON1
0x00A0       [1]    _mspeed1
0x00A1       [1]    ___savePCLATH
0x00A2       [1]    ___saveSTATUS
0x00A3       [1]    _mspeed2
0x00A4       [2]    FARG_msDelay_msCnt
0x00A6       [2]    FARG_PWMusDelay_PWMusCnt
0x00A8       [2]    FARG_usDelay_usCnt
