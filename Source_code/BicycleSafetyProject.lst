;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 1/12/2025 3:25:02 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x158A      	BSF        PCLATH, 3
0x0001	0x2800      	GOTO       2048
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x1683      	BSF        STATUS, 5
0x0008	0x00B3      	MOVWF      ___saveSTATUS
0x0009	0x080A      	MOVF       PCLATH, 0
0x000A	0x00B2      	MOVWF      ___savePCLATH
0x000B	0x018A      	CLRF       PCLATH
0x000C	0x0870      	MOVF       R0, 0
0x000D	0x1283      	BCF        STATUS, 5
0x000E	0x00A6      	MOVWF      38
0x000F	0x0871      	MOVF       R1, 0
0x0010	0x00A5      	MOVWF      37
0x0011	0x0872      	MOVF       R2, 0
0x0012	0x00A4      	MOVWF      36
0x0013	0x0873      	MOVF       R3, 0
0x0014	0x00A3      	MOVWF      35
0x0015	0x0874      	MOVF       R4, 0
0x0016	0x00A2      	MOVWF      34
0x0017	0x087C      	MOVF       R12, 0
0x0018	0x00A1      	MOVWF      33
;BicycleSafetyProject.c,79 :: 		void interrupt() {
;BicycleSafetyProject.c,82 :: 		if (INTCON & 0x04) {
0x0019	0x1D0B      	BTFSS      INTCON, 2
0x001A	0x291E      	GOTO       L_interrupt0
;BicycleSafetyProject.c,83 :: 		tick++;                  // Increment Timer0 counter (~32ms per increment)
0x001B	0x1683      	BSF        STATUS, 5
0x001C	0x0AA7      	INCF       _tick, 1
;BicycleSafetyProject.c,84 :: 		tick3++;                 // Increment hall sensor pulse counter
0x001D	0x0AA6      	INCF       _tick3, 1
;BicycleSafetyProject.c,85 :: 		tick4++;                 // Increment speed calculation counter
0x001E	0x1283      	BCF        STATUS, 5
0x001F	0x0AE8      	INCF       _tick4, 1
;BicycleSafetyProject.c,88 :: 		if (tick == 2) {
0x0020	0x1683      	BSF        STATUS, 5
0x0021	0x0827      	MOVF       _tick, 0
0x0022	0x3A02      	XORLW      2
0x0023	0x1D03      	BTFSS      STATUS, 2
0x0024	0x2867      	GOTO       L_interrupt1
;BicycleSafetyProject.c,89 :: 		tick = 0;
0x0025	0x01A7      	CLRF       _tick
;BicycleSafetyProject.c,92 :: 		flexA0 = ATD_read0();
0x0026	0x24DF      	CALL       _ATD_read0
0x0027	0x0870      	MOVF       R0, 0
0x0028	0x1283      	BCF        STATUS, 5
0x0029	0x00EB      	MOVWF      _flexA0
0x002A	0x0871      	MOVF       R0+1, 0
0x002B	0x00EC      	MOVWF      _flexA0+1
;BicycleSafetyProject.c,93 :: 		flexD0 = (unsigned int)(flexA0 * 50) / 1023;  // Scale AN0 reading
0x002C	0x3032      	MOVLW      50
0x002D	0x00F4      	MOVWF      R4
0x002E	0x3000      	MOVLW      0
0x002F	0x00F5      	MOVWF      R4+1
0x0030	0x24F7      	CALL       _Mul_16X16_U
0x0031	0x30FF      	MOVLW      255
0x0032	0x00F4      	MOVWF      R4
0x0033	0x3003      	MOVLW      3
0x0034	0x00F5      	MOVWF      R4+1
0x0035	0x2522      	CALL       _Div_16X16_U
0x0036	0x0870      	MOVF       R0, 0
0x0037	0x1683      	BSF        STATUS, 5
0x0038	0x00A4      	MOVWF      _flexD0
0x0039	0x0871      	MOVF       R0+1, 0
0x003A	0x00A5      	MOVWF      _flexD0+1
;BicycleSafetyProject.c,94 :: 		flexA1 = ATD_read1();
0x003B	0x25C8      	CALL       _ATD_read1
0x003C	0x0870      	MOVF       R0, 0
0x003D	0x00A2      	MOVWF      _flexA1
0x003E	0x0871      	MOVF       R0+1, 0
0x003F	0x00A3      	MOVWF      _flexA1+1
;BicycleSafetyProject.c,95 :: 		flexD1 = (unsigned int)(flexA1 * 50) / 1023;  // Scale AN1 reading
0x0040	0x3032      	MOVLW      50
0x0041	0x00F4      	MOVWF      R4
0x0042	0x3000      	MOVLW      0
0x0043	0x00F5      	MOVWF      R4+1
0x0044	0x24F7      	CALL       _Mul_16X16_U
0x0045	0x30FF      	MOVLW      255
0x0046	0x00F4      	MOVWF      R4
0x0047	0x3003      	MOVLW      3
0x0048	0x00F5      	MOVWF      R4+1
0x0049	0x2522      	CALL       _Div_16X16_U
0x004A	0x0870      	MOVF       R0, 0
0x004B	0x00E3      	MOVWF      _flexD1
0x004C	0x0871      	MOVF       R0+1, 0
0x004D	0x00E4      	MOVWF      _flexD1+1
;BicycleSafetyProject.c,98 :: 		if ((flexD0 > 23) || (flexD1 > 22 )){
0x004E	0x1683      	BSF        STATUS, 5
0x004F	0x0825      	MOVF       _flexD0+1, 0
0x0050	0x3C00      	SUBLW      0
0x0051	0x1D03      	BTFSS      STATUS, 2
0x0052	0x2855      	GOTO       L__interrupt74
0x0053	0x0824      	MOVF       _flexD0, 0
0x0054	0x3C17      	SUBLW      23
L__interrupt74:
0x0055	0x1C03      	BTFSS      STATUS, 0
0x0056	0x2861      	GOTO       L__interrupt71
0x0057	0x1283      	BCF        STATUS, 5
0x0058	0x0864      	MOVF       _flexD1+1, 0
0x0059	0x3C00      	SUBLW      0
0x005A	0x1D03      	BTFSS      STATUS, 2
0x005B	0x285E      	GOTO       L__interrupt75
0x005C	0x0863      	MOVF       _flexD1, 0
0x005D	0x3C16      	SUBLW      22
L__interrupt75:
0x005E	0x1C03      	BTFSS      STATUS, 0
0x005F	0x2861      	GOTO       L__interrupt71
0x0060	0x2865      	GOTO       L_interrupt4
L__interrupt71:
0x0061	0x1283      	BCF        STATUS, 5
;BicycleSafetyProject.c,99 :: 		PORTD |= 0x03;
0x0062	0x3003      	MOVLW      3
0x0063	0x0488      	IORWF      PORTD, 1
;BicycleSafetyProject.c,100 :: 		} else {
0x0064	0x2867      	GOTO       L_interrupt5
L_interrupt4:
;BicycleSafetyProject.c,101 :: 		PORTD &= 0xFC;
0x0065	0x30FC      	MOVLW      252
0x0066	0x0588      	ANDWF      PORTD, 1
;BicycleSafetyProject.c,102 :: 		}
L_interrupt5:
;BicycleSafetyProject.c,103 :: 		}
L_interrupt1:
0x0067	0x1283      	BCF        STATUS, 5
;BicycleSafetyProject.c,105 :: 		if (!(PORTE & 0x01)) {   // Check if right turn button is pressed
0x0068	0x1809      	BTFSC      PORTE, 0
0x0069	0x286D      	GOTO       L_interrupt6
;BicycleSafetyProject.c,106 :: 		PORTD |= 0x04;      // Turn on RD2 (right turn signal)
0x006A	0x1508      	BSF        PORTD, 2
;BicycleSafetyProject.c,107 :: 		rturn = 1;          // Set right turn flag
0x006B	0x3001      	MOVLW      1
0x006C	0x00C9      	MOVWF      _rturn
;BicycleSafetyProject.c,108 :: 		}
L_interrupt6:
;BicycleSafetyProject.c,109 :: 		if (!(PORTE & 0x02)) {   // Check if left turn button is pressed
0x006D	0x1889      	BTFSC      PORTE, 1
0x006E	0x2872      	GOTO       L_interrupt7
;BicycleSafetyProject.c,110 :: 		PORTD |= 0x08;      // Turn on RD2 (left turn signal)
0x006F	0x1588      	BSF        PORTD, 3
;BicycleSafetyProject.c,111 :: 		lturn = 1;          // Set left turn flag
0x0070	0x3001      	MOVLW      1
0x0071	0x00CE      	MOVWF      _lturn
;BicycleSafetyProject.c,112 :: 		}
L_interrupt7:
;BicycleSafetyProject.c,114 :: 		if (!(PORTE & 0x04)) {             // if button is pressed
0x0072	0x1909      	BTFSC      PORTE, 2
0x0073	0x2876      	GOTO       L_interrupt8
;BicycleSafetyProject.c,115 :: 		servo_flag = 1;                 // enable servo flag
0x0074	0x3001      	MOVLW      1
0x0075	0x00EA      	MOVWF      _servo_flag
;BicycleSafetyProject.c,116 :: 		}
L_interrupt8:
;BicycleSafetyProject.c,119 :: 		if (rturn == 1) {
0x0076	0x0849      	MOVF       _rturn, 0
0x0077	0x3A01      	XORLW      1
0x0078	0x1D03      	BTFSS      STATUS, 2
0x0079	0x288F      	GOTO       L_interrupt9
;BicycleSafetyProject.c,120 :: 		tick1++;             // Increment right turn duration counter
0x007A	0x1683      	BSF        STATUS, 5
0x007B	0x0AA8      	INCF       _tick1, 1
;BicycleSafetyProject.c,121 :: 		ticka++;             // Increment right turn blinking interval counter
0x007C	0x1283      	BCF        STATUS, 5
0x007D	0x0AE9      	INCF       _ticka, 1
;BicycleSafetyProject.c,123 :: 		if (ticka == 15) {   // Toggle(right turn signal) every ~480ms
0x007E	0x0869      	MOVF       _ticka, 0
0x007F	0x3A0F      	XORLW      15
0x0080	0x1D03      	BTFSS      STATUS, 2
0x0081	0x2885      	GOTO       L_interrupt10
;BicycleSafetyProject.c,124 :: 		ticka = 0;
0x0082	0x01E9      	CLRF       _ticka
;BicycleSafetyProject.c,125 :: 		PORTD ^= 0x04;   // Toggle RD1
0x0083	0x3004      	MOVLW      4
0x0084	0x0688      	XORWF      PORTD, 1
;BicycleSafetyProject.c,126 :: 		}
L_interrupt10:
;BicycleSafetyProject.c,127 :: 		if (tick1 == 150) {  // Stop right turn signal after ~5 seconds
0x0085	0x1683      	BSF        STATUS, 5
0x0086	0x0828      	MOVF       _tick1, 0
0x0087	0x3A96      	XORLW      150
0x0088	0x1D03      	BTFSS      STATUS, 2
0x0089	0x288F      	GOTO       L_interrupt11
;BicycleSafetyProject.c,128 :: 		tick1 = 0;
0x008A	0x01A8      	CLRF       _tick1
;BicycleSafetyProject.c,129 :: 		rturn = 0;
0x008B	0x1283      	BCF        STATUS, 5
0x008C	0x01C9      	CLRF       _rturn
;BicycleSafetyProject.c,130 :: 		PORTD &= 0xFB;   // Turn off RD1
0x008D	0x30FB      	MOVLW      251
0x008E	0x0588      	ANDWF      PORTD, 1
;BicycleSafetyProject.c,131 :: 		}
L_interrupt11:
;BicycleSafetyProject.c,132 :: 		}
L_interrupt9:
0x008F	0x1283      	BCF        STATUS, 5
;BicycleSafetyProject.c,135 :: 		if (lturn == 1) {
0x0090	0x084E      	MOVF       _lturn, 0
0x0091	0x3A01      	XORLW      1
0x0092	0x1D03      	BTFSS      STATUS, 2
0x0093	0x28A5      	GOTO       L_interrupt12
;BicycleSafetyProject.c,136 :: 		tick2++;             // Increment left turn duration counter
0x0094	0x0AEF      	INCF       _tick2, 1
;BicycleSafetyProject.c,137 :: 		tickb++;             // Increment left turn blinking interval counter
0x0095	0x0AE5      	INCF       _tickb, 1
;BicycleSafetyProject.c,139 :: 		if (tickb == 15) {   // Toggle (left turn signal) every ~480ms
0x0096	0x0865      	MOVF       _tickb, 0
0x0097	0x3A0F      	XORLW      15
0x0098	0x1D03      	BTFSS      STATUS, 2
0x0099	0x289D      	GOTO       L_interrupt13
;BicycleSafetyProject.c,140 :: 		tickb = 0;
0x009A	0x01E5      	CLRF       _tickb
;BicycleSafetyProject.c,141 :: 		PORTD ^= 0x08;   // Toggle RD2
0x009B	0x3008      	MOVLW      8
0x009C	0x0688      	XORWF      PORTD, 1
;BicycleSafetyProject.c,142 :: 		}
L_interrupt13:
;BicycleSafetyProject.c,143 :: 		if (tick2 == 150) {  // Stop left turn signal after ~5 seconds
0x009D	0x086F      	MOVF       _tick2, 0
0x009E	0x3A96      	XORLW      150
0x009F	0x1D03      	BTFSS      STATUS, 2
0x00A0	0x28A5      	GOTO       L_interrupt14
;BicycleSafetyProject.c,144 :: 		tick2 = 0;
0x00A1	0x01EF      	CLRF       _tick2
;BicycleSafetyProject.c,145 :: 		lturn = 0;
0x00A2	0x01CE      	CLRF       _lturn
;BicycleSafetyProject.c,146 :: 		PORTD &= 0xF7;   // Turn off RD2
0x00A3	0x30F7      	MOVLW      247
0x00A4	0x0588      	ANDWF      PORTD, 1
;BicycleSafetyProject.c,147 :: 		}
L_interrupt14:
;BicycleSafetyProject.c,148 :: 		}
L_interrupt12:
;BicycleSafetyProject.c,152 :: 		if (tick3 == 3) {
0x00A5	0x1683      	BSF        STATUS, 5
0x00A6	0x0826      	MOVF       _tick3, 0
0x00A7	0x3A03      	XORLW      3
0x00A8	0x1D03      	BTFSS      STATUS, 2
0x00A9	0x28CC      	GOTO       L_interrupt15
;BicycleSafetyProject.c,153 :: 		tick3 = 0;
0x00AA	0x01A6      	CLRF       _tick3
;BicycleSafetyProject.c,156 :: 		hallA2 = ATD_read2();
0x00AB	0x25AC      	CALL       _ATD_read2
0x00AC	0x0870      	MOVF       R0, 0
0x00AD	0x1283      	BCF        STATUS, 5
0x00AE	0x00D2      	MOVWF      _hallA2
0x00AF	0x0871      	MOVF       R0+1, 0
0x00B0	0x00D3      	MOVWF      _hallA2+1
;BicycleSafetyProject.c,157 :: 		hallD2 = (unsigned int)(hallA2 * 50) / 1023;
0x00B1	0x3032      	MOVLW      50
0x00B2	0x00F4      	MOVWF      R4
0x00B3	0x3000      	MOVLW      0
0x00B4	0x00F5      	MOVWF      R4+1
0x00B5	0x24F7      	CALL       _Mul_16X16_U
0x00B6	0x30FF      	MOVLW      255
0x00B7	0x00F4      	MOVWF      R4
0x00B8	0x3003      	MOVLW      3
0x00B9	0x00F5      	MOVWF      R4+1
0x00BA	0x2522      	CALL       _Div_16X16_U
0x00BB	0x0870      	MOVF       R0, 0
0x00BC	0x1683      	BSF        STATUS, 5
0x00BD	0x00B4      	MOVWF      _hallD2
0x00BE	0x0871      	MOVF       R0+1, 0
0x00BF	0x00B5      	MOVWF      _hallD2+1
;BicycleSafetyProject.c,160 :: 		if (hallD2 > 10) {
0x00C0	0x0871      	MOVF       R0+1, 0
0x00C1	0x3C00      	SUBLW      0
0x00C2	0x1D03      	BTFSS      STATUS, 2
0x00C3	0x28C6      	GOTO       L__interrupt76
0x00C4	0x0870      	MOVF       R0, 0
0x00C5	0x3C0A      	SUBLW      10
L__interrupt76:
0x00C6	0x1803      	BTFSC      STATUS, 0
0x00C7	0x28CC      	GOTO       L_interrupt16
;BicycleSafetyProject.c,161 :: 		pulse++;
0x00C8	0x1283      	BCF        STATUS, 5
0x00C9	0x0AE6      	INCF       _pulse, 1
0x00CA	0x1903      	BTFSC      STATUS, 2
0x00CB	0x0AE7      	INCF       _pulse+1, 1
;BicycleSafetyProject.c,162 :: 		}
L_interrupt16:
;BicycleSafetyProject.c,163 :: 		}
L_interrupt15:
0x00CC	0x1283      	BCF        STATUS, 5
;BicycleSafetyProject.c,166 :: 		if (tick4 == 219) {
0x00CD	0x0868      	MOVF       _tick4, 0
0x00CE	0x3ADB      	XORLW      219
0x00CF	0x1D03      	BTFSS      STATUS, 2
0x00D0	0x290A      	GOTO       L_interrupt17
;BicycleSafetyProject.c,167 :: 		tick4 = 0;
0x00D1	0x01E8      	CLRF       _tick4
;BicycleSafetyProject.c,170 :: 		dis = (unsigned long)(314 * 35 * pulse) / 2;
0x00D2	0x30EE      	MOVLW      238
0x00D3	0x00F0      	MOVWF      R0
0x00D4	0x302A      	MOVLW      42
0x00D5	0x00F1      	MOVWF      R0+1
0x00D6	0x0866      	MOVF       _pulse, 0
0x00D7	0x00F4      	MOVWF      R4
0x00D8	0x0867      	MOVF       _pulse+1, 0
0x00D9	0x00F5      	MOVWF      R4+1
0x00DA	0x24F7      	CALL       _Mul_16X16_U
0x00DB	0x0870      	MOVF       R0, 0
0x00DC	0x00F5      	MOVWF      R5
0x00DD	0x0871      	MOVF       R0+1, 0
0x00DE	0x00F6      	MOVWF      R5+1
0x00DF	0x01F7      	CLRF       R5+2
0x00E0	0x01F8      	CLRF       R5+3
0x00E1	0x0875      	MOVF       R5, 0
0x00E2	0x00F0      	MOVWF      R0
0x00E3	0x0876      	MOVF       R5+1, 0
0x00E4	0x00F1      	MOVWF      R0+1
0x00E5	0x0877      	MOVF       R5+2, 0
0x00E6	0x00F2      	MOVWF      R0+2
0x00E7	0x0878      	MOVF       R5+3, 0
0x00E8	0x00F3      	MOVWF      R0+3
0x00E9	0x0CF3      	RRF        R0+3, 1
0x00EA	0x0CF2      	RRF        R0+2, 1
0x00EB	0x0CF1      	RRF        R0+1, 1
0x00EC	0x0CF0      	RRF        R0, 1
0x00ED	0x13F3      	BCF        R0+3, 7
0x00EE	0x0870      	MOVF       R0, 0
0x00EF	0x1683      	BSF        STATUS, 5
0x00F0	0x00A9      	MOVWF      _dis
0x00F1	0x0871      	MOVF       R0+1, 0
0x00F2	0x00AA      	MOVWF      _dis+1
0x00F3	0x0872      	MOVF       R0+2, 0
0x00F4	0x00AB      	MOVWF      _dis+2
0x00F5	0x0873      	MOVF       R0+3, 0
0x00F6	0x00AC      	MOVWF      _dis+3
;BicycleSafetyProject.c,173 :: 		v = (unsigned long) dis / 700;
0x00F7	0x30BC      	MOVLW      188
0x00F8	0x00F4      	MOVWF      R4
0x00F9	0x3002      	MOVLW      2
0x00FA	0x00F5      	MOVWF      R4+1
0x00FB	0x01F6      	CLRF       R4+2
0x00FC	0x01F7      	CLRF       R4+3
0x00FD	0x21EE      	CALL       _Div_32x32_U
0x00FE	0x0870      	MOVF       R0, 0
0x00FF	0x1683      	BSF        STATUS, 5
0x0100	0x00AD      	MOVWF      _v
0x0101	0x0871      	MOVF       R0+1, 0
0x0102	0x00AE      	MOVWF      _v+1
0x0103	0x0872      	MOVF       R0+2, 0
0x0104	0x00AF      	MOVWF      _v+2
0x0105	0x0873      	MOVF       R0+3, 0
0x0106	0x00B0      	MOVWF      _v+3
;BicycleSafetyProject.c,176 :: 		pulse = 0;
0x0107	0x1283      	BCF        STATUS, 5
0x0108	0x01E6      	CLRF       _pulse
0x0109	0x01E7      	CLRF       _pulse+1
;BicycleSafetyProject.c,177 :: 		}
L_interrupt17:
;BicycleSafetyProject.c,180 :: 		if (sonar_e) {
0x010A	0x086E      	MOVF       _sonar_e, 0
0x010B	0x1903      	BTFSC      STATUS, 2
0x010C	0x291C      	GOTO       L_interrupt18
;BicycleSafetyProject.c,181 :: 		tick5++;
0x010D	0x1683      	BSF        STATUS, 5
0x010E	0x0AB1      	INCF       _tick5, 1
;BicycleSafetyProject.c,182 :: 		PIE2 &= 0xFE;   //disable CCP2 interrupt disable
0x010F	0x30FE      	MOVLW      254
0x0110	0x058D      	ANDWF      PIE2, 1
;BicycleSafetyProject.c,183 :: 		T1CON = 0x18;
0x0111	0x3018      	MOVLW      24
0x0112	0x1283      	BCF        STATUS, 5
0x0113	0x0090      	MOVWF      T1CON
;BicycleSafetyProject.c,185 :: 		if (tick5 == 4) {
0x0114	0x1683      	BSF        STATUS, 5
0x0115	0x0831      	MOVF       _tick5, 0
0x0116	0x3A04      	XORLW      4
0x0117	0x1D03      	BTFSS      STATUS, 2
0x0118	0x291C      	GOTO       L_interrupt19
;BicycleSafetyProject.c,186 :: 		tick5 = 0;
0x0119	0x01B1      	CLRF       _tick5
;BicycleSafetyProject.c,187 :: 		sonar_read1();        // Trigger ultrasonic sensor 1 reading
0x011A	0x253F      	CALL       _sonar_read1
;BicycleSafetyProject.c,188 :: 		sonar_read2();        // Trigger ultrasonic sensor 2 reading
0x011B	0x25E4      	CALL       _sonar_read2
;BicycleSafetyProject.c,189 :: 		}
L_interrupt19:
;BicycleSafetyProject.c,190 :: 		}
L_interrupt18:
;BicycleSafetyProject.c,192 :: 		INTCON &= 0xFB;           // Clear Timer0 Interrupt flag
0x011C	0x30FB      	MOVLW      251
0x011D	0x058B      	ANDWF      INTCON, 1
;BicycleSafetyProject.c,193 :: 		}
L_interrupt0:
0x011E	0x1283      	BCF        STATUS, 5
;BicycleSafetyProject.c,195 :: 		if (PIR1 & 0x01) {            // Timer1 Overflow Interrupt
0x011F	0x1C0C      	BTFSS      PIR1, 0
0x0120	0x2929      	GOTO       L_interrupt20
;BicycleSafetyProject.c,196 :: 		T1overflow++;
0x0121	0x0ADD      	INCF       _T1overflow, 1
0x0122	0x1903      	BTFSC      STATUS, 2
0x0123	0x0ADE      	INCF       _T1overflow+1, 1
;BicycleSafetyProject.c,197 :: 		T2overflow++;
0x0124	0x0ADB      	INCF       _T2overflow, 1
0x0125	0x1903      	BTFSC      STATUS, 2
0x0126	0x0ADC      	INCF       _T2overflow+1, 1
;BicycleSafetyProject.c,198 :: 		PIR1 &= 0xFE;             // Clear Timer1 Overflow Interrupt flag
0x0127	0x30FE      	MOVLW      254
0x0128	0x058C      	ANDWF      PIR1, 1
;BicycleSafetyProject.c,199 :: 		}
L_interrupt20:
;BicycleSafetyProject.c,202 :: 		if (PIR2 & 0x01) {
0x0129	0x1C0D      	BTFSS      PIR2, 0
0x012A	0x2958      	GOTO       L_interrupt21
;BicycleSafetyProject.c,203 :: 		if(HL){ //high
0x012B	0x0848      	MOVF       _HL, 0
0x012C	0x1903      	BTFSC      STATUS, 2
0x012D	0x293F      	GOTO       L_interrupt22
;BicycleSafetyProject.c,204 :: 		CCPR2H= angle >>8;
0x012E	0x1683      	BSF        STATUS, 5
0x012F	0x0821      	MOVF       _angle+1, 0
0x0130	0x00F0      	MOVWF      R0
0x0131	0x01F1      	CLRF       R0+1
0x0132	0x0870      	MOVF       R0, 0
0x0133	0x1283      	BCF        STATUS, 5
0x0134	0x009C      	MOVWF      CCPR2H
;BicycleSafetyProject.c,205 :: 		CCPR2L= angle;
0x0135	0x1683      	BSF        STATUS, 5
0x0136	0x0820      	MOVF       _angle, 0
0x0137	0x1283      	BCF        STATUS, 5
0x0138	0x009B      	MOVWF      CCPR2L
;BicycleSafetyProject.c,206 :: 		HL = 0;//next time low
0x0139	0x01C8      	CLRF       _HL
;BicycleSafetyProject.c,207 :: 		CCP2CON=0x09;//next time Falling edge
0x013A	0x3009      	MOVLW      9
0x013B	0x009D      	MOVWF      CCP2CON
;BicycleSafetyProject.c,208 :: 		TMR1H=0;
0x013C	0x018F      	CLRF       TMR1H
;BicycleSafetyProject.c,209 :: 		TMR1L=0;
0x013D	0x018E      	CLRF       TMR1L
;BicycleSafetyProject.c,210 :: 		} else {  //low
0x013E	0x2956      	GOTO       L_interrupt23
L_interrupt22:
;BicycleSafetyProject.c,211 :: 		CCPR2H = (40000 - angle) >>8;
0x013F	0x1683      	BSF        STATUS, 5
0x0140	0x0820      	MOVF       _angle, 0
0x0141	0x3C40      	SUBLW      64
0x0142	0x00F3      	MOVWF      R3
0x0143	0x0821      	MOVF       _angle+1, 0
0x0144	0x1C03      	BTFSS      STATUS, 0
0x0145	0x3E01      	ADDLW      1
0x0146	0x3C9C      	SUBLW      156
0x0147	0x00F4      	MOVWF      R3+1
0x0148	0x0874      	MOVF       R3+1, 0
0x0149	0x00F0      	MOVWF      R0
0x014A	0x01F1      	CLRF       R0+1
0x014B	0x0870      	MOVF       R0, 0
0x014C	0x1283      	BCF        STATUS, 5
0x014D	0x009C      	MOVWF      CCPR2H
;BicycleSafetyProject.c,212 :: 		CCPR2L = (40000 - angle);
0x014E	0x0873      	MOVF       R3, 0
0x014F	0x009B      	MOVWF      CCPR2L
;BicycleSafetyProject.c,213 :: 		CCP2CON = 0x08; //next time rising edge
0x0150	0x3008      	MOVLW      8
0x0151	0x009D      	MOVWF      CCP2CON
;BicycleSafetyProject.c,214 :: 		HL = 1; //next time High
0x0152	0x3001      	MOVLW      1
0x0153	0x00C8      	MOVWF      _HL
;BicycleSafetyProject.c,215 :: 		TMR1H = 0;
0x0154	0x018F      	CLRF       TMR1H
;BicycleSafetyProject.c,216 :: 		TMR1L = 0;
0x0155	0x018E      	CLRF       TMR1L
;BicycleSafetyProject.c,217 :: 		}
L_interrupt23:
;BicycleSafetyProject.c,218 :: 		PIR2 &= 0xFE;
0x0156	0x30FE      	MOVLW      254
0x0157	0x058D      	ANDWF      PIR2, 1
;BicycleSafetyProject.c,219 :: 		}
L_interrupt21:
;BicycleSafetyProject.c,220 :: 		}
L_end_interrupt:
L__interrupt73:
0x0158	0x0826      	MOVF       38, 0
0x0159	0x00F0      	MOVWF      R0
0x015A	0x0825      	MOVF       37, 0
0x015B	0x00F1      	MOVWF      R1
0x015C	0x0824      	MOVF       36, 0
0x015D	0x00F2      	MOVWF      R2
0x015E	0x0823      	MOVF       35, 0
0x015F	0x00F3      	MOVWF      R3
0x0160	0x0822      	MOVF       34, 0
0x0161	0x00F4      	MOVWF      R4
0x0162	0x0821      	MOVF       33, 0
0x0163	0x00FC      	MOVWF      R12
0x0164	0x1683      	BSF        STATUS, 5
0x0165	0x0832      	MOVF       ___savePCLATH, 0
0x0166	0x008A      	MOVWF      PCLATH
0x0167	0x0E33      	SWAPF      ___saveSTATUS, 0
0x0168	0x0083      	MOVWF      STATUS
0x0169	0x0EFF      	SWAPF      R15, 1
0x016A	0x0E7F      	SWAPF      R15, 0
0x016B	0x0009      	RETFIE
; end of _interrupt
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x016C	0x3021      	MOVLW      33
0x016D	0x1283      	BCF        STATUS, 5
0x016E	0x1303      	BCF        STATUS, 6
0x016F	0x00FD      	MOVWF      R13
L_Delay_50us2:
0x0170	0x0BFD      	DECFSZ     R13, 1
0x0171	0x2970      	GOTO       L_Delay_50us2
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x0172	0x0008      	RETURN
; end of _Delay_50us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0173	0x300F      	MOVLW      15
0x0174	0x1283      	BCF        STATUS, 5
0x0175	0x1303      	BCF        STATUS, 6
0x0176	0x00FC      	MOVWF      R12
0x0177	0x3047      	MOVLW      71
0x0178	0x00FD      	MOVWF      R13
L_Delay_5500us5:
0x0179	0x0BFD      	DECFSZ     R13, 1
0x017A	0x2979      	GOTO       L_Delay_5500us5
0x017B	0x0BFC      	DECFSZ     R12, 1
0x017C	0x2979      	GOTO       L_Delay_5500us5
0x017D	0x0000      	NOP
0x017E	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x017F	0x0008      	RETURN
; end of _Delay_5500us
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0180	0x0000      	NOP
0x0181	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0182	0x0008      	RETURN
; end of _Delay_1us
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x0183	0x1683      	BSF        STATUS, 5
0x0184	0x1303      	BCF        STATUS, 6
0x0185	0x1BBE      	BTFSC      FARG_Lcd_Cmd_out_char, 7
0x0186	0x298A      	GOTO       L__Lcd_Cmd21
0x0187	0x1283      	BCF        STATUS, 5
0x0188	0x1186      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x0189	0x298C      	GOTO       L__Lcd_Cmd22
L__Lcd_Cmd21:
0x018A	0x1283      	BCF        STATUS, 5
0x018B	0x1586      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x018C	0x1683      	BSF        STATUS, 5
0x018D	0x1B3E      	BTFSC      FARG_Lcd_Cmd_out_char, 6
0x018E	0x2992      	GOTO       L__Lcd_Cmd23
0x018F	0x1283      	BCF        STATUS, 5
0x0190	0x1106      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x0191	0x2994      	GOTO       L__Lcd_Cmd24
L__Lcd_Cmd23:
0x0192	0x1283      	BCF        STATUS, 5
0x0193	0x1506      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x0194	0x1683      	BSF        STATUS, 5
0x0195	0x1ABE      	BTFSC      FARG_Lcd_Cmd_out_char, 5
0x0196	0x299A      	GOTO       L__Lcd_Cmd25
0x0197	0x1283      	BCF        STATUS, 5
0x0198	0x1086      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x0199	0x299C      	GOTO       L__Lcd_Cmd26
L__Lcd_Cmd25:
0x019A	0x1283      	BCF        STATUS, 5
0x019B	0x1486      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x019C	0x1683      	BSF        STATUS, 5
0x019D	0x1A3E      	BTFSC      FARG_Lcd_Cmd_out_char, 4
0x019E	0x29A2      	GOTO       L__Lcd_Cmd27
0x019F	0x1283      	BCF        STATUS, 5
0x01A0	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x01A1	0x29A4      	GOTO       L__Lcd_Cmd28
L__Lcd_Cmd27:
0x01A2	0x1283      	BCF        STATUS, 5
0x01A3	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x01A4	0x186D      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x01A5	0x29A8      	GOTO       L__Lcd_Cmd29
0x01A6	0x1606      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x01A7	0x29A9      	GOTO       L__Lcd_Cmd30
L__Lcd_Cmd29:
0x01A8	0x1206      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x01A9	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,29 :: 		
0x01AA	0x2180      	CALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x01AB	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,33 :: 		
0x01AC	0x1683      	BSF        STATUS, 5
0x01AD	0x19BE      	BTFSC      FARG_Lcd_Cmd_out_char, 3
0x01AE	0x29B2      	GOTO       L__Lcd_Cmd31
0x01AF	0x1283      	BCF        STATUS, 5
0x01B0	0x1186      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x01B1	0x29B4      	GOTO       L__Lcd_Cmd32
L__Lcd_Cmd31:
0x01B2	0x1283      	BCF        STATUS, 5
0x01B3	0x1586      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x01B4	0x1683      	BSF        STATUS, 5
0x01B5	0x193E      	BTFSC      FARG_Lcd_Cmd_out_char, 2
0x01B6	0x29BA      	GOTO       L__Lcd_Cmd33
0x01B7	0x1283      	BCF        STATUS, 5
0x01B8	0x1106      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x01B9	0x29BC      	GOTO       L__Lcd_Cmd34
L__Lcd_Cmd33:
0x01BA	0x1283      	BCF        STATUS, 5
0x01BB	0x1506      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x01BC	0x1683      	BSF        STATUS, 5
0x01BD	0x18BE      	BTFSC      FARG_Lcd_Cmd_out_char, 1
0x01BE	0x29C2      	GOTO       L__Lcd_Cmd35
0x01BF	0x1283      	BCF        STATUS, 5
0x01C0	0x1086      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x01C1	0x29C4      	GOTO       L__Lcd_Cmd36
L__Lcd_Cmd35:
0x01C2	0x1283      	BCF        STATUS, 5
0x01C3	0x1486      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x01C4	0x1683      	BSF        STATUS, 5
0x01C5	0x183E      	BTFSC      FARG_Lcd_Cmd_out_char, 0
0x01C6	0x29CA      	GOTO       L__Lcd_Cmd37
0x01C7	0x1283      	BCF        STATUS, 5
0x01C8	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x01C9	0x29CC      	GOTO       L__Lcd_Cmd38
L__Lcd_Cmd37:
0x01CA	0x1283      	BCF        STATUS, 5
0x01CB	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x01CC	0x186D      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x01CD	0x29D0      	GOTO       L__Lcd_Cmd39
0x01CE	0x1606      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x01CF	0x29D1      	GOTO       L__Lcd_Cmd40
L__Lcd_Cmd39:
0x01D0	0x1206      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x01D1	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,41 :: 		
0x01D2	0x2180      	CALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x01D3	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,44 :: 		
0x01D4	0x1C6D      	BTFSS      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x01D5	0x29D8      	GOTO       L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x01D6	0x2173      	CALL       _Delay_5500us
0x01D7	0x29D9      	GOTO       L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x01D8	0x216C      	CALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x01D9	0x0008      	RETURN
; end of _Lcd_Cmd
_usDelay:
;BicycleSafetyProject.c,455 :: 		void usDelay(unsigned int usCnt) {
;BicycleSafetyProject.c,457 :: 		for (us = 0; us < usCnt; us++) {
0x01DA	0x1283      	BCF        STATUS, 5
0x01DB	0x1303      	BCF        STATUS, 6
0x01DC	0x01F1      	CLRF       R1
0x01DD	0x01F2      	CLRF       R1+1
L_usDelay59:
0x01DE	0x1683      	BSF        STATUS, 5
0x01DF	0x0840      	MOVF       FARG_usDelay_usCnt+1, 0
0x01E0	0x0272      	SUBWF      R1+1, 0
0x01E1	0x1D03      	BTFSS      STATUS, 2
0x01E2	0x29E5      	GOTO       L__usDelay99
0x01E3	0x083F      	MOVF       FARG_usDelay_usCnt, 0
0x01E4	0x0271      	SUBWF      R1, 0
L__usDelay99:
0x01E5	0x1803      	BTFSC      STATUS, 0
0x01E6	0x29ED      	GOTO       L_usDelay60
;BicycleSafetyProject.c,458 :: 		asm NOP;                     // 0.5 uS
0x01E7	0x0000      	NOP
;BicycleSafetyProject.c,459 :: 		asm NOP;                     // 0.5 uS
0x01E8	0x0000      	NOP
;BicycleSafetyProject.c,457 :: 		for (us = 0; us < usCnt; us++) {
0x01E9	0x0AF1      	INCF       R1, 1
0x01EA	0x1903      	BTFSC      STATUS, 2
0x01EB	0x0AF2      	INCF       R1+1, 1
;BicycleSafetyProject.c,460 :: 		}
0x01EC	0x29DE      	GOTO       L_usDelay59
L_usDelay60:
;BicycleSafetyProject.c,461 :: 		}
L_end_usDelay:
0x01ED	0x0008      	RETURN
; end of _usDelay
_Div_32x32_U:
;__Lib_Math.c,1318 :: 		
;__Lib_Math.c,1327 :: 		
;__Lib_Math.c,1329 :: 		
0x01EE	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,1330 :: 		
0x01EF	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,1331 :: 		
0x01F0	0x01FB      	CLRF       R11
;__Lib_Math.c,1332 :: 		
0x01F1	0x01FA      	CLRF       R10
;__Lib_Math.c,1333 :: 		
0x01F2	0x01F9      	CLRF       R9
;__Lib_Math.c,1334 :: 		
0x01F3	0x01F8      	CLRF       R8
;__Lib_Math.c,1336 :: 		
0x01F4	0x01A0      	CLRF       ___math_tempb
;__Lib_Math.c,1338 :: 		
0x01F5	0x0D73      	RLF        R3, 0
;__Lib_Math.c,1339 :: 		
0x01F6	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,1340 :: 		
0x01F7	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1341 :: 		
0x01F8	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,1342 :: 		
0x01F9	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1343 :: 		
0x01FA	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1344 :: 		
0x01FB	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1345 :: 		
0x01FC	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,1346 :: 		
0x01FD	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1347 :: 		
0x01FE	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1348 :: 		
0x01FF	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1349 :: 		
0x0200	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,1350 :: 		
0x0201	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1351 :: 		
0x0202	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1352 :: 		
0x0203	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1353 :: 		
0x0204	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,1355 :: 		
0x0205	0x0100      	CLRW
;__Lib_Math.c,1356 :: 		
0x0206	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1357 :: 		
0x0207	0x3001      	MOVLW      1
;__Lib_Math.c,1358 :: 		
0x0208	0x02A0      	SUBWF      ___math_tempb, 1
;__Lib_Math.c,1359 :: 		
0x0209	0x0DF3      	RLF        R3, 1
;__Lib_Math.c,1361 :: 		
0x020A	0x3007      	MOVLW      7
;__Lib_Math.c,1362 :: 		
0x020B	0x00FC      	MOVWF      R12
;__Lib_Math.c,1364 :: 		
LOOPU3232A:
;__Lib_Math.c,1365 :: 		
0x020C	0x0D73      	RLF        R3, 0
;__Lib_Math.c,1366 :: 		
0x020D	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,1367 :: 		
0x020E	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,1368 :: 		
0x020F	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,1369 :: 		
0x0210	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,1370 :: 		
0x0211	0x0DA0      	RLF        ___math_tempb, 1
;__Lib_Math.c,1371 :: 		
0x0212	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1372 :: 		
0x0213	0x1C73      	BTFSS      R3, 0
;__Lib_Math.c,1373 :: 		
0x0214	0x2A27      	GOTO       UADD22LA
;__Lib_Math.c,1375 :: 		
0x0215	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,1376 :: 		
0x0216	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1377 :: 		
0x0217	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1378 :: 		
0x0218	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1379 :: 		
0x0219	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,1380 :: 		
0x021A	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1381 :: 		
0x021B	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1382 :: 		
0x021C	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1383 :: 		
0x021D	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,1384 :: 		
0x021E	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1385 :: 		
0x021F	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1386 :: 		
0x0220	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1387 :: 		
0x0221	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,1388 :: 		
0x0222	0x0100      	CLRW
;__Lib_Math.c,1389 :: 		
0x0223	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1390 :: 		
0x0224	0x3001      	MOVLW      1
;__Lib_Math.c,1391 :: 		
0x0225	0x02A0      	SUBWF      ___math_tempb, 1
;__Lib_Math.c,1392 :: 		
0x0226	0x2A38      	GOTO       UOK22LA
;__Lib_Math.c,1394 :: 		
UADD22LA:
;__Lib_Math.c,1395 :: 		
0x0227	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1396 :: 		
0x0228	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1397 :: 		
0x0229	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1398 :: 		
0x022A	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1399 :: 		
0x022B	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1400 :: 		
0x022C	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1401 :: 		
0x022D	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1402 :: 		
0x022E	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1403 :: 		
0x022F	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1404 :: 		
0x0230	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1405 :: 		
0x0231	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1406 :: 		
0x0232	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1407 :: 		
0x0233	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1408 :: 		
0x0234	0x0100      	CLRW
;__Lib_Math.c,1409 :: 		
0x0235	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1410 :: 		
0x0236	0x3001      	MOVLW      1
;__Lib_Math.c,1411 :: 		
0x0237	0x07A0      	ADDWF      ___math_tempb, 1
;__Lib_Math.c,1413 :: 		
UOK22LA:
;__Lib_Math.c,1414 :: 		
0x0238	0x0DF3      	RLF        R3, 1
;__Lib_Math.c,1416 :: 		
0x0239	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,1417 :: 		
0x023A	0x2A0C      	GOTO       LOOPU3232A
;__Lib_Math.c,1419 :: 		
0x023B	0x0D72      	RLF        R2, 0
;__Lib_Math.c,1420 :: 		
0x023C	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,1421 :: 		
0x023D	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,1422 :: 		
0x023E	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,1423 :: 		
0x023F	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,1424 :: 		
0x0240	0x0DA0      	RLF        ___math_tempb, 1
;__Lib_Math.c,1425 :: 		
0x0241	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1426 :: 		
0x0242	0x1C73      	BTFSS      R3, 0
;__Lib_Math.c,1427 :: 		
0x0243	0x2A56      	GOTO       UADD22L8
;__Lib_Math.c,1429 :: 		
0x0244	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,1430 :: 		
0x0245	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1431 :: 		
0x0246	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1432 :: 		
0x0247	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1433 :: 		
0x0248	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,1434 :: 		
0x0249	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1435 :: 		
0x024A	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1436 :: 		
0x024B	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1437 :: 		
0x024C	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,1438 :: 		
0x024D	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1439 :: 		
0x024E	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1440 :: 		
0x024F	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1441 :: 		
0x0250	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,1442 :: 		
0x0251	0x0100      	CLRW
;__Lib_Math.c,1443 :: 		
0x0252	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1444 :: 		
0x0253	0x3001      	MOVLW      1
;__Lib_Math.c,1445 :: 		
0x0254	0x02A0      	SUBWF      ___math_tempb, 1
;__Lib_Math.c,1446 :: 		
0x0255	0x2A67      	GOTO       UOK22L8
;__Lib_Math.c,1448 :: 		
UADD22L8:
;__Lib_Math.c,1449 :: 		
0x0256	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1450 :: 		
0x0257	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1451 :: 		
0x0258	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1452 :: 		
0x0259	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1453 :: 		
0x025A	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1454 :: 		
0x025B	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1455 :: 		
0x025C	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1456 :: 		
0x025D	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1457 :: 		
0x025E	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1458 :: 		
0x025F	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1459 :: 		
0x0260	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1460 :: 		
0x0261	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1461 :: 		
0x0262	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1462 :: 		
0x0263	0x0100      	CLRW
;__Lib_Math.c,1463 :: 		
0x0264	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1464 :: 		
0x0265	0x3001      	MOVLW      1
;__Lib_Math.c,1465 :: 		
0x0266	0x07A0      	ADDWF      ___math_tempb, 1
;__Lib_Math.c,1467 :: 		
UOK22L8:
;__Lib_Math.c,1468 :: 		
0x0267	0x0DF2      	RLF        R2, 1
;__Lib_Math.c,1470 :: 		
0x0268	0x3007      	MOVLW      7
;__Lib_Math.c,1471 :: 		
0x0269	0x00FC      	MOVWF      R12
;__Lib_Math.c,1473 :: 		
LOOPU3232B:
;__Lib_Math.c,1474 :: 		
0x026A	0x0D72      	RLF        R2, 0
;__Lib_Math.c,1475 :: 		
0x026B	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,1476 :: 		
0x026C	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,1477 :: 		
0x026D	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,1478 :: 		
0x026E	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,1479 :: 		
0x026F	0x0DA0      	RLF        ___math_tempb, 1
;__Lib_Math.c,1480 :: 		
0x0270	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1481 :: 		
0x0271	0x1C72      	BTFSS      R2, 0
;__Lib_Math.c,1482 :: 		
0x0272	0x2A85      	GOTO       UADD22LB
;__Lib_Math.c,1484 :: 		
0x0273	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,1485 :: 		
0x0274	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1486 :: 		
0x0275	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1487 :: 		
0x0276	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1488 :: 		
0x0277	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,1489 :: 		
0x0278	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1490 :: 		
0x0279	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1491 :: 		
0x027A	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1492 :: 		
0x027B	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,1493 :: 		
0x027C	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1494 :: 		
0x027D	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1495 :: 		
0x027E	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1496 :: 		
0x027F	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,1497 :: 		
0x0280	0x0100      	CLRW
;__Lib_Math.c,1498 :: 		
0x0281	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1499 :: 		
0x0282	0x3001      	MOVLW      1
;__Lib_Math.c,1500 :: 		
0x0283	0x02A0      	SUBWF      ___math_tempb, 1
;__Lib_Math.c,1501 :: 		
0x0284	0x2A96      	GOTO       UOK22LB
;__Lib_Math.c,1503 :: 		
UADD22LB:
;__Lib_Math.c,1504 :: 		
0x0285	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1505 :: 		
0x0286	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1506 :: 		
0x0287	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1507 :: 		
0x0288	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1508 :: 		
0x0289	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1509 :: 		
0x028A	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1510 :: 		
0x028B	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1511 :: 		
0x028C	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1512 :: 		
0x028D	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1513 :: 		
0x028E	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1514 :: 		
0x028F	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1515 :: 		
0x0290	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1516 :: 		
0x0291	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1517 :: 		
0x0292	0x0100      	CLRW
;__Lib_Math.c,1518 :: 		
0x0293	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1519 :: 		
0x0294	0x3001      	MOVLW      1
;__Lib_Math.c,1520 :: 		
0x0295	0x07A0      	ADDWF      ___math_tempb, 1
;__Lib_Math.c,1522 :: 		
UOK22LB:
;__Lib_Math.c,1523 :: 		
0x0296	0x0DF2      	RLF        R2, 1
;__Lib_Math.c,1525 :: 		
0x0297	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,1526 :: 		
0x0298	0x2A6A      	GOTO       LOOPU3232B
;__Lib_Math.c,1528 :: 		
0x0299	0x0D71      	RLF        R1, 0
;__Lib_Math.c,1529 :: 		
0x029A	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,1530 :: 		
0x029B	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,1531 :: 		
0x029C	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,1532 :: 		
0x029D	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,1533 :: 		
0x029E	0x0DA0      	RLF        ___math_tempb, 1
;__Lib_Math.c,1534 :: 		
0x029F	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1535 :: 		
0x02A0	0x1C72      	BTFSS      R2, 0
;__Lib_Math.c,1536 :: 		
0x02A1	0x2AB4      	GOTO       UADD22L16
;__Lib_Math.c,1538 :: 		
0x02A2	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,1539 :: 		
0x02A3	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1540 :: 		
0x02A4	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1541 :: 		
0x02A5	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1542 :: 		
0x02A6	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,1543 :: 		
0x02A7	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1544 :: 		
0x02A8	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1545 :: 		
0x02A9	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1546 :: 		
0x02AA	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,1547 :: 		
0x02AB	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1548 :: 		
0x02AC	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1549 :: 		
0x02AD	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1550 :: 		
0x02AE	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,1551 :: 		
0x02AF	0x0100      	CLRW
;__Lib_Math.c,1552 :: 		
0x02B0	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1553 :: 		
0x02B1	0x3001      	MOVLW      1
;__Lib_Math.c,1554 :: 		
0x02B2	0x02A0      	SUBWF      ___math_tempb, 1
;__Lib_Math.c,1555 :: 		
0x02B3	0x2AC5      	GOTO       UOK22L16
;__Lib_Math.c,1557 :: 		
UADD22L16:
;__Lib_Math.c,1558 :: 		
0x02B4	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1559 :: 		
0x02B5	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1560 :: 		
0x02B6	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1561 :: 		
0x02B7	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1562 :: 		
0x02B8	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1563 :: 		
0x02B9	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1564 :: 		
0x02BA	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1565 :: 		
0x02BB	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1566 :: 		
0x02BC	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1567 :: 		
0x02BD	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1568 :: 		
0x02BE	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1569 :: 		
0x02BF	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1570 :: 		
0x02C0	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1571 :: 		
0x02C1	0x0100      	CLRW
;__Lib_Math.c,1572 :: 		
0x02C2	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1573 :: 		
0x02C3	0x3001      	MOVLW      1
;__Lib_Math.c,1574 :: 		
0x02C4	0x07A0      	ADDWF      ___math_tempb, 1
;__Lib_Math.c,1576 :: 		
UOK22L16:
;__Lib_Math.c,1577 :: 		
0x02C5	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,1579 :: 		
0x02C6	0x3007      	MOVLW      7
;__Lib_Math.c,1580 :: 		
0x02C7	0x00FC      	MOVWF      R12
;__Lib_Math.c,1582 :: 		
LOOPU3232C:
;__Lib_Math.c,1583 :: 		
0x02C8	0x0D71      	RLF        R1, 0
;__Lib_Math.c,1584 :: 		
0x02C9	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,1585 :: 		
0x02CA	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,1586 :: 		
0x02CB	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,1587 :: 		
0x02CC	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,1588 :: 		
0x02CD	0x0DA0      	RLF        ___math_tempb, 1
;__Lib_Math.c,1589 :: 		
0x02CE	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1590 :: 		
0x02CF	0x1C71      	BTFSS      R1, 0
;__Lib_Math.c,1591 :: 		
0x02D0	0x2AE3      	GOTO       UADD22LC
;__Lib_Math.c,1593 :: 		
0x02D1	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,1594 :: 		
0x02D2	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1595 :: 		
0x02D3	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1596 :: 		
0x02D4	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1597 :: 		
0x02D5	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,1598 :: 		
0x02D6	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1599 :: 		
0x02D7	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1600 :: 		
0x02D8	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1601 :: 		
0x02D9	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,1602 :: 		
0x02DA	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1603 :: 		
0x02DB	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1604 :: 		
0x02DC	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1605 :: 		
0x02DD	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,1606 :: 		
0x02DE	0x0100      	CLRW
;__Lib_Math.c,1607 :: 		
0x02DF	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1608 :: 		
0x02E0	0x3001      	MOVLW      1
;__Lib_Math.c,1609 :: 		
0x02E1	0x02A0      	SUBWF      ___math_tempb, 1
;__Lib_Math.c,1610 :: 		
0x02E2	0x2AF4      	GOTO       UOK22LC
;__Lib_Math.c,1612 :: 		
UADD22LC:
;__Lib_Math.c,1613 :: 		
0x02E3	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1614 :: 		
0x02E4	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1615 :: 		
0x02E5	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1616 :: 		
0x02E6	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1617 :: 		
0x02E7	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1618 :: 		
0x02E8	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1619 :: 		
0x02E9	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1620 :: 		
0x02EA	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1621 :: 		
0x02EB	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1622 :: 		
0x02EC	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1623 :: 		
0x02ED	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1624 :: 		
0x02EE	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1625 :: 		
0x02EF	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1626 :: 		
0x02F0	0x0100      	CLRW
;__Lib_Math.c,1627 :: 		
0x02F1	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1628 :: 		
0x02F2	0x3001      	MOVLW      1
;__Lib_Math.c,1629 :: 		
0x02F3	0x07A0      	ADDWF      ___math_tempb, 1
;__Lib_Math.c,1631 :: 		
UOK22LC:
;__Lib_Math.c,1632 :: 		
0x02F4	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,1634 :: 		
0x02F5	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,1635 :: 		
0x02F6	0x2AC8      	GOTO       LOOPU3232C
;__Lib_Math.c,1637 :: 		
0x02F7	0x0D70      	RLF        R0, 0
;__Lib_Math.c,1638 :: 		
0x02F8	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,1639 :: 		
0x02F9	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,1640 :: 		
0x02FA	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,1641 :: 		
0x02FB	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,1642 :: 		
0x02FC	0x0DA0      	RLF        ___math_tempb, 1
;__Lib_Math.c,1643 :: 		
0x02FD	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1644 :: 		
0x02FE	0x1C71      	BTFSS      R1, 0
;__Lib_Math.c,1645 :: 		
0x02FF	0x2B12      	GOTO       UADD22L24
;__Lib_Math.c,1647 :: 		
0x0300	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,1648 :: 		
0x0301	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1649 :: 		
0x0302	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1650 :: 		
0x0303	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1651 :: 		
0x0304	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,1652 :: 		
0x0305	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1653 :: 		
0x0306	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1654 :: 		
0x0307	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1655 :: 		
0x0308	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,1656 :: 		
0x0309	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1657 :: 		
0x030A	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1658 :: 		
0x030B	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1659 :: 		
0x030C	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,1660 :: 		
0x030D	0x0100      	CLRW
;__Lib_Math.c,1661 :: 		
0x030E	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1662 :: 		
0x030F	0x3001      	MOVLW      1
;__Lib_Math.c,1663 :: 		
0x0310	0x02A0      	SUBWF      ___math_tempb, 1
;__Lib_Math.c,1664 :: 		
0x0311	0x2B23      	GOTO       UOK22L24
;__Lib_Math.c,1666 :: 		
UADD22L24:
;__Lib_Math.c,1667 :: 		
0x0312	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1668 :: 		
0x0313	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1669 :: 		
0x0314	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1670 :: 		
0x0315	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1671 :: 		
0x0316	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1672 :: 		
0x0317	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1673 :: 		
0x0318	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1674 :: 		
0x0319	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1675 :: 		
0x031A	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1676 :: 		
0x031B	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1677 :: 		
0x031C	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1678 :: 		
0x031D	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1679 :: 		
0x031E	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1680 :: 		
0x031F	0x0100      	CLRW
;__Lib_Math.c,1681 :: 		
0x0320	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1682 :: 		
0x0321	0x3001      	MOVLW      1
;__Lib_Math.c,1683 :: 		
0x0322	0x07A0      	ADDWF      ___math_tempb, 1
;__Lib_Math.c,1685 :: 		
UOK22L24:
;__Lib_Math.c,1686 :: 		
0x0323	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,1688 :: 		
0x0324	0x3007      	MOVLW      7
;__Lib_Math.c,1689 :: 		
0x0325	0x00FC      	MOVWF      R12
;__Lib_Math.c,1691 :: 		
LOOPU3232D:
;__Lib_Math.c,1692 :: 		
0x0326	0x0D70      	RLF        R0, 0
;__Lib_Math.c,1693 :: 		
0x0327	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,1694 :: 		
0x0328	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,1695 :: 		
0x0329	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,1696 :: 		
0x032A	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,1697 :: 		
0x032B	0x0DA0      	RLF        ___math_tempb, 1
;__Lib_Math.c,1698 :: 		
0x032C	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1699 :: 		
0x032D	0x1C70      	BTFSS      R0, 0
;__Lib_Math.c,1700 :: 		
0x032E	0x2B41      	GOTO       UADD22LD
;__Lib_Math.c,1702 :: 		
0x032F	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,1703 :: 		
0x0330	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1704 :: 		
0x0331	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1705 :: 		
0x0332	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1706 :: 		
0x0333	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,1707 :: 		
0x0334	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1708 :: 		
0x0335	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1709 :: 		
0x0336	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1710 :: 		
0x0337	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,1711 :: 		
0x0338	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1712 :: 		
0x0339	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1713 :: 		
0x033A	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1714 :: 		
0x033B	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,1715 :: 		
0x033C	0x0100      	CLRW
;__Lib_Math.c,1716 :: 		
0x033D	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1717 :: 		
0x033E	0x3001      	MOVLW      1
;__Lib_Math.c,1718 :: 		
0x033F	0x02A0      	SUBWF      ___math_tempb, 1
;__Lib_Math.c,1719 :: 		
0x0340	0x2B52      	GOTO       UOK22LD
;__Lib_Math.c,1721 :: 		
UADD22LD:
;__Lib_Math.c,1722 :: 		
0x0341	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1723 :: 		
0x0342	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1724 :: 		
0x0343	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1725 :: 		
0x0344	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1726 :: 		
0x0345	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1727 :: 		
0x0346	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1728 :: 		
0x0347	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1729 :: 		
0x0348	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1730 :: 		
0x0349	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1731 :: 		
0x034A	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1732 :: 		
0x034B	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1733 :: 		
0x034C	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1734 :: 		
0x034D	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1735 :: 		
0x034E	0x0100      	CLRW
;__Lib_Math.c,1736 :: 		
0x034F	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1737 :: 		
0x0350	0x3001      	MOVLW      1
;__Lib_Math.c,1738 :: 		
0x0351	0x07A0      	ADDWF      ___math_tempb, 1
;__Lib_Math.c,1740 :: 		
UOK22LD:
;__Lib_Math.c,1741 :: 		
0x0352	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,1743 :: 		
0x0353	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,1744 :: 		
0x0354	0x2B26      	GOTO       LOOPU3232D
;__Lib_Math.c,1746 :: 		
0x0355	0x1870      	BTFSC      R0, 0
;__Lib_Math.c,1747 :: 		
0x0356	0x2B65      	GOTO       UOK22L
;__Lib_Math.c,1748 :: 		
0x0357	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1749 :: 		
0x0358	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1750 :: 		
0x0359	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1751 :: 		
0x035A	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1752 :: 		
0x035B	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1753 :: 		
0x035C	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1754 :: 		
0x035D	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1755 :: 		
0x035E	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1756 :: 		
0x035F	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1757 :: 		
0x0360	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1758 :: 		
0x0361	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1759 :: 		
0x0362	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1760 :: 		
0x0363	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1761 :: 		
0x0364	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1763 :: 		
UOK22L:
;__Lib_Math.c,1766 :: 		
L_end_Div_32x32_U:
0x0365	0x0008      	RETURN
; end of _Div_32x32_U
_Mul_32x32_U:
;__Lib_Math.c,1775 :: 		
;__Lib_Math.c,1790 :: 		
0x0366	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,1791 :: 		
0x0367	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,1792 :: 		
0x0368	0x3022      	MOVLW      34
;__Lib_Math.c,1793 :: 		
0x0369	0x00FC      	MOVWF      R12
;__Lib_Math.c,1794 :: 		
0x036A	0x01F8      	CLRF       R8
;__Lib_Math.c,1795 :: 		
0x036B	0x01F9      	CLRF       R9
;__Lib_Math.c,1796 :: 		
0x036C	0x01FA      	CLRF       R10
;__Lib_Math.c,1797 :: 		
0x036D	0x01FB      	CLRF       R11
;__Lib_Math.c,1799 :: 		
_NEXT:
;__Lib_Math.c,1803 :: 		
0x036E	0x03FC      	DECF       R12, 1
;__Lib_Math.c,1804 :: 		
0x036F	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1805 :: 		
0x0370	0x2B9C      	GOTO       _EXIT2
;__Lib_Math.c,1806 :: 		
0x0371	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,1808 :: 		
_LOOP:
;__Lib_Math.c,1817 :: 		
0x0372	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,1818 :: 		
0x0373	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,1819 :: 		
0x0374	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,1820 :: 		
0x0375	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,1821 :: 		
0x0376	0x0CF3      	RRF        R3, 1
;__Lib_Math.c,1822 :: 		
0x0377	0x0CF2      	RRF        R2, 1
;__Lib_Math.c,1823 :: 		
0x0378	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,1824 :: 		
0x0379	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,1829 :: 		
0x037A	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1830 :: 		
0x037B	0x2B6E      	GOTO       _NEXT
;__Lib_Math.c,1831 :: 		
0x037C	0x03FC      	DECF       R12, 1
;__Lib_Math.c,1832 :: 		
0x037D	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1833 :: 		
0x037E	0x2B8E      	GOTO       _EXIT1
;__Lib_Math.c,1840 :: 		
0x037F	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1841 :: 		
0x0380	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1842 :: 		
0x0381	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1843 :: 		
0x0382	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1844 :: 		
0x0383	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1845 :: 		
0x0384	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1846 :: 		
0x0385	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1847 :: 		
0x0386	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1848 :: 		
0x0387	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1849 :: 		
0x0388	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1850 :: 		
0x0389	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1851 :: 		
0x038A	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1852 :: 		
0x038B	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1853 :: 		
0x038C	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1855 :: 		
0x038D	0x2B72      	GOTO       _LOOP
;__Lib_Math.c,1857 :: 		
_EXIT1:
;__Lib_Math.c,1862 :: 		
0x038E	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1863 :: 		
0x038F	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1864 :: 		
0x0390	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1865 :: 		
0x0391	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1866 :: 		
0x0392	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1867 :: 		
0x0393	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1868 :: 		
0x0394	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1869 :: 		
0x0395	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1870 :: 		
0x0396	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1871 :: 		
0x0397	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1872 :: 		
0x0398	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1873 :: 		
0x0399	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1874 :: 		
0x039A	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1875 :: 		
0x039B	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1878 :: 		
_EXIT2:
;__Lib_Math.c,1880 :: 		
L_end_Mul_32x32_U:
0x039C	0x0008      	RETURN
; end of _Mul_32x32_U
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x039D	0x1683      	BSF        STATUS, 5
0x039E	0x1303      	BCF        STATUS, 6
0x039F	0x0837      	MOVF       ___DoICPAddr+1, 0
0x03A0	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x03A1	0x0836      	MOVF       ___DoICPAddr, 0
0x03A2	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x03A3	0x0008      	RETURN
; end of _____DoICP
_PWMusDelay:
;BicycleSafetyProject.c,463 :: 		void PWMusDelay(unsigned int PWMusCnt) {
;BicycleSafetyProject.c,465 :: 		for (PWMus = 0; PWMus < PWMusCnt; PWMus++) {
0x03A4	0x1283      	BCF        STATUS, 5
0x03A5	0x1303      	BCF        STATUS, 6
0x03A6	0x01F1      	CLRF       R1
0x03A7	0x01F2      	CLRF       R1+1
L_PWMusDelay62:
0x03A8	0x1683      	BSF        STATUS, 5
0x03A9	0x083D      	MOVF       FARG_PWMusDelay_PWMusCnt+1, 0
0x03AA	0x0272      	SUBWF      R1+1, 0
0x03AB	0x1D03      	BTFSS      STATUS, 2
0x03AC	0x2BAF      	GOTO       L__PWMusDelay101
0x03AD	0x083C      	MOVF       FARG_PWMusDelay_PWMusCnt, 0
0x03AE	0x0271      	SUBWF      R1, 0
L__PWMusDelay101:
0x03AF	0x1803      	BTFSC      STATUS, 0
0x03B0	0x2BB7      	GOTO       L_PWMusDelay63
;BicycleSafetyProject.c,466 :: 		asm NOP;                     // 0.5 uS
0x03B1	0x0000      	NOP
;BicycleSafetyProject.c,467 :: 		asm NOP;                     // 0.5 uS
0x03B2	0x0000      	NOP
;BicycleSafetyProject.c,465 :: 		for (PWMus = 0; PWMus < PWMusCnt; PWMus++) {
0x03B3	0x0AF1      	INCF       R1, 1
0x03B4	0x1903      	BTFSC      STATUS, 2
0x03B5	0x0AF2      	INCF       R1+1, 1
;BicycleSafetyProject.c,468 :: 		}
0x03B6	0x2BA8      	GOTO       L_PWMusDelay62
L_PWMusDelay63:
;BicycleSafetyProject.c,469 :: 		}
L_end_PWMusDelay:
0x03B7	0x0008      	RETURN
; end of _PWMusDelay
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x03B8	0x1283      	BCF        STATUS, 5
0x03B9	0x1303      	BCF        STATUS, 6
0x03BA	0x106D      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,53 :: 		
0x03BB	0x1683      	BSF        STATUS, 5
0x03BC	0x083C      	MOVF       FARG_Lcd_Chr_CP_out_char, 0
0x03BD	0x00BE      	MOVWF      FARG_Lcd_Cmd_out_char
0x03BE	0x2183      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x03BF	0x146D      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x03C0	0x0008      	RETURN
; end of _Lcd_Chr_CP
_motor2:
;BicycleSafetyProject.c,447 :: 		void motor2(void) {
;BicycleSafetyProject.c,448 :: 		PORTB |= 0x80;                       //High
0x03C1	0x1283      	BCF        STATUS, 5
0x03C2	0x1303      	BCF        STATUS, 6
0x03C3	0x1786      	BSF        PORTB, 7
;BicycleSafetyProject.c,449 :: 		PWMusDelay(mspeed2*2);
0x03C4	0x084F      	MOVF       _mspeed2, 0
0x03C5	0x1683      	BSF        STATUS, 5
0x03C6	0x00BC      	MOVWF      FARG_PWMusDelay_PWMusCnt
0x03C7	0x01BD      	CLRF       FARG_PWMusDelay_PWMusCnt+1
0x03C8	0x0DBC      	RLF        FARG_PWMusDelay_PWMusCnt, 1
0x03C9	0x0DBD      	RLF        FARG_PWMusDelay_PWMusCnt+1, 1
0x03CA	0x103C      	BCF        FARG_PWMusDelay_PWMusCnt, 0
0x03CB	0x23A4      	CALL       _PWMusDelay
;BicycleSafetyProject.c,450 :: 		PORTB &= 0x7F;                       //Low
0x03CC	0x307F      	MOVLW      127
0x03CD	0x1283      	BCF        STATUS, 5
0x03CE	0x0586      	ANDWF      PORTB, 1
;BicycleSafetyProject.c,451 :: 		PWMusDelay((250-mspeed2)*2);
0x03CF	0x084F      	MOVF       _mspeed2, 0
0x03D0	0x3CFA      	SUBLW      250
0x03D1	0x1683      	BSF        STATUS, 5
0x03D2	0x00BC      	MOVWF      FARG_PWMusDelay_PWMusCnt
0x03D3	0x01BD      	CLRF       FARG_PWMusDelay_PWMusCnt+1
0x03D4	0x1C03      	BTFSS      STATUS, 0
0x03D5	0x03BD      	DECF       FARG_PWMusDelay_PWMusCnt+1, 1
0x03D6	0x0DBC      	RLF        FARG_PWMusDelay_PWMusCnt, 1
0x03D7	0x0DBD      	RLF        FARG_PWMusDelay_PWMusCnt+1, 1
0x03D8	0x103C      	BCF        FARG_PWMusDelay_PWMusCnt, 0
0x03D9	0x23A4      	CALL       _PWMusDelay
;BicycleSafetyProject.c,452 :: 		}
L_end_motor2:
0x03DA	0x0008      	RETURN
; end of _motor2
_msDelay:
;BicycleSafetyProject.c,471 :: 		void msDelay(unsigned int msCnt) {
;BicycleSafetyProject.c,473 :: 		for (ms = 0; ms < msCnt; ms++) {
0x03DB	0x1283      	BCF        STATUS, 5
0x03DC	0x1303      	BCF        STATUS, 6
0x03DD	0x01F1      	CLRF       R1
0x03DE	0x01F2      	CLRF       R1+1
L_msDelay65:
0x03DF	0x1683      	BSF        STATUS, 5
0x03E0	0x0839      	MOVF       FARG_msDelay_msCnt+1, 0
0x03E1	0x0272      	SUBWF      R1+1, 0
0x03E2	0x1D03      	BTFSS      STATUS, 2
0x03E3	0x2BE6      	GOTO       L__msDelay103
0x03E4	0x0838      	MOVF       FARG_msDelay_msCnt, 0
0x03E5	0x0271      	SUBWF      R1, 0
L__msDelay103:
0x03E6	0x1803      	BTFSC      STATUS, 0
0x03E7	0x2BFA      	GOTO       L_msDelay66
;BicycleSafetyProject.c,474 :: 		for (cc = 0; cc < 155; cc++); // 1ms
0x03E8	0x01F3      	CLRF       R3
0x03E9	0x01F4      	CLRF       R3+1
L_msDelay68:
0x03EA	0x3000      	MOVLW      0
0x03EB	0x0274      	SUBWF      R3+1, 0
0x03EC	0x1D03      	BTFSS      STATUS, 2
0x03ED	0x2BF0      	GOTO       L__msDelay104
0x03EE	0x309B      	MOVLW      155
0x03EF	0x0273      	SUBWF      R3, 0
L__msDelay104:
0x03F0	0x1803      	BTFSC      STATUS, 0
0x03F1	0x2BF6      	GOTO       L_msDelay69
0x03F2	0x0AF3      	INCF       R3, 1
0x03F3	0x1903      	BTFSC      STATUS, 2
0x03F4	0x0AF4      	INCF       R3+1, 1
0x03F5	0x2BEA      	GOTO       L_msDelay68
L_msDelay69:
;BicycleSafetyProject.c,473 :: 		for (ms = 0; ms < msCnt; ms++) {
0x03F6	0x0AF1      	INCF       R1, 1
0x03F7	0x1903      	BTFSC      STATUS, 2
0x03F8	0x0AF2      	INCF       R1+1, 1
;BicycleSafetyProject.c,475 :: 		}
0x03F9	0x2BDF      	GOTO       L_msDelay65
L_msDelay66:
;BicycleSafetyProject.c,476 :: 		}
L_end_msDelay:
0x03FA	0x0008      	RETURN
; end of _msDelay
_CCPcompare_init:
;BicycleSafetyProject.c,435 :: 		void CCPcompare_init(void){
;BicycleSafetyProject.c,436 :: 		HL = 1; //start high
0x03FB	0x3001      	MOVLW      1
0x03FC	0x1283      	BCF        STATUS, 5
0x03FD	0x1303      	BCF        STATUS, 6
0x03FE	0x00C8      	MOVWF      _HL
;BicycleSafetyProject.c,437 :: 		CCP2CON = 0x08;//
0x03FF	0x3008      	MOVLW      8
0x0400	0x009D      	MOVWF      CCP2CON
;BicycleSafetyProject.c,438 :: 		CCPR2H=2000>>8;
0x0401	0x3007      	MOVLW      7
0x0402	0x009C      	MOVWF      CCPR2H
;BicycleSafetyProject.c,439 :: 		CCPR2L=2000;
0x0403	0x30D0      	MOVLW      208
0x0404	0x009B      	MOVWF      CCPR2L
;BicycleSafetyProject.c,440 :: 		}
L_end_CCPcompare_init:
0x0405	0x0008      	RETURN
; end of _CCPcompare_init
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x0406	0x2C18      	GOTO       L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x0407	0x3080      	MOVLW      128
0x0408	0x1683      	BSF        STATUS, 5
0x0409	0x1303      	BCF        STATUS, 6
0x040A	0x00B8      	MOVWF      FARG_Lcd_Out_row
0x040B	0x2C2B      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x040C	0x30C0      	MOVLW      192
0x040D	0x00B8      	MOVWF      FARG_Lcd_Out_row
0x040E	0x2C2B      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x040F	0x3094      	MOVLW      148
0x0410	0x00B8      	MOVWF      FARG_Lcd_Out_row
0x0411	0x2C2B      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x0412	0x30D4      	MOVLW      212
0x0413	0x00B8      	MOVWF      FARG_Lcd_Out_row
0x0414	0x2C2B      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x0415	0x3080      	MOVLW      128
0x0416	0x00B8      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,193 :: 		
0x0417	0x2C2B      	GOTO       L_Lcd_Out12
L_Lcd_Out11:
0x0418	0x1683      	BSF        STATUS, 5
0x0419	0x1303      	BCF        STATUS, 6
0x041A	0x0838      	MOVF       FARG_Lcd_Out_row, 0
0x041B	0x3A01      	XORLW      1
0x041C	0x1903      	BTFSC      STATUS, 2
0x041D	0x2C07      	GOTO       L_Lcd_Out13
0x041E	0x0838      	MOVF       FARG_Lcd_Out_row, 0
0x041F	0x3A02      	XORLW      2
0x0420	0x1903      	BTFSC      STATUS, 2
0x0421	0x2C0C      	GOTO       L_Lcd_Out14
0x0422	0x0838      	MOVF       FARG_Lcd_Out_row, 0
0x0423	0x3A03      	XORLW      3
0x0424	0x1903      	BTFSC      STATUS, 2
0x0425	0x2C0F      	GOTO       L_Lcd_Out15
0x0426	0x0838      	MOVF       FARG_Lcd_Out_row, 0
0x0427	0x3A04      	XORLW      4
0x0428	0x1903      	BTFSC      STATUS, 2
0x0429	0x2C12      	GOTO       L_Lcd_Out16
0x042A	0x2C15      	GOTO       L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x042B	0x0339      	DECF       FARG_Lcd_Out_column, 0
0x042C	0x00F0      	MOVWF      R0
0x042D	0x0838      	MOVF       FARG_Lcd_Out_row, 0
0x042E	0x07F0      	ADDWF      R0, 1
0x042F	0x0870      	MOVF       R0, 0
0x0430	0x00B8      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x0431	0x0870      	MOVF       R0, 0
0x0432	0x00BE      	MOVWF      FARG_Lcd_Cmd_out_char
0x0433	0x2183      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x0434	0x106D      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,198 :: 		
0x0435	0x1683      	BSF        STATUS, 5
0x0436	0x01BB      	CLRF       Lcd_Out_i_L0
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x0437	0x083B      	MOVF       Lcd_Out_i_L0, 0
0x0438	0x073A      	ADDWF      FARG_Lcd_Out_text, 0
0x0439	0x0084      	MOVWF      FSR
0x043A	0x0800      	MOVF       INDF, 0
0x043B	0x1903      	BTFSC      STATUS, 2
0x043C	0x2C46      	GOTO       L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x043D	0x083B      	MOVF       Lcd_Out_i_L0, 0
0x043E	0x073A      	ADDWF      FARG_Lcd_Out_text, 0
0x043F	0x0084      	MOVWF      FSR
0x0440	0x0800      	MOVF       INDF, 0
0x0441	0x00BC      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0442	0x23B8      	CALL       _Lcd_Chr_CP
0x0443	0x1683      	BSF        STATUS, 5
0x0444	0x0ABB      	INCF       Lcd_Out_i_L0, 1
0x0445	0x2C37      	GOTO       L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x0446	0x1283      	BCF        STATUS, 5
0x0447	0x146D      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x0448	0x0008      	RETURN
; end of _Lcd_Out
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x0449	0x1683      	BSF        STATUS, 5
0x044A	0x1303      	BCF        STATUS, 6
0x044B	0x1286      	BCF        LCD_EN_Direction, BitPos(LCD_EN_Direction+0)
;__Lib_Lcd.c,87 :: 		
0x044C	0x1206      	BCF        LCD_RS_Direction, BitPos(LCD_RS_Direction+0)
;__Lib_Lcd.c,88 :: 		
0x044D	0x1006      	BCF        LCD_D4_Direction, BitPos(LCD_D4_Direction+0)
;__Lib_Lcd.c,89 :: 		
0x044E	0x1086      	BCF        LCD_D5_Direction, BitPos(LCD_D5_Direction+0)
;__Lib_Lcd.c,90 :: 		
0x044F	0x1106      	BCF        LCD_D6_Direction, BitPos(LCD_D6_Direction+0)
;__Lib_Lcd.c,91 :: 		
0x0450	0x1186      	BCF        LCD_D7_Direction, BitPos(LCD_D7_Direction+0)
;__Lib_Lcd.c,93 :: 		
0x0451	0x1283      	BCF        STATUS, 5
0x0452	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,94 :: 		
0x0453	0x1206      	BCF        LCD_RS, BitPos(LCD_RS+0)
;__Lib_Lcd.c,95 :: 		
0x0454	0x1186      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,96 :: 		
0x0455	0x1106      	BCF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,97 :: 		
0x0456	0x1086      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,98 :: 		
0x0457	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,100 :: 		
0x0458	0x2173      	CALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x0459	0x2173      	CALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x045A	0x2173      	CALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x045B	0x1486      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,106 :: 		
0x045C	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,107 :: 		
0x045D	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,108 :: 		
0x045E	0x2180      	CALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x045F	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,110 :: 		
0x0460	0x2173      	CALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x0461	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,113 :: 		
0x0462	0x2180      	CALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x0463	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,115 :: 		
0x0464	0x2173      	CALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x0465	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,118 :: 		
0x0466	0x2180      	CALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x0467	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,120 :: 		
0x0468	0x2173      	CALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x0469	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,124 :: 		
0x046A	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,125 :: 		
0x046B	0x2180      	CALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x046C	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,127 :: 		
0x046D	0x2173      	CALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x046E	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,131 :: 		
0x046F	0x2180      	CALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x0470	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,134 :: 		
0x0471	0x1086      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,135 :: 		
0x0472	0x1586      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,136 :: 		
0x0473	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,137 :: 		
0x0474	0x2180      	CALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x0475	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,139 :: 		
0x0476	0x2173      	CALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x0477	0x1186      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,143 :: 		
0x0478	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,144 :: 		
0x0479	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,145 :: 		
0x047A	0x2180      	CALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x047B	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,148 :: 		
0x047C	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,149 :: 		
0x047D	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,150 :: 		
0x047E	0x2180      	CALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x047F	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,152 :: 		
0x0480	0x2173      	CALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x0481	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,156 :: 		
0x0482	0x2180      	CALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x0483	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,159 :: 		
0x0484	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,160 :: 		
0x0485	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,161 :: 		
0x0486	0x2180      	CALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x0487	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,163 :: 		
0x0488	0x2173      	CALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x0489	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,167 :: 		
0x048A	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,168 :: 		
0x048B	0x2180      	CALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x048C	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,171 :: 		
0x048D	0x1586      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,172 :: 		
0x048E	0x1506      	BSF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,173 :: 		
0x048F	0x1486      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,174 :: 		
0x0490	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,175 :: 		
0x0491	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,176 :: 		
0x0492	0x2180      	CALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x0493	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,179 :: 		
0x0494	0x2173      	CALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x0495	0x146D      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x0496	0x0008      	RETURN
; end of _Lcd_Init
_motor1:
;BicycleSafetyProject.c,442 :: 		void motor1(void) {
;BicycleSafetyProject.c,443 :: 		CCPR1L = mspeed1;                // Set PWM duty cycle for motor 1
0x0497	0x1283      	BCF        STATUS, 5
0x0498	0x1303      	BCF        STATUS, 6
0x0499	0x0854      	MOVF       _mspeed1, 0
0x049A	0x0095      	MOVWF      CCPR1L
;BicycleSafetyProject.c,444 :: 		}
L_end_motor1:
0x049B	0x0008      	RETURN
; end of _motor1
_CCPPWM_init:
;BicycleSafetyProject.c,423 :: 		void CCPPWM_init(void) {
;BicycleSafetyProject.c,424 :: 		T2CON = 0x07;                    // Enable Timer2 with 1:16 prescaler
0x049C	0x3007      	MOVLW      7
0x049D	0x1283      	BCF        STATUS, 5
0x049E	0x1303      	BCF        STATUS, 6
0x049F	0x0092      	MOVWF      T2CON
;BicycleSafetyProject.c,425 :: 		CCP1CON = 0x0C;                  // Enable PWM for CCP1
0x04A0	0x300C      	MOVLW      12
0x04A1	0x0097      	MOVWF      CCP1CON
;BicycleSafetyProject.c,426 :: 		PR2 = 250;                       // Set Timer2 period
0x04A2	0x30FA      	MOVLW      250
0x04A3	0x1683      	BSF        STATUS, 5
0x04A4	0x0092      	MOVWF      PR2
;BicycleSafetyProject.c,427 :: 		CCPR1L = 125;                    // Initial duty cycle for CCP1 (50%)
0x04A5	0x307D      	MOVLW      125
0x04A6	0x1283      	BCF        STATUS, 5
0x04A7	0x0095      	MOVWF      CCPR1L
;BicycleSafetyProject.c,429 :: 		mspeed1 = 0;
0x04A8	0x01D4      	CLRF       _mspeed1
;BicycleSafetyProject.c,430 :: 		mspeed2 = 0;
0x04A9	0x01CF      	CLRF       _mspeed2
;BicycleSafetyProject.c,431 :: 		period = 0;
0x04AA	0x01D0      	CLRF       _period
0x04AB	0x01D1      	CLRF       _period+1
;BicycleSafetyProject.c,432 :: 		duty = 0;
0x04AC	0x01D5      	CLRF       _duty
0x04AD	0x01D6      	CLRF       _duty+1
;BicycleSafetyProject.c,433 :: 		}
L_end_CCPPWM_init:
0x04AE	0x0008      	RETURN
; end of _CCPPWM_init
_sonar_init:
;BicycleSafetyProject.c,361 :: 		void sonar_init(void) {
;BicycleSafetyProject.c,362 :: 		T1overflow = 0;
0x04AF	0x1283      	BCF        STATUS, 5
0x04B0	0x1303      	BCF        STATUS, 6
0x04B1	0x01DD      	CLRF       _T1overflow
0x04B2	0x01DE      	CLRF       _T1overflow+1
;BicycleSafetyProject.c,363 :: 		T1counts = 0;
0x04B3	0x01DF      	CLRF       _T1counts
0x04B4	0x01E0      	CLRF       _T1counts+1
0x04B5	0x01E1      	CLRF       _T1counts+2
0x04B6	0x01E2      	CLRF       _T1counts+3
;BicycleSafetyProject.c,364 :: 		T1time = 0;
0x04B7	0x01D7      	CLRF       _T1time
0x04B8	0x01D8      	CLRF       _T1time+1
0x04B9	0x01D9      	CLRF       _T1time+2
0x04BA	0x01DA      	CLRF       _T1time+3
;BicycleSafetyProject.c,365 :: 		T2overflow = 0;
0x04BB	0x01DB      	CLRF       _T2overflow
0x04BC	0x01DC      	CLRF       _T2overflow+1
;BicycleSafetyProject.c,366 :: 		T2counts = 0;
0x04BD	0x01BC      	CLRF       _T2counts
0x04BE	0x01BD      	CLRF       _T2counts+1
0x04BF	0x01BE      	CLRF       _T2counts+2
0x04C0	0x01BF      	CLRF       _T2counts+3
;BicycleSafetyProject.c,367 :: 		T2time = 0;
0x04C1	0x01C0      	CLRF       _T2time
0x04C2	0x01C1      	CLRF       _T2time+1
0x04C3	0x01C2      	CLRF       _T2time+2
0x04C4	0x01C3      	CLRF       _T2time+3
;BicycleSafetyProject.c,368 :: 		D1read = 0;
0x04C5	0x01BA      	CLRF       _D1read
;BicycleSafetyProject.c,369 :: 		D2read = 0;
0x04C6	0x01BB      	CLRF       _D2read
;BicycleSafetyProject.c,370 :: 		D1 = 0;
0x04C7	0x01C4      	CLRF       _D1
0x04C8	0x01C5      	CLRF       _D1+1
0x04C9	0x01C6      	CLRF       _D1+2
0x04CA	0x01C7      	CLRF       _D1+3
;BicycleSafetyProject.c,371 :: 		D2 = 0;
0x04CB	0x01CA      	CLRF       _D2
0x04CC	0x01CB      	CLRF       _D2+1
0x04CD	0x01CC      	CLRF       _D2+2
0x04CE	0x01CD      	CLRF       _D2+3
;BicycleSafetyProject.c,372 :: 		TMR1H = 0;
0x04CF	0x018F      	CLRF       TMR1H
;BicycleSafetyProject.c,373 :: 		TMR1L = 0;
0x04D0	0x018E      	CLRF       TMR1L
;BicycleSafetyProject.c,374 :: 		PIE1 |= 0x01;               // Enable TMR1 Overflow interrupt
0x04D1	0x1683      	BSF        STATUS, 5
0x04D2	0x140C      	BSF        PIE1, 0
;BicycleSafetyProject.c,375 :: 		T1CON = 0x18;               // TMR1 OFF, Fosc/4 (1uS increments) with 1:2 prescaler
0x04D3	0x3018      	MOVLW      24
0x04D4	0x1283      	BCF        STATUS, 5
0x04D5	0x0090      	MOVWF      T1CON
;BicycleSafetyProject.c,376 :: 		}
L_end_sonar_init:
0x04D6	0x0008      	RETURN
; end of _sonar_init
_ATD_init:
;BicycleSafetyProject.c,328 :: 		void ATD_init(void) {
;BicycleSafetyProject.c,329 :: 		ADCON0 = 0x41;             // ADC ON, Don't GO, Channel 0, Fosc/16
0x04D7	0x3041      	MOVLW      65
0x04D8	0x1283      	BCF        STATUS, 5
0x04D9	0x1303      	BCF        STATUS, 6
0x04DA	0x009F      	MOVWF      ADCON0
;BicycleSafetyProject.c,330 :: 		ADCON1 = 0xC4;             // AN0, AN1, AN3 analog channels; 500 KHz, right justified
0x04DB	0x30C4      	MOVLW      196
0x04DC	0x1683      	BSF        STATUS, 5
0x04DD	0x009F      	MOVWF      ADCON1
;BicycleSafetyProject.c,331 :: 		}
L_end_ATD_init:
0x04DE	0x0008      	RETURN
; end of _ATD_init
_ATD_read0:
;BicycleSafetyProject.c,334 :: 		unsigned int ATD_read0(void) {
;BicycleSafetyProject.c,335 :: 		ADCON0 &= 0xC7;            // Select channel 0
0x04DF	0x30C7      	MOVLW      199
0x04E0	0x1283      	BCF        STATUS, 5
0x04E1	0x1303      	BCF        STATUS, 6
0x04E2	0x059F      	ANDWF      ADCON0, 1
;BicycleSafetyProject.c,336 :: 		usDelay(10);               // Stabilize ADC input
0x04E3	0x300A      	MOVLW      10
0x04E4	0x1683      	BSF        STATUS, 5
0x04E5	0x00BF      	MOVWF      FARG_usDelay_usCnt
0x04E6	0x3000      	MOVLW      0
0x04E7	0x00C0      	MOVWF      FARG_usDelay_usCnt+1
0x04E8	0x21DA      	CALL       _usDelay
;BicycleSafetyProject.c,337 :: 		ADCON0 |= 0x04;            // Start ADC conversion
0x04E9	0x1283      	BCF        STATUS, 5
0x04EA	0x151F      	BSF        ADCON0, 2
;BicycleSafetyProject.c,338 :: 		while (ADCON0 & 0x04);     // Wait for conversion to complete
L_ATD_read045:
0x04EB	0x1D1F      	BTFSS      ADCON0, 2
0x04EC	0x2CEE      	GOTO       L_ATD_read046
0x04ED	0x2CEB      	GOTO       L_ATD_read045
L_ATD_read046:
;BicycleSafetyProject.c,339 :: 		return ((ADRESH << 8) | ADRESL);
0x04EE	0x081E      	MOVF       ADRESH, 0
0x04EF	0x00F1      	MOVWF      R0+1
0x04F0	0x01F0      	CLRF       R0
0x04F1	0x1683      	BSF        STATUS, 5
0x04F2	0x081E      	MOVF       ADRESL, 0
0x04F3	0x04F0      	IORWF      R0, 1
0x04F4	0x3000      	MOVLW      0
0x04F5	0x04F1      	IORWF      R0+1, 1
;BicycleSafetyProject.c,340 :: 		}
L_end_ATD_read0:
0x04F6	0x0008      	RETURN
; end of _ATD_read0
_Mul_16X16_U:
;__Lib_Math.c,136 :: 		
;__Lib_Math.c,143 :: 		
0x04F7	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,144 :: 		
0x04F8	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,145 :: 		
0x04F9	0x01FB      	CLRF       R11
;__Lib_Math.c,146 :: 		
0x04FA	0x01FA      	CLRF       R10
;__Lib_Math.c,147 :: 		
0x04FB	0x01F9      	CLRF       R9
;__Lib_Math.c,148 :: 		
0x04FC	0x3080      	MOVLW      128
;__Lib_Math.c,149 :: 		
0x04FD	0x00F8      	MOVWF      R8
;__Lib_Math.c,150 :: 		
0x04FE	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,151 :: 		
0x04FF	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,152 :: 		
0x0500	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,153 :: 		
0x0501	0x2D0B      	GOTO       $+10
;__Lib_Math.c,154 :: 		
0x0502	0x0874      	MOVF       R4, 0
;__Lib_Math.c,155 :: 		
0x0503	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,156 :: 		
0x0504	0x0875      	MOVF       R5, 0
;__Lib_Math.c,157 :: 		
0x0505	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,158 :: 		
0x0506	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,159 :: 		
0x0507	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,160 :: 		
0x0508	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,161 :: 		
0x0509	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,162 :: 		
0x050A	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,163 :: 		
0x050B	0x1FF0      	BTFSS      R0, 7
;__Lib_Math.c,164 :: 		
0x050C	0x2D13      	GOTO       $+7
;__Lib_Math.c,165 :: 		
0x050D	0x0874      	MOVF       R4, 0
;__Lib_Math.c,166 :: 		
0x050E	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,167 :: 		
0x050F	0x0875      	MOVF       R5, 0
;__Lib_Math.c,168 :: 		
0x0510	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,169 :: 		
0x0511	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,170 :: 		
0x0512	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,171 :: 		
0x0513	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,172 :: 		
0x0514	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,173 :: 		
0x0515	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,174 :: 		
0x0516	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,175 :: 		
0x0517	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,176 :: 		
0x0518	0x2CFE      	GOTO       $-26
;__Lib_Math.c,177 :: 		
0x0519	0x087B      	MOVF       R11, 0
;__Lib_Math.c,178 :: 		
0x051A	0x00F3      	MOVWF      R3
;__Lib_Math.c,179 :: 		
0x051B	0x087A      	MOVF       R10, 0
;__Lib_Math.c,180 :: 		
0x051C	0x00F2      	MOVWF      R2
;__Lib_Math.c,181 :: 		
0x051D	0x0879      	MOVF       R9, 0
;__Lib_Math.c,182 :: 		
0x051E	0x00F1      	MOVWF      R1
;__Lib_Math.c,183 :: 		
0x051F	0x0878      	MOVF       R8, 0
;__Lib_Math.c,184 :: 		
0x0520	0x00F0      	MOVWF      R0
;__Lib_Math.c,187 :: 		
L_end_Mul_16X16_U:
0x0521	0x0008      	RETURN
; end of _Mul_16X16_U
_Div_16X16_U:
;__Lib_Math.c,215 :: 		
;__Lib_Math.c,222 :: 		
0x0522	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,223 :: 		
0x0523	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,224 :: 		
0x0524	0x01F8      	CLRF       R8
;__Lib_Math.c,225 :: 		
0x0525	0x01F9      	CLRF       R9
;__Lib_Math.c,226 :: 		
0x0526	0x3010      	MOVLW      16
;__Lib_Math.c,227 :: 		
0x0527	0x00FC      	MOVWF      R12
;__Lib_Math.c,228 :: 		
0x0528	0x0D71      	RLF        R1, 0
;__Lib_Math.c,229 :: 		
0x0529	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,230 :: 		
0x052A	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,231 :: 		
0x052B	0x0874      	MOVF       R4, 0
;__Lib_Math.c,232 :: 		
0x052C	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,233 :: 		
0x052D	0x0875      	MOVF       R5, 0
;__Lib_Math.c,234 :: 		
0x052E	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,235 :: 		
0x052F	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,236 :: 		
0x0530	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,237 :: 		
0x0531	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,238 :: 		
0x0532	0x2D3A      	GOTO       $+8
;__Lib_Math.c,239 :: 		
0x0533	0x0874      	MOVF       R4, 0
;__Lib_Math.c,240 :: 		
0x0534	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,241 :: 		
0x0535	0x0875      	MOVF       R5, 0
;__Lib_Math.c,242 :: 		
0x0536	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,243 :: 		
0x0537	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,244 :: 		
0x0538	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,245 :: 		
0x0539	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,246 :: 		
0x053A	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,247 :: 		
0x053B	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,248 :: 		
0x053C	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,249 :: 		
0x053D	0x2D28      	GOTO       $-21
;__Lib_Math.c,251 :: 		
L_end_Div_16X16_U:
0x053E	0x0008      	RETURN
; end of _Div_16X16_U
_sonar_read1:
;BicycleSafetyProject.c,379 :: 		void sonar_read1(void) {
;BicycleSafetyProject.c,380 :: 		T1overflow = 0;
0x053F	0x1283      	BCF        STATUS, 5
0x0540	0x1303      	BCF        STATUS, 6
0x0541	0x01DD      	CLRF       _T1overflow
0x0542	0x01DE      	CLRF       _T1overflow+1
;BicycleSafetyProject.c,381 :: 		TMR1H = 0;
0x0543	0x018F      	CLRF       TMR1H
;BicycleSafetyProject.c,382 :: 		TMR1L = 0;
0x0544	0x018E      	CLRF       TMR1L
;BicycleSafetyProject.c,383 :: 		T1CON = 0x18;
0x0545	0x3018      	MOVLW      24
0x0546	0x0090      	MOVWF      T1CON
;BicycleSafetyProject.c,385 :: 		PORTC |= 0x80;                    // Trigger ultrasonic sensor 1 (RC7 connected to trigger)
0x0547	0x1787      	BSF        PORTC, 7
;BicycleSafetyProject.c,386 :: 		usDelay(10);                      // Keep trigger for 10uS
0x0548	0x300A      	MOVLW      10
0x0549	0x1683      	BSF        STATUS, 5
0x054A	0x00BF      	MOVWF      FARG_usDelay_usCnt
0x054B	0x3000      	MOVLW      0
0x054C	0x00C0      	MOVWF      FARG_usDelay_usCnt+1
0x054D	0x21DA      	CALL       _usDelay
;BicycleSafetyProject.c,387 :: 		PORTC &= 0x7F;                    // Remove trigger
0x054E	0x307F      	MOVLW      127
0x054F	0x1283      	BCF        STATUS, 5
0x0550	0x0587      	ANDWF      PORTC, 1
;BicycleSafetyProject.c,389 :: 		while (!(PORTC & 0x40));          // Wait for echo to start
L_sonar_read151:
0x0551	0x1B07      	BTFSC      PORTC, 6
0x0552	0x2D54      	GOTO       L_sonar_read152
0x0553	0x2D51      	GOTO       L_sonar_read151
L_sonar_read152:
;BicycleSafetyProject.c,390 :: 		T1CON = 0x19;                     // TMR1 ON
0x0554	0x3019      	MOVLW      25
0x0555	0x0090      	MOVWF      T1CON
;BicycleSafetyProject.c,391 :: 		while (PORTC & 0x40);             // Wait for echo to end
L_sonar_read153:
0x0556	0x1F07      	BTFSS      PORTC, 6
0x0557	0x2D59      	GOTO       L_sonar_read154
0x0558	0x2D56      	GOTO       L_sonar_read153
L_sonar_read154:
;BicycleSafetyProject.c,392 :: 		T1CON = 0x18;                     // TMR1 OFF
0x0559	0x3018      	MOVLW      24
0x055A	0x0090      	MOVWF      T1CON
;BicycleSafetyProject.c,394 :: 		T1counts = ((TMR1H << 8) | TMR1L) + (T1overflow * 65536);
0x055B	0x080F      	MOVF       TMR1H, 0
0x055C	0x00F1      	MOVWF      R0+1
0x055D	0x01F0      	CLRF       R0
0x055E	0x080E      	MOVF       TMR1L, 0
0x055F	0x0470      	IORWF      R0, 0
0x0560	0x00F8      	MOVWF      R8
0x0561	0x0871      	MOVF       R0+1, 0
0x0562	0x00F9      	MOVWF      R8+1
0x0563	0x3000      	MOVLW      0
0x0564	0x04F9      	IORWF      R8+1, 1
0x0565	0x085E      	MOVF       _T1overflow+1, 0
0x0566	0x00F7      	MOVWF      R4+3
0x0567	0x085D      	MOVF       _T1overflow, 0
0x0568	0x00F6      	MOVWF      R4+2
0x0569	0x01F4      	CLRF       R4
0x056A	0x01F5      	CLRF       R4+1
0x056B	0x0878      	MOVF       R8, 0
0x056C	0x00F0      	MOVWF      R0
0x056D	0x0879      	MOVF       R8+1, 0
0x056E	0x00F1      	MOVWF      R0+1
0x056F	0x01F2      	CLRF       R0+2
0x0570	0x01F3      	CLRF       R0+3
0x0571	0x0874      	MOVF       R4, 0
0x0572	0x07F0      	ADDWF      R0, 1
0x0573	0x0875      	MOVF       R4+1, 0
0x0574	0x1803      	BTFSC      STATUS, 0
0x0575	0x0F75      	INCFSZ     R4+1, 0
0x0576	0x07F1      	ADDWF      R0+1, 1
0x0577	0x0876      	MOVF       R4+2, 0
0x0578	0x1803      	BTFSC      STATUS, 0
0x0579	0x0F76      	INCFSZ     R4+2, 0
0x057A	0x07F2      	ADDWF      R0+2, 1
0x057B	0x0877      	MOVF       R4+3, 0
0x057C	0x1803      	BTFSC      STATUS, 0
0x057D	0x0F77      	INCFSZ     R4+3, 0
0x057E	0x07F3      	ADDWF      R0+3, 1
0x057F	0x0870      	MOVF       R0, 0
0x0580	0x00DF      	MOVWF      _T1counts
0x0581	0x0871      	MOVF       R0+1, 0
0x0582	0x00E0      	MOVWF      _T1counts+1
0x0583	0x0872      	MOVF       R0+2, 0
0x0584	0x00E1      	MOVWF      _T1counts+2
0x0585	0x0873      	MOVF       R0+3, 0
0x0586	0x00E2      	MOVWF      _T1counts+3
;BicycleSafetyProject.c,395 :: 		T1time = T1counts;                // Time in microseconds
0x0587	0x0870      	MOVF       R0, 0
0x0588	0x00D7      	MOVWF      _T1time
0x0589	0x0871      	MOVF       R0+1, 0
0x058A	0x00D8      	MOVWF      _T1time+1
0x058B	0x0872      	MOVF       R0+2, 0
0x058C	0x00D9      	MOVWF      _T1time+2
0x058D	0x0873      	MOVF       R0+3, 0
0x058E	0x00DA      	MOVWF      _T1time+3
;BicycleSafetyProject.c,396 :: 		D1 = ((T1time * 34) / 1000) / 2;  // Calculate distance in cm
0x058F	0x3022      	MOVLW      34
0x0590	0x00F4      	MOVWF      R4
0x0591	0x01F5      	CLRF       R4+1
0x0592	0x01F6      	CLRF       R4+2
0x0593	0x01F7      	CLRF       R4+3
0x0594	0x2366      	CALL       _Mul_32x32_U
0x0595	0x30E8      	MOVLW      232
0x0596	0x00F4      	MOVWF      R4
0x0597	0x3003      	MOVLW      3
0x0598	0x00F5      	MOVWF      R4+1
0x0599	0x01F6      	CLRF       R4+2
0x059A	0x01F7      	CLRF       R4+3
0x059B	0x21EE      	CALL       _Div_32x32_U
0x059C	0x0870      	MOVF       R0, 0
0x059D	0x00C4      	MOVWF      _D1
0x059E	0x0871      	MOVF       R0+1, 0
0x059F	0x00C5      	MOVWF      _D1+1
0x05A0	0x0872      	MOVF       R0+2, 0
0x05A1	0x00C6      	MOVWF      _D1+2
0x05A2	0x0873      	MOVF       R0+3, 0
0x05A3	0x00C7      	MOVWF      _D1+3
0x05A4	0x0CC7      	RRF        _D1+3, 1
0x05A5	0x0CC6      	RRF        _D1+2, 1
0x05A6	0x0CC5      	RRF        _D1+1, 1
0x05A7	0x0CC4      	RRF        _D1, 1
0x05A8	0x13C7      	BCF        _D1+3, 7
;BicycleSafetyProject.c,397 :: 		D1read = 0x01;                    // Set read flag
0x05A9	0x3001      	MOVLW      1
0x05AA	0x00BA      	MOVWF      _D1read
;BicycleSafetyProject.c,398 :: 		}
L_end_sonar_read1:
0x05AB	0x0008      	RETURN
; end of _sonar_read1
_ATD_read2:
;BicycleSafetyProject.c,352 :: 		unsigned int ATD_read2(void) {
;BicycleSafetyProject.c,353 :: 		ADCON0 = (ADCON0 & 0xDF) | 0x18;  // Select channel 3
0x05AC	0x30DF      	MOVLW      223
0x05AD	0x1283      	BCF        STATUS, 5
0x05AE	0x1303      	BCF        STATUS, 6
0x05AF	0x051F      	ANDWF      ADCON0, 0
0x05B0	0x00F0      	MOVWF      R0
0x05B1	0x3018      	MOVLW      24
0x05B2	0x0470      	IORWF      R0, 0
0x05B3	0x009F      	MOVWF      ADCON0
;BicycleSafetyProject.c,354 :: 		usDelay(10);                      // Stabilize ADC input
0x05B4	0x300A      	MOVLW      10
0x05B5	0x1683      	BSF        STATUS, 5
0x05B6	0x00BF      	MOVWF      FARG_usDelay_usCnt
0x05B7	0x3000      	MOVLW      0
0x05B8	0x00C0      	MOVWF      FARG_usDelay_usCnt+1
0x05B9	0x21DA      	CALL       _usDelay
;BicycleSafetyProject.c,355 :: 		ADCON0 |= 0x04;                   // Start ADC conversion
0x05BA	0x1283      	BCF        STATUS, 5
0x05BB	0x151F      	BSF        ADCON0, 2
;BicycleSafetyProject.c,356 :: 		while (ADCON0 & 0x04);            // Wait for conversion to complete
L_ATD_read249:
0x05BC	0x1D1F      	BTFSS      ADCON0, 2
0x05BD	0x2DBF      	GOTO       L_ATD_read250
0x05BE	0x2DBC      	GOTO       L_ATD_read249
L_ATD_read250:
;BicycleSafetyProject.c,357 :: 		return ((ADRESH << 8) | ADRESL);
0x05BF	0x081E      	MOVF       ADRESH, 0
0x05C0	0x00F1      	MOVWF      R0+1
0x05C1	0x01F0      	CLRF       R0
0x05C2	0x1683      	BSF        STATUS, 5
0x05C3	0x081E      	MOVF       ADRESL, 0
0x05C4	0x04F0      	IORWF      R0, 1
0x05C5	0x3000      	MOVLW      0
0x05C6	0x04F1      	IORWF      R0+1, 1
;BicycleSafetyProject.c,358 :: 		}
L_end_ATD_read2:
0x05C7	0x0008      	RETURN
; end of _ATD_read2
_ATD_read1:
;BicycleSafetyProject.c,343 :: 		unsigned int ATD_read1(void) {
;BicycleSafetyProject.c,344 :: 		ADCON0 = (ADCON0 & 0xCF) | 0x08;  // Select channel 1
0x05C8	0x30CF      	MOVLW      207
0x05C9	0x1283      	BCF        STATUS, 5
0x05CA	0x1303      	BCF        STATUS, 6
0x05CB	0x051F      	ANDWF      ADCON0, 0
0x05CC	0x00F0      	MOVWF      R0
0x05CD	0x3008      	MOVLW      8
0x05CE	0x0470      	IORWF      R0, 0
0x05CF	0x009F      	MOVWF      ADCON0
;BicycleSafetyProject.c,345 :: 		usDelay(10);                      // Stabilize ADC input
0x05D0	0x300A      	MOVLW      10
0x05D1	0x1683      	BSF        STATUS, 5
0x05D2	0x00BF      	MOVWF      FARG_usDelay_usCnt
0x05D3	0x3000      	MOVLW      0
0x05D4	0x00C0      	MOVWF      FARG_usDelay_usCnt+1
0x05D5	0x21DA      	CALL       _usDelay
;BicycleSafetyProject.c,346 :: 		ADCON0 |= 0x04;                   // Start ADC conversion
0x05D6	0x1283      	BCF        STATUS, 5
0x05D7	0x151F      	BSF        ADCON0, 2
;BicycleSafetyProject.c,347 :: 		while (ADCON0 & 0x04);            // Wait for conversion to complete
L_ATD_read147:
0x05D8	0x1D1F      	BTFSS      ADCON0, 2
0x05D9	0x2DDB      	GOTO       L_ATD_read148
0x05DA	0x2DD8      	GOTO       L_ATD_read147
L_ATD_read148:
;BicycleSafetyProject.c,348 :: 		return ((ADRESH << 8) | ADRESL);
0x05DB	0x081E      	MOVF       ADRESH, 0
0x05DC	0x00F1      	MOVWF      R0+1
0x05DD	0x01F0      	CLRF       R0
0x05DE	0x1683      	BSF        STATUS, 5
0x05DF	0x081E      	MOVF       ADRESL, 0
0x05E0	0x04F0      	IORWF      R0, 1
0x05E1	0x3000      	MOVLW      0
0x05E2	0x04F1      	IORWF      R0+1, 1
;BicycleSafetyProject.c,349 :: 		}
L_end_ATD_read1:
0x05E3	0x0008      	RETURN
; end of _ATD_read1
_sonar_read2:
;BicycleSafetyProject.c,401 :: 		void sonar_read2(void) {
;BicycleSafetyProject.c,402 :: 		T2overflow = 0;
0x05E4	0x1283      	BCF        STATUS, 5
0x05E5	0x1303      	BCF        STATUS, 6
0x05E6	0x01DB      	CLRF       _T2overflow
0x05E7	0x01DC      	CLRF       _T2overflow+1
;BicycleSafetyProject.c,403 :: 		TMR1H = 0;
0x05E8	0x018F      	CLRF       TMR1H
;BicycleSafetyProject.c,404 :: 		TMR1L = 0;
0x05E9	0x018E      	CLRF       TMR1L
;BicycleSafetyProject.c,405 :: 		T1CON = 0x18;
0x05EA	0x3018      	MOVLW      24
0x05EB	0x0090      	MOVWF      T1CON
;BicycleSafetyProject.c,407 :: 		PORTC |= 0x20;                    // Trigger ultrasonic sensor 2 (RC5 connected to trigger)
0x05EC	0x1687      	BSF        PORTC, 5
;BicycleSafetyProject.c,408 :: 		usDelay(10);                      // Keep trigger for 10uS
0x05ED	0x300A      	MOVLW      10
0x05EE	0x1683      	BSF        STATUS, 5
0x05EF	0x00BF      	MOVWF      FARG_usDelay_usCnt
0x05F0	0x3000      	MOVLW      0
0x05F1	0x00C0      	MOVWF      FARG_usDelay_usCnt+1
0x05F2	0x21DA      	CALL       _usDelay
;BicycleSafetyProject.c,409 :: 		PORTC &= 0xDF;                    // Remove trigger
0x05F3	0x30DF      	MOVLW      223
0x05F4	0x1283      	BCF        STATUS, 5
0x05F5	0x0587      	ANDWF      PORTC, 1
;BicycleSafetyProject.c,411 :: 		while (!(PORTC & 0x10));          // Wait for echo to start
L_sonar_read255:
0x05F6	0x1A07      	BTFSC      PORTC, 4
0x05F7	0x2DF9      	GOTO       L_sonar_read256
0x05F8	0x2DF6      	GOTO       L_sonar_read255
L_sonar_read256:
;BicycleSafetyProject.c,412 :: 		T1CON = 0x19;                     // TMR1 ON
0x05F9	0x3019      	MOVLW      25
0x05FA	0x0090      	MOVWF      T1CON
;BicycleSafetyProject.c,413 :: 		while (PORTC & 0x10);             // Wait for echo to end
L_sonar_read257:
0x05FB	0x1E07      	BTFSS      PORTC, 4
0x05FC	0x2DFE      	GOTO       L_sonar_read258
0x05FD	0x2DFB      	GOTO       L_sonar_read257
L_sonar_read258:
;BicycleSafetyProject.c,414 :: 		T1CON = 0x18;                     // TMR1 OFF
0x05FE	0x3018      	MOVLW      24
0x05FF	0x0090      	MOVWF      T1CON
;BicycleSafetyProject.c,416 :: 		T2counts = ((TMR1H << 8) | TMR1L) + (T2overflow * 65536);
0x0600	0x080F      	MOVF       TMR1H, 0
0x0601	0x00F1      	MOVWF      R0+1
0x0602	0x01F0      	CLRF       R0
0x0603	0x080E      	MOVF       TMR1L, 0
0x0604	0x0470      	IORWF      R0, 0
0x0605	0x00F8      	MOVWF      R8
0x0606	0x0871      	MOVF       R0+1, 0
0x0607	0x00F9      	MOVWF      R8+1
0x0608	0x3000      	MOVLW      0
0x0609	0x04F9      	IORWF      R8+1, 1
0x060A	0x085C      	MOVF       _T2overflow+1, 0
0x060B	0x00F7      	MOVWF      R4+3
0x060C	0x085B      	MOVF       _T2overflow, 0
0x060D	0x00F6      	MOVWF      R4+2
0x060E	0x01F4      	CLRF       R4
0x060F	0x01F5      	CLRF       R4+1
0x0610	0x0878      	MOVF       R8, 0
0x0611	0x00F0      	MOVWF      R0
0x0612	0x0879      	MOVF       R8+1, 0
0x0613	0x00F1      	MOVWF      R0+1
0x0614	0x01F2      	CLRF       R0+2
0x0615	0x01F3      	CLRF       R0+3
0x0616	0x0874      	MOVF       R4, 0
0x0617	0x07F0      	ADDWF      R0, 1
0x0618	0x0875      	MOVF       R4+1, 0
0x0619	0x1803      	BTFSC      STATUS, 0
0x061A	0x0F75      	INCFSZ     R4+1, 0
0x061B	0x07F1      	ADDWF      R0+1, 1
0x061C	0x0876      	MOVF       R4+2, 0
0x061D	0x1803      	BTFSC      STATUS, 0
0x061E	0x0F76      	INCFSZ     R4+2, 0
0x061F	0x07F2      	ADDWF      R0+2, 1
0x0620	0x0877      	MOVF       R4+3, 0
0x0621	0x1803      	BTFSC      STATUS, 0
0x0622	0x0F77      	INCFSZ     R4+3, 0
0x0623	0x07F3      	ADDWF      R0+3, 1
0x0624	0x0870      	MOVF       R0, 0
0x0625	0x00BC      	MOVWF      _T2counts
0x0626	0x0871      	MOVF       R0+1, 0
0x0627	0x00BD      	MOVWF      _T2counts+1
0x0628	0x0872      	MOVF       R0+2, 0
0x0629	0x00BE      	MOVWF      _T2counts+2
0x062A	0x0873      	MOVF       R0+3, 0
0x062B	0x00BF      	MOVWF      _T2counts+3
;BicycleSafetyProject.c,417 :: 		T2time = T2counts;                // Time in microseconds
0x062C	0x0870      	MOVF       R0, 0
0x062D	0x00C0      	MOVWF      _T2time
0x062E	0x0871      	MOVF       R0+1, 0
0x062F	0x00C1      	MOVWF      _T2time+1
0x0630	0x0872      	MOVF       R0+2, 0
0x0631	0x00C2      	MOVWF      _T2time+2
0x0632	0x0873      	MOVF       R0+3, 0
0x0633	0x00C3      	MOVWF      _T2time+3
;BicycleSafetyProject.c,418 :: 		D2 = ((T2time * 34) / 1000) / 2;  // Calculate distance in cm
0x0634	0x3022      	MOVLW      34
0x0635	0x00F4      	MOVWF      R4
0x0636	0x01F5      	CLRF       R4+1
0x0637	0x01F6      	CLRF       R4+2
0x0638	0x01F7      	CLRF       R4+3
0x0639	0x2366      	CALL       _Mul_32x32_U
0x063A	0x30E8      	MOVLW      232
0x063B	0x00F4      	MOVWF      R4
0x063C	0x3003      	MOVLW      3
0x063D	0x00F5      	MOVWF      R4+1
0x063E	0x01F6      	CLRF       R4+2
0x063F	0x01F7      	CLRF       R4+3
0x0640	0x21EE      	CALL       _Div_32x32_U
0x0641	0x0870      	MOVF       R0, 0
0x0642	0x00CA      	MOVWF      _D2
0x0643	0x0871      	MOVF       R0+1, 0
0x0644	0x00CB      	MOVWF      _D2+1
0x0645	0x0872      	MOVF       R0+2, 0
0x0646	0x00CC      	MOVWF      _D2+2
0x0647	0x0873      	MOVF       R0+3, 0
0x0648	0x00CD      	MOVWF      _D2+3
0x0649	0x0CCD      	RRF        _D2+3, 1
0x064A	0x0CCC      	RRF        _D2+2, 1
0x064B	0x0CCB      	RRF        _D2+1, 1
0x064C	0x0CCA      	RRF        _D2, 1
0x064D	0x13CD      	BCF        _D2+3, 7
;BicycleSafetyProject.c,419 :: 		D2read = 0x01;                    // Set read flag
0x064E	0x3001      	MOVLW      1
0x064F	0x00BB      	MOVWF      _D2read
;BicycleSafetyProject.c,420 :: 		}
L_end_sonar_read2:
0x0650	0x0008      	RETURN
; end of _sonar_read2
_port_init:
;BicycleSafetyProject.c,315 :: 		void port_init(void){
;BicycleSafetyProject.c,316 :: 		TRISA = 0x0F;                 // Configure RA4 RA5 RA6 RA7 as output
0x0651	0x300F      	MOVLW      15
0x0652	0x1683      	BSF        STATUS, 5
0x0653	0x1303      	BCF        STATUS, 6
0x0654	0x0085      	MOVWF      TRISA
;BicycleSafetyProject.c,317 :: 		PORTA = 0x00;                 // Initialize PORTA to LOW
0x0655	0x1283      	BCF        STATUS, 5
0x0656	0x0185      	CLRF       PORTA
;BicycleSafetyProject.c,318 :: 		TRISB = 0x00;                 // Configure RB0, RB4, RB5, RB6 as inputs
0x0657	0x1683      	BSF        STATUS, 5
0x0658	0x0186      	CLRF       TRISB
;BicycleSafetyProject.c,319 :: 		PORTB = 0x00;                 // Initialize PORTB to LOW
0x0659	0x1283      	BCF        STATUS, 5
0x065A	0x0186      	CLRF       PORTB
;BicycleSafetyProject.c,320 :: 		TRISC = 0x50;                 // Configure RC6 and RC4 as input                                                         v
0x065B	0x3050      	MOVLW      80
0x065C	0x1683      	BSF        STATUS, 5
0x065D	0x0087      	MOVWF      TRISC
;BicycleSafetyProject.c,321 :: 		PORTC = 0x00;                 // Initialize PORTC to LOW
0x065E	0x1283      	BCF        STATUS, 5
0x065F	0x0187      	CLRF       PORTC
;BicycleSafetyProject.c,322 :: 		TRISD = 0x00;
0x0660	0x1683      	BSF        STATUS, 5
0x0661	0x0188      	CLRF       TRISD
;BicycleSafetyProject.c,323 :: 		PORTD = 0x00;
0x0662	0x1283      	BCF        STATUS, 5
0x0663	0x0188      	CLRF       PORTD
;BicycleSafetyProject.c,324 :: 		TRISE = 0x0F;
0x0664	0x300F      	MOVLW      15
0x0665	0x1683      	BSF        STATUS, 5
0x0666	0x0089      	MOVWF      TRISE
;BicycleSafetyProject.c,325 :: 		PORTE = 0x00;
0x0667	0x1283      	BCF        STATUS, 5
0x0668	0x0189      	CLRF       PORTE
;BicycleSafetyProject.c,326 :: 		}
L_end_port_init:
0x0669	0x0008      	RETURN
; end of _port_init
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x066A	0x239D      	CALL       _____DoICP
0x066B	0x118A      	BCF        PCLATH, 3
0x066C	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x066D	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x066E	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x066F	0x0AB6      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0670	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0671	0x0AB7      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0672	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0673	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0674	0x2E6A      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0675	0x0008      	RETURN
; end of ___CC2DW
_main:
0x0800	0x3053      	MOVLW      83
0x0801	0x1283      	BCF        STATUS, 5
0x0802	0x1303      	BCF        STATUS, 6
0x0803	0x00A7      	MOVWF      _txt1
0x0804	0x3070      	MOVLW      112
0x0805	0x00A8      	MOVWF      40
0x0806	0x3065      	MOVLW      101
0x0807	0x00A9      	MOVWF      41
0x0808	0x3065      	MOVLW      101
0x0809	0x00AA      	MOVWF      42
0x080A	0x3064      	MOVLW      100
0x080B	0x00AB      	MOVWF      43
0x080C	0x303A      	MOVLW      58
0x080D	0x00AC      	MOVWF      44
0x080E	0x01AD      	CLRF       45
0x080F	0x306D      	MOVLW      109
0x0810	0x00AE      	MOVWF      _txt2
0x0811	0x302F      	MOVLW      47
0x0812	0x00AF      	MOVWF      47
0x0813	0x3073      	MOVLW      115
0x0814	0x00B0      	MOVWF      48
0x0815	0x01B1      	CLRF       49
0x0816	0x3048      	MOVLW      72
0x0817	0x00B2      	MOVWF      ?lstr1_BicycleSafetyProject
0x0818	0x3061      	MOVLW      97
0x0819	0x00B3      	MOVWF      51
0x081A	0x3073      	MOVLW      115
0x081B	0x00B4      	MOVWF      52
0x081C	0x306E      	MOVLW      110
0x081D	0x00B5      	MOVWF      53
0x081E	0x3061      	MOVLW      97
0x081F	0x00B6      	MOVWF      54
0x0820	0x3077      	MOVLW      119
0x0821	0x00B7      	MOVWF      55
0x0822	0x3069      	MOVLW      105
0x0823	0x00B8      	MOVWF      56
0x0824	0x01B9      	CLRF       57
;BicycleSafetyProject.c,223 :: 		void main() {
;BicycleSafetyProject.c,225 :: 		port_init();
0x0825	0x118A      	BCF        PCLATH, 3
0x0826	0x2651      	CALL       _port_init
0x0827	0x158A      	BSF        PCLATH, 3
;BicycleSafetyProject.c,226 :: 		ATD_init();                  // Initialize ADC
0x0828	0x118A      	BCF        PCLATH, 3
0x0829	0x24D7      	CALL       _ATD_init
0x082A	0x158A      	BSF        PCLATH, 3
;BicycleSafetyProject.c,227 :: 		sonar_init();                // Initialize ultrasonic sensors
0x082B	0x118A      	BCF        PCLATH, 3
0x082C	0x24AF      	CALL       _sonar_init
0x082D	0x158A      	BSF        PCLATH, 3
;BicycleSafetyProject.c,228 :: 		CCPPWM_init();               // Initialize PWM for motors
0x082E	0x118A      	BCF        PCLATH, 3
0x082F	0x249C      	CALL       _CCPPWM_init
0x0830	0x158A      	BSF        PCLATH, 3
;BicycleSafetyProject.c,229 :: 		CCPcompare_init();
0x0831	0x118A      	BCF        PCLATH, 3
0x0832	0x23FB      	CALL       _CCPcompare_init
0x0833	0x158A      	BSF        PCLATH, 3
;BicycleSafetyProject.c,232 :: 		Lcd_Init();
0x0834	0x118A      	BCF        PCLATH, 3
0x0835	0x2449      	CALL       _Lcd_Init
0x0836	0x158A      	BSF        PCLATH, 3
;BicycleSafetyProject.c,233 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
0x0837	0x3001      	MOVLW      1
0x0838	0x1683      	BSF        STATUS, 5
0x0839	0x00BE      	MOVWF      FARG_Lcd_Cmd_out_char
0x083A	0x118A      	BCF        PCLATH, 3
0x083B	0x2183      	CALL       _Lcd_Cmd
0x083C	0x158A      	BSF        PCLATH, 3
;BicycleSafetyProject.c,234 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);          // Cursor off
0x083D	0x300C      	MOVLW      12
0x083E	0x1683      	BSF        STATUS, 5
0x083F	0x00BE      	MOVWF      FARG_Lcd_Cmd_out_char
0x0840	0x118A      	BCF        PCLATH, 3
0x0841	0x2183      	CALL       _Lcd_Cmd
0x0842	0x158A      	BSF        PCLATH, 3
;BicycleSafetyProject.c,235 :: 		Lcd_Out(1, 6, "Hasnawi");
0x0843	0x3001      	MOVLW      1
0x0844	0x1683      	BSF        STATUS, 5
0x0845	0x00B8      	MOVWF      FARG_Lcd_Out_row
0x0846	0x3006      	MOVLW      6
0x0847	0x00B9      	MOVWF      FARG_Lcd_Out_column
0x0848	0x3032      	MOVLW      ?lstr1_BicycleSafetyProject
0x0849	0x00BA      	MOVWF      FARG_Lcd_Out_text
0x084A	0x118A      	BCF        PCLATH, 3
0x084B	0x2406      	CALL       _Lcd_Out
0x084C	0x158A      	BSF        PCLATH, 3
;BicycleSafetyProject.c,236 :: 		Lcd_Out(2, 1, txt1);
0x084D	0x3002      	MOVLW      2
0x084E	0x1683      	BSF        STATUS, 5
0x084F	0x00B8      	MOVWF      FARG_Lcd_Out_row
0x0850	0x3001      	MOVLW      1
0x0851	0x00B9      	MOVWF      FARG_Lcd_Out_column
0x0852	0x3027      	MOVLW      _txt1
0x0853	0x00BA      	MOVWF      FARG_Lcd_Out_text
0x0854	0x118A      	BCF        PCLATH, 3
0x0855	0x2406      	CALL       _Lcd_Out
0x0856	0x158A      	BSF        PCLATH, 3
;BicycleSafetyProject.c,237 :: 		Lcd_Out(2, 14, txt2);
0x0857	0x3002      	MOVLW      2
0x0858	0x1683      	BSF        STATUS, 5
0x0859	0x00B8      	MOVWF      FARG_Lcd_Out_row
0x085A	0x300E      	MOVLW      14
0x085B	0x00B9      	MOVWF      FARG_Lcd_Out_column
0x085C	0x302E      	MOVLW      _txt2
0x085D	0x00BA      	MOVWF      FARG_Lcd_Out_text
0x085E	0x118A      	BCF        PCLATH, 3
0x085F	0x2406      	CALL       _Lcd_Out
0x0860	0x158A      	BSF        PCLATH, 3
;BicycleSafetyProject.c,240 :: 		OPTION_REG = 0x07;           // Oscillator clock/4, prescaler of 256
0x0861	0x3007      	MOVLW      7
0x0862	0x1683      	BSF        STATUS, 5
0x0863	0x0081      	MOVWF      OPTION_REG
;BicycleSafetyProject.c,241 :: 		INTCON = 0xF0;               // Enable all interrupts
0x0864	0x30F0      	MOVLW      240
0x0865	0x008B      	MOVWF      INTCON
;BicycleSafetyProject.c,242 :: 		TMR0 = 0;                    // Reset Timer0
0x0866	0x1283      	BCF        STATUS, 5
0x0867	0x0181      	CLRF       TMR0
;BicycleSafetyProject.c,245 :: 		tick = tick1 = tick2 = tick3 = tick4 = ticka = tickb = pulse = 0;
0x0868	0x01E6      	CLRF       _pulse
0x0869	0x01E7      	CLRF       _pulse+1
0x086A	0x01E5      	CLRF       _tickb
0x086B	0x01E9      	CLRF       _ticka
0x086C	0x01E8      	CLRF       _tick4
0x086D	0x1683      	BSF        STATUS, 5
0x086E	0x01A6      	CLRF       _tick3
0x086F	0x1283      	BCF        STATUS, 5
0x0870	0x01EF      	CLRF       _tick2
0x0871	0x1683      	BSF        STATUS, 5
0x0872	0x01A8      	CLRF       _tick1
0x0873	0x01A7      	CLRF       _tick
;BicycleSafetyProject.c,246 :: 		servo_flag = 0;
0x0874	0x1283      	BCF        STATUS, 5
0x0875	0x01EA      	CLRF       _servo_flag
;BicycleSafetyProject.c,247 :: 		sonar_e = 1;
0x0876	0x3001      	MOVLW      1
0x0877	0x00EE      	MOVWF      _sonar_e
;BicycleSafetyProject.c,251 :: 		while (1) {
L_main24:
;BicycleSafetyProject.c,256 :: 		if(sonar_e) {
0x0878	0x086E      	MOVF       _sonar_e, 0
0x0879	0x1903      	BTFSC      STATUS, 2
0x087A	0x2905      	GOTO       L_main26
;BicycleSafetyProject.c,257 :: 		if (D1read & 0x01) {
0x087B	0x1C3A      	BTFSS      _D1read, 0
0x087C	0x28BD      	GOTO       L_main27
;BicycleSafetyProject.c,258 :: 		if (D1 < 10) {
0x087D	0x3000      	MOVLW      0
0x087E	0x0247      	SUBWF      _D1+3, 0
0x087F	0x1D03      	BTFSS      STATUS, 2
0x0880	0x288B      	GOTO       L__main78
0x0881	0x3000      	MOVLW      0
0x0882	0x0246      	SUBWF      _D1+2, 0
0x0883	0x1D03      	BTFSS      STATUS, 2
0x0884	0x288B      	GOTO       L__main78
0x0885	0x3000      	MOVLW      0
0x0886	0x0245      	SUBWF      _D1+1, 0
0x0887	0x1D03      	BTFSS      STATUS, 2
0x0888	0x288B      	GOTO       L__main78
0x0889	0x300A      	MOVLW      10
0x088A	0x0244      	SUBWF      _D1, 0
L__main78:
0x088B	0x1803      	BTFSC      STATUS, 0
0x088C	0x2891      	GOTO       L_main28
;BicycleSafetyProject.c,259 :: 		PORTB |= 0x40;  // Turn on motor 1
0x088D	0x1706      	BSF        PORTB, 6
;BicycleSafetyProject.c,260 :: 		mspeed1 = 250;  // Set high speed
0x088E	0x30FA      	MOVLW      250
0x088F	0x00D4      	MOVWF      _mspeed1
;BicycleSafetyProject.c,261 :: 		} else if (D1 < 30) {
0x0890	0x28BC      	GOTO       L_main29
L_main28:
0x0891	0x3000      	MOVLW      0
0x0892	0x0247      	SUBWF      _D1+3, 0
0x0893	0x1D03      	BTFSS      STATUS, 2
0x0894	0x289F      	GOTO       L__main79
0x0895	0x3000      	MOVLW      0
0x0896	0x0246      	SUBWF      _D1+2, 0
0x0897	0x1D03      	BTFSS      STATUS, 2
0x0898	0x289F      	GOTO       L__main79
0x0899	0x3000      	MOVLW      0
0x089A	0x0245      	SUBWF      _D1+1, 0
0x089B	0x1D03      	BTFSS      STATUS, 2
0x089C	0x289F      	GOTO       L__main79
0x089D	0x301E      	MOVLW      30
0x089E	0x0244      	SUBWF      _D1, 0
L__main79:
0x089F	0x1803      	BTFSC      STATUS, 0
0x08A0	0x28A5      	GOTO       L_main30
;BicycleSafetyProject.c,262 :: 		PORTB |= 0x40;   // Maintain motor 1
0x08A1	0x1706      	BSF        PORTB, 6
;BicycleSafetyProject.c,263 :: 		mspeed1 = 200;  // Set medium speed
0x08A2	0x30C8      	MOVLW      200
0x08A3	0x00D4      	MOVWF      _mspeed1
;BicycleSafetyProject.c,264 :: 		} else if (D1 < 50) {
0x08A4	0x28BC      	GOTO       L_main31
L_main30:
0x08A5	0x3000      	MOVLW      0
0x08A6	0x0247      	SUBWF      _D1+3, 0
0x08A7	0x1D03      	BTFSS      STATUS, 2
0x08A8	0x28B3      	GOTO       L__main80
0x08A9	0x3000      	MOVLW      0
0x08AA	0x0246      	SUBWF      _D1+2, 0
0x08AB	0x1D03      	BTFSS      STATUS, 2
0x08AC	0x28B3      	GOTO       L__main80
0x08AD	0x3000      	MOVLW      0
0x08AE	0x0245      	SUBWF      _D1+1, 0
0x08AF	0x1D03      	BTFSS      STATUS, 2
0x08B0	0x28B3      	GOTO       L__main80
0x08B1	0x3032      	MOVLW      50
0x08B2	0x0244      	SUBWF      _D1, 0
L__main80:
0x08B3	0x1803      	BTFSC      STATUS, 0
0x08B4	0x28B9      	GOTO       L_main32
;BicycleSafetyProject.c,265 :: 		PORTB |= 0x40;   // Maintain motor 1
0x08B5	0x1706      	BSF        PORTB, 6
;BicycleSafetyProject.c,266 :: 		mspeed1 = 175;  // Set low speed
0x08B6	0x30AF      	MOVLW      175
0x08B7	0x00D4      	MOVWF      _mspeed1
;BicycleSafetyProject.c,267 :: 		} else {
0x08B8	0x28BC      	GOTO       L_main33
L_main32:
;BicycleSafetyProject.c,268 :: 		PORTB &= 0xBF;   // Turn off motor 1
0x08B9	0x30BF      	MOVLW      191
0x08BA	0x0586      	ANDWF      PORTB, 1
;BicycleSafetyProject.c,269 :: 		mspeed1 = 0;     // Stop motor
0x08BB	0x01D4      	CLRF       _mspeed1
;BicycleSafetyProject.c,270 :: 		}
L_main33:
L_main31:
L_main29:
;BicycleSafetyProject.c,271 :: 		D1read = 0x00;       // Clear read flag for sensor 1
0x08BC	0x01BA      	CLRF       _D1read
;BicycleSafetyProject.c,272 :: 		}
L_main27:
;BicycleSafetyProject.c,275 :: 		if (D2read & 0x01) {
0x08BD	0x1C3B      	BTFSS      _D2read, 0
0x08BE	0x28FF      	GOTO       L_main34
;BicycleSafetyProject.c,276 :: 		if (D2 < 10) {
0x08BF	0x3000      	MOVLW      0
0x08C0	0x024D      	SUBWF      _D2+3, 0
0x08C1	0x1D03      	BTFSS      STATUS, 2
0x08C2	0x28CD      	GOTO       L__main81
0x08C3	0x3000      	MOVLW      0
0x08C4	0x024C      	SUBWF      _D2+2, 0
0x08C5	0x1D03      	BTFSS      STATUS, 2
0x08C6	0x28CD      	GOTO       L__main81
0x08C7	0x3000      	MOVLW      0
0x08C8	0x024B      	SUBWF      _D2+1, 0
0x08C9	0x1D03      	BTFSS      STATUS, 2
0x08CA	0x28CD      	GOTO       L__main81
0x08CB	0x300A      	MOVLW      10
0x08CC	0x024A      	SUBWF      _D2, 0
L__main81:
0x08CD	0x1803      	BTFSC      STATUS, 0
0x08CE	0x28D3      	GOTO       L_main35
;BicycleSafetyProject.c,277 :: 		mspeed2 = 250;  // Set high speed
0x08CF	0x30FA      	MOVLW      250
0x08D0	0x00CF      	MOVWF      _mspeed2
;BicycleSafetyProject.c,278 :: 		PORTC |= 0x08; // Turn on motor 2
0x08D1	0x1587      	BSF        PORTC, 3
;BicycleSafetyProject.c,279 :: 		} else if (D2 < 30) {
0x08D2	0x28FE      	GOTO       L_main36
L_main35:
0x08D3	0x3000      	MOVLW      0
0x08D4	0x024D      	SUBWF      _D2+3, 0
0x08D5	0x1D03      	BTFSS      STATUS, 2
0x08D6	0x28E1      	GOTO       L__main82
0x08D7	0x3000      	MOVLW      0
0x08D8	0x024C      	SUBWF      _D2+2, 0
0x08D9	0x1D03      	BTFSS      STATUS, 2
0x08DA	0x28E1      	GOTO       L__main82
0x08DB	0x3000      	MOVLW      0
0x08DC	0x024B      	SUBWF      _D2+1, 0
0x08DD	0x1D03      	BTFSS      STATUS, 2
0x08DE	0x28E1      	GOTO       L__main82
0x08DF	0x301E      	MOVLW      30
0x08E0	0x024A      	SUBWF      _D2, 0
L__main82:
0x08E1	0x1803      	BTFSC      STATUS, 0
0x08E2	0x28E7      	GOTO       L_main37
;BicycleSafetyProject.c,280 :: 		mspeed2 = 120;  // Set medium speed
0x08E3	0x3078      	MOVLW      120
0x08E4	0x00CF      	MOVWF      _mspeed2
;BicycleSafetyProject.c,281 :: 		PORTC |= 0x08; // Maintain motor 2
0x08E5	0x1587      	BSF        PORTC, 3
;BicycleSafetyProject.c,282 :: 		} else if (D2 < 50) {
0x08E6	0x28FE      	GOTO       L_main38
L_main37:
0x08E7	0x3000      	MOVLW      0
0x08E8	0x024D      	SUBWF      _D2+3, 0
0x08E9	0x1D03      	BTFSS      STATUS, 2
0x08EA	0x28F5      	GOTO       L__main83
0x08EB	0x3000      	MOVLW      0
0x08EC	0x024C      	SUBWF      _D2+2, 0
0x08ED	0x1D03      	BTFSS      STATUS, 2
0x08EE	0x28F5      	GOTO       L__main83
0x08EF	0x3000      	MOVLW      0
0x08F0	0x024B      	SUBWF      _D2+1, 0
0x08F1	0x1D03      	BTFSS      STATUS, 2
0x08F2	0x28F5      	GOTO       L__main83
0x08F3	0x3032      	MOVLW      50
0x08F4	0x024A      	SUBWF      _D2, 0
L__main83:
0x08F5	0x1803      	BTFSC      STATUS, 0
0x08F6	0x28FC      	GOTO       L_main39
;BicycleSafetyProject.c,283 :: 		mspeed2 = 60;   // Set low speed
0x08F7	0x303C      	MOVLW      60
0x08F8	0x00CF      	MOVWF      _mspeed2
;BicycleSafetyProject.c,284 :: 		PORTC |= 0x808; // Maintain motor 2
0x08F9	0x3008      	MOVLW      8
0x08FA	0x0487      	IORWF      PORTC, 1
;BicycleSafetyProject.c,285 :: 		} else {
0x08FB	0x28FE      	GOTO       L_main40
L_main39:
;BicycleSafetyProject.c,286 :: 		mspeed2 = 0;    // Stop motor
0x08FC	0x01CF      	CLRF       _mspeed2
;BicycleSafetyProject.c,287 :: 		PORTC &= ~0x08; // Turn off motor 2
0x08FD	0x1187      	BCF        PORTC, 3
;BicycleSafetyProject.c,288 :: 		}
L_main40:
L_main38:
L_main36:
;BicycleSafetyProject.c,289 :: 		D2read = 0x00;       // Clear read flag for sensor 2
0x08FE	0x01BB      	CLRF       _D2read
;BicycleSafetyProject.c,290 :: 		}
L_main34:
;BicycleSafetyProject.c,291 :: 		motor1();               // Update motor 1
0x08FF	0x118A      	BCF        PCLATH, 3
0x0900	0x2497      	CALL       _motor1
0x0901	0x158A      	BSF        PCLATH, 3
;BicycleSafetyProject.c,292 :: 		motor2();               // Update motor 2
0x0902	0x118A      	BCF        PCLATH, 3
0x0903	0x23C1      	CALL       _motor2
0x0904	0x158A      	BSF        PCLATH, 3
;BicycleSafetyProject.c,293 :: 		}
L_main26:
;BicycleSafetyProject.c,295 :: 		if(servo_flag){
0x0905	0x1283      	BCF        STATUS, 5
0x0906	0x086A      	MOVF       _servo_flag, 0
0x0907	0x1903      	BTFSC      STATUS, 2
0x0908	0x2939      	GOTO       L_main41
;BicycleSafetyProject.c,296 :: 		sonar_e = 0;         // disable sonar read
0x0909	0x01EE      	CLRF       _sonar_e
;BicycleSafetyProject.c,297 :: 		mspeed1 = 0;
0x090A	0x01D4      	CLRF       _mspeed1
;BicycleSafetyProject.c,298 :: 		mspeed2 = 0;
0x090B	0x01CF      	CLRF       _mspeed2
;BicycleSafetyProject.c,299 :: 		if(angle == 4000){
0x090C	0x1683      	BSF        STATUS, 5
0x090D	0x0821      	MOVF       _angle+1, 0
0x090E	0x3A0F      	XORLW      15
0x090F	0x1D03      	BTFSS      STATUS, 2
0x0910	0x2913      	GOTO       L__main84
0x0911	0x30A0      	MOVLW      160
0x0912	0x0620      	XORWF      _angle, 0
L__main84:
0x0913	0x1D03      	BTFSS      STATUS, 2
0x0914	0x291A      	GOTO       L_main42
;BicycleSafetyProject.c,300 :: 		angle = 2000;
0x0915	0x30D0      	MOVLW      208
0x0916	0x00A0      	MOVWF      _angle
0x0917	0x3007      	MOVLW      7
0x0918	0x00A1      	MOVWF      _angle+1
;BicycleSafetyProject.c,301 :: 		} else if(angle == 2000) {
0x0919	0x2926      	GOTO       L_main43
L_main42:
0x091A	0x0821      	MOVF       _angle+1, 0
0x091B	0x3A07      	XORLW      7
0x091C	0x1D03      	BTFSS      STATUS, 2
0x091D	0x2920      	GOTO       L__main85
0x091E	0x30D0      	MOVLW      208
0x091F	0x0620      	XORWF      _angle, 0
L__main85:
0x0920	0x1D03      	BTFSS      STATUS, 2
0x0921	0x2926      	GOTO       L_main44
;BicycleSafetyProject.c,302 :: 		angle = 4000;
0x0922	0x30A0      	MOVLW      160
0x0923	0x00A0      	MOVWF      _angle
0x0924	0x300F      	MOVLW      15
0x0925	0x00A1      	MOVWF      _angle+1
;BicycleSafetyProject.c,303 :: 		}
L_main44:
L_main43:
;BicycleSafetyProject.c,304 :: 		CCP2CON =0x08;
0x0926	0x3008      	MOVLW      8
0x0927	0x1283      	BCF        STATUS, 5
0x0928	0x009D      	MOVWF      CCP2CON
;BicycleSafetyProject.c,305 :: 		T1CON = 0x01;              //change tmr1 prescaler to 1:1
0x0929	0x3001      	MOVLW      1
0x092A	0x0090      	MOVWF      T1CON
;BicycleSafetyProject.c,306 :: 		PIE2 |= 0x01;
0x092B	0x1683      	BSF        STATUS, 5
0x092C	0x140D      	BSF        PIE2, 0
;BicycleSafetyProject.c,308 :: 		msDelay(5000);             // delay 5 seconds
0x092D	0x3088      	MOVLW      136
0x092E	0x00B8      	MOVWF      FARG_msDelay_msCnt
0x092F	0x3013      	MOVLW      19
0x0930	0x00B9      	MOVWF      FARG_msDelay_msCnt+1
0x0931	0x118A      	BCF        PCLATH, 3
0x0932	0x23DB      	CALL       _msDelay
0x0933	0x158A      	BSF        PCLATH, 3
;BicycleSafetyProject.c,309 :: 		servo_flag = 0;            //disable sonar flag
0x0934	0x1283      	BCF        STATUS, 5
0x0935	0x1303      	BCF        STATUS, 6
0x0936	0x01EA      	CLRF       _servo_flag
;BicycleSafetyProject.c,310 :: 		sonar_e = 1;               // enable sonar read
0x0937	0x3001      	MOVLW      1
0x0938	0x00EE      	MOVWF      _sonar_e
;BicycleSafetyProject.c,311 :: 		}
L_main41:
;BicycleSafetyProject.c,312 :: 		}
0x0939	0x2878      	GOTO       L_main24
;BicycleSafetyProject.c,313 :: 		}
L_end_main:
0x093A	0x293A      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004     [360]    _interrupt
0x016C       [7]    _Delay_50us
0x0173      [13]    _Delay_5500us
0x0180       [3]    _Delay_1us
0x0183      [87]    _Lcd_Cmd
0x01DA      [20]    _usDelay
0x01EE     [376]    _Div_32x32_U
0x0366      [55]    _Mul_32x32_U
0x039D       [7]    _____DoICP
0x03A4      [20]    _PWMusDelay
0x03B8       [9]    _Lcd_Chr_CP
0x03C1      [26]    _motor2
0x03DB      [32]    _msDelay
0x03FB      [11]    _CCPcompare_init
0x0406      [67]    _Lcd_Out
0x0449      [78]    _Lcd_Init
0x0497       [5]    _motor1
0x049C      [19]    _CCPPWM_init
0x04AF      [40]    _sonar_init
0x04D7       [8]    _ATD_init
0x04DF      [24]    _ATD_read0
0x04F7      [43]    _Mul_16X16_U
0x0522      [29]    _Div_16X16_U
0x053F     [109]    _sonar_read1
0x05AC      [28]    _ATD_read2
0x05C8      [28]    _ATD_read1
0x05E4     [109]    _sonar_read2
0x0651      [25]    _port_init
0x066A      [12]    ___CC2DW
0x0800     [315]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [0]    RB3_bit
0x0006       [0]    RB2_bit
0x0006       [0]    RB5_bit
0x0006       [1]    PORTB
0x0006       [0]    RB4_bit
0x0006       [0]    RB1_bit
0x0006       [0]    LCD_D6
0x0006       [0]    LCD_D5
0x0006       [0]    LCD_D7
0x0006       [0]    LCD_RS
0x0006       [0]    LCD_EN
0x0006       [0]    LCD_D4
0x0006       [0]    RB0_bit
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x0009       [1]    PORTE
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PIR1
0x000D       [1]    PIR2
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [1]    T1CON
0x0012       [1]    T2CON
0x0015       [1]    CCPR1L
0x0017       [1]    CCP1CON
0x001B       [1]    CCPR2L
0x001C       [1]    CCPR2H
0x001D       [1]    CCP2CON
0x001E       [1]    ADRESH
0x001F       [1]    ADCON0
0x0020       [1]    ___math_tempb
0x0027       [7]    _txt1
0x002E       [4]    _txt2
0x0032       [8]    ?lstr1_BicycleSafetyProject
0x003A       [1]    _D1read
0x003B       [1]    _D2read
0x003C       [4]    _T2counts
0x0040       [4]    _T2time
0x0044       [4]    _D1
0x0048       [1]    _HL
0x0049       [1]    _rturn
0x004A       [4]    _D2
0x004E       [1]    _lturn
0x004F       [1]    _mspeed2
0x0050       [2]    _period
0x0052       [2]    _hallA2
0x0054       [1]    _mspeed1
0x0055       [2]    _duty
0x0057       [4]    _T1time
0x005B       [2]    _T2overflow
0x005D       [2]    _T1overflow
0x005F       [4]    _T1counts
0x0063       [2]    _flexD1
0x0065       [1]    _tickb
0x0066       [2]    _pulse
0x0068       [1]    _tick4
0x0069       [1]    _ticka
0x006A       [1]    _servo_flag
0x006B       [2]    _flexA0
0x006D       [0]    __Lib_Lcd_cmd_status
0x006E       [1]    _sonar_e
0x006F       [1]    _tick2
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [1]    TRISA
0x0086       [0]    TRISB3_bit
0x0086       [0]    TRISB4_bit
0x0086       [0]    LCD_D4_Direction
0x0086       [0]    TRISB2_bit
0x0086       [1]    TRISB
0x0086       [0]    TRISB0_bit
0x0086       [0]    TRISB1_bit
0x0086       [0]    LCD_D5_Direction
0x0086       [0]    TRISB5_bit
0x0086       [0]    LCD_RS_Direction
0x0086       [0]    LCD_D6_Direction
0x0086       [0]    LCD_D7_Direction
0x0086       [0]    LCD_EN_Direction
0x0087       [1]    TRISC
0x0088       [1]    TRISD
0x0089       [1]    TRISE
0x008C       [1]    PIE1
0x008D       [1]    PIE2
0x0092       [1]    PR2
0x009E       [1]    ADRESL
0x009F       [1]    ADCON1
0x00A0       [2]    _angle
0x00A2       [2]    _flexA1
0x00A4       [2]    _flexD0
0x00A6       [1]    _tick3
0x00A7       [1]    _tick
0x00A8       [1]    _tick1
0x00A9       [4]    _dis
0x00AD       [4]    _v
0x00B1       [1]    _tick5
0x00B2       [1]    ___savePCLATH
0x00B3       [1]    ___saveSTATUS
0x00B4       [2]    _hallD2
0x00B6       [2]    ___DoICPAddr
0x00B8       [2]    FARG_msDelay_msCnt
0x00B8       [1]    FARG_Lcd_Out_row
0x00B9       [1]    FARG_Lcd_Out_column
0x00BA       [1]    FARG_Lcd_Out_text
0x00BB       [1]    Lcd_Out_i_L0
0x00BC       [1]    FARG_Lcd_Chr_CP_out_char
0x00BC       [2]    FARG_PWMusDelay_PWMusCnt
0x00BE       [1]    FARG_Lcd_Cmd_out_char
0x00BF       [2]    FARG_usDelay_usCnt
